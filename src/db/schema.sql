-- This source file has been generated by a tool, do not edit
-- PostgreSQL schema for each table exposed by Data Access Platform (DAP)
-- For informational purposes only, not a standard

CREATE SCHEMA IF NOT EXISTS "canvas";
CREATE SCHEMA IF NOT EXISTS "catalog";
CREATE SCHEMA IF NOT EXISTS "canvas_logs";
CREATE TYPE "canvas"."access_tokens__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."account_users__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."accounts__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted', 'suspended');
CREATE TYPE "canvas"."assessment_question_banks__context_type" AS ENUM ('__dap_unspecified__', 'Account', 'Course');
CREATE TYPE "canvas"."assessment_question_banks__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."assessment_questions__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'independently_edited', 'deleted');
CREATE TYPE "canvas"."asset_user_accesses__action_level" AS ENUM ('__dap_unspecified__', 'view', 'participate');
CREATE TYPE "canvas"."asset_user_accesses__asset_category" AS ENUM ('__dap_unspecified__', 'announcements', 'assignments', 'calendar_feed', 'collaborations', 'conferences', 'files', 'grades', 'home', 'modules', 'outcomes', 'pages', 'quizzes', 'roster', 'speed_grader', 'syllabus', 'topics', 'calendar', 'external_tools', 'wiki', 'external_urls');
CREATE TYPE "canvas"."asset_user_accesses__context_type" AS ENUM ('__dap_unspecified__', 'Account', 'AssessmentQuestion', 'Course', 'Group', 'User');
CREATE TYPE "canvas"."asset_user_accesses__membership_type" AS ENUM ('__dap_unspecified__', 'TeacherEnrollment', 'AccountUser', 'Other', 'User', 'NilClass', 'TaEnrollment', 'DesignerEnrollment', 'ObserverEnrollment', 'GroupMembership', 'StudentEnrollment', 'StudentViewEnrollment');
CREATE TYPE "canvas"."assignment_groups__context_type" AS ENUM ('__dap_unspecified__', 'Course');
CREATE TYPE "canvas"."assignment_groups__workflow_state" AS ENUM ('__dap_unspecified__', 'available', 'deleted', 'active');
CREATE TYPE "canvas"."assignment_override_students__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."assignment_overrides__set_type" AS ENUM ('__dap_unspecified__', 'Group', 'CourseSection', 'ADHOC', 'Noop');
CREATE TYPE "canvas"."assignment_overrides__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."assignments__context_type" AS ENUM ('__dap_unspecified__', 'Course');
CREATE TYPE "canvas"."assignments__grading_type" AS ENUM ('__dap_unspecified__', 'gpa_scale', 'letter_grade', 'not_graded', 'pass_fail', 'percent', 'points', 'default');
CREATE TYPE "canvas"."assignments__submission_types" AS ENUM ('__dap_unspecified__', 'discussion_topic', 'online_quiz', 'on_paper', 'none', 'external_tool', 'online', 'online_text_entry', 'online_url', 'online_upload', 'media_recording', 'not_graded', 'wiki_page', 'student_annotation', 'default_external_tool');
CREATE TYPE "canvas"."assignments__turnitin_settings__exclude_small_matches_type" AS ENUM ('__dap_unspecified__', 'off', 'words', 'percent');
CREATE TYPE "canvas"."assignments__turnitin_settings__originality_report_visibility" AS ENUM ('__dap_unspecified__', 'immediate', 'after_grading', 'after_due_date', 'never');
CREATE TYPE "canvas"."assignments__workflow_state" AS ENUM ('__dap_unspecified__', 'unpublished', 'published', 'deleted', 'duplicating', 'fail_to_import', 'failed_to_duplicate', 'failed_to_import', 'failed_to_migrate', 'importing', 'migrating');
CREATE TYPE "canvas"."attachment_associations__context_type" AS ENUM ('__dap_unspecified__', 'ConversationMessage', 'Submission', 'Course', 'Group');
CREATE TYPE "canvas"."attachments__context_type" AS ENUM ('__dap_unspecified__', 'Account', 'AssessmentQuestion', 'Assignment', 'Attachment', 'ContentExport', 'ContentMigration', 'Course', 'Eportfolio', 'EpubExport', 'Folder', 'GradebookUpload', 'Group', 'GroupAndMembershipImporter', 'OutcomeImport', 'Purgatory', 'Quizzes::Quiz', 'Quizzes::QuizStatistics', 'Quizzes::QuizSubmission', 'SisBatch', 'Submission', 'User');
CREATE TYPE "canvas"."attachments__file_state" AS ENUM ('__dap_unspecified__', 'unpublished', 'published', 'deleted', 'available', 'hidden', 'errored', 'broken');
CREATE TYPE "canvas"."attachments__workflow_state" AS ENUM ('__dap_unspecified__', 'deleted', 'errored', 'pending_upload', 'processed', 'processing', 'to_be_zipped', 'unattached', 'unattached_temporary', 'zipped', 'zipping');
CREATE TYPE "canvas"."calendar_events__context_type" AS ENUM ('__dap_unspecified__', 'AppointmentGroup', 'Course', 'CourseSection', 'Group', 'User', 'Account');
CREATE TYPE "canvas"."calendar_events__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'locked', 'deleted');
CREATE TYPE "canvas"."collaboration__context_type" AS ENUM ('__dap_unspecified__', 'Account', 'Group', 'Course');
CREATE TYPE "canvas"."comment_bank_items__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."communication_channels__workflow_state" AS ENUM ('__dap_unspecified__', 'unconfirmed', 'active', 'retired');
CREATE TYPE "canvas"."content_migrations__context_type" AS ENUM ('__dap_unspecified__', 'Course', 'Account', 'Group', 'User');
CREATE TYPE "canvas"."content_migrations__workflow_state" AS ENUM ('__dap_unspecified__', 'created', 'exported', 'exporting', 'failed', 'imported', 'importing', 'pre_process_error', 'pre_processed', 'pre_processing', 'queued');
CREATE TYPE "canvas"."content_participation_counts__content_type" AS ENUM ('__dap_unspecified__', 'Submission');
CREATE TYPE "canvas"."content_participation_counts__context_type" AS ENUM ('__dap_unspecified__', 'Course');
CREATE TYPE "canvas"."content_participations__content_type" AS ENUM ('__dap_unspecified__', 'Submission');
CREATE TYPE "canvas"."content_participations__workflow_state" AS ENUM ('__dap_unspecified__', 'read', 'unread');
CREATE TYPE "canvas"."content_shares__read_state" AS ENUM ('__dap_unspecified__', 'read', 'unread');
CREATE TYPE "canvas"."content_shares__type" AS ENUM ('__dap_unspecified__', 'SentContentShare', 'ReceivedContentShare');
CREATE TYPE "canvas"."content_tags__associated_asset_type" AS ENUM ('__dap_unspecified__', 'LearningOutcomeGroup', 'Lti::ResourceLink');
CREATE TYPE "canvas"."content_tags__content_type" AS ENUM ('__dap_unspecified__', 'Announcement', 'AssessmentQuestionBank', 'Assignment', 'Attachment', 'ContextExternalTool', 'ContextModuleSubHeader', 'DiscussionTopic', 'ExternalUrl', 'LearningOutcome', 'LearningOutcomeGroup', 'LiveAssessments::Assessment', 'Lti::MessageHandler', 'Quizzes::Quiz', 'Rubric', 'WikiPage');
CREATE TYPE "canvas"."content_tags__context_type" AS ENUM ('__dap_unspecified__', 'Account', 'Assignment', 'Course', 'LearningOutcomeGroup', 'Quizzes::Quiz', 'User');
CREATE TYPE "canvas"."content_tags__tag_type" AS ENUM ('__dap_unspecified__', 'context_module', 'default', 'learning_outcome', 'learning_outcome_association');
CREATE TYPE "canvas"."content_tags__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'unpublished', 'deleted');
CREATE TYPE "canvas"."context_external_tools__context_type" AS ENUM ('__dap_unspecified__', 'Account', 'Course');
CREATE TYPE "canvas"."context_external_tools__workflow_state" AS ENUM ('__dap_unspecified__', 'anonymous', 'deleted', 'disabled', 'email_only', 'name_only', 'public');
CREATE TYPE "canvas"."context_module_progressions__workflow_state" AS ENUM ('__dap_unspecified__', 'completed', 'locked', 'started', 'unlocked');
CREATE TYPE "canvas"."context_modules__context_type" AS ENUM ('__dap_unspecified__', 'Course');
CREATE TYPE "canvas"."context_modules__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted', 'unpublished');
CREATE TYPE "canvas"."conversation_message_participants__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."conversation_messages__asset_type" AS ENUM ('__dap_unspecified__', 'Submission');
CREATE TYPE "canvas"."conversation_messages__context_type" AS ENUM ('__dap_unspecified__', 'Account');
CREATE TYPE "canvas"."conversation_messages__media_comment_type" AS ENUM ('__dap_unspecified__', 'audio', 'audio/*', 'video', 'video/*');
CREATE TYPE "canvas"."conversation_participants__workflow_state" AS ENUM ('__dap_unspecified__', 'read', 'unread', 'archived', 'deleted');
CREATE TYPE "canvas"."conversations__context_type" AS ENUM ('__dap_unspecified__', 'Course', 'Group', 'Account');
CREATE TYPE "canvas"."course_sections__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."courses__workflow_state" AS ENUM ('__dap_unspecified__', 'created', 'claimed', 'available', 'completed', 'deleted');
CREATE TYPE "canvas"."custom_gradebook_columns__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'hidden', 'deleted');
CREATE TYPE "canvas"."developer_key_account_bindings__workflow_state" AS ENUM ('__dap_unspecified__', 'on', 'allow', 'off');
CREATE TYPE "canvas"."developer_keys__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted', 'inactive');
CREATE TYPE "canvas"."discussion_entries__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."discussion_entry_participants__workflow_state" AS ENUM ('__dap_unspecified__', 'read', 'unread');
CREATE TYPE "canvas"."discussion_topic_participants__workflow_state" AS ENUM ('__dap_unspecified__', 'read', 'unread');
CREATE TYPE "canvas"."discussion_topics__context_type" AS ENUM ('__dap_unspecified__', 'Course', 'Group');
CREATE TYPE "canvas"."discussion_topics__discussion_type" AS ENUM ('__dap_unspecified__', 'side_comment', 'threaded');
CREATE TYPE "canvas"."discussion_topics__type" AS ENUM ('__dap_unspecified__', 'Announcement');
CREATE TYPE "canvas"."discussion_topics__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted', 'locked', 'post_delayed', 'unpublished');
CREATE TYPE "canvas"."enrollment_dates_overrides__context_type" AS ENUM ('__dap_unspecified__', 'Account');
CREATE TYPE "canvas"."enrollment_dates_overrides__enrollment_type" AS ENUM ('__dap_unspecified__', 'DesignerEnrollment', 'StudentEnrollment', 'TaEnrollment', 'TeacherEnrollment');
CREATE TYPE "canvas"."enrollment_states__state" AS ENUM ('__dap_unspecified__', 'active', 'invited', 'creation_pending', 'deleted', 'rejected', 'completed', 'inactive', 'current_and_invited', 'current_and_future', 'current_and_concluded', 'pending_active', 'pending_invited');
CREATE TYPE "canvas"."enrollment_terms__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."enrollments__type" AS ENUM ('__dap_unspecified__', 'StudentEnrollment', 'TeacherEnrollment', 'TaEnrollment', 'DesignerEnrollment', 'ObserverEnrollment', 'StudentViewEnrollment');
CREATE TYPE "canvas"."enrollments__workflow_state" AS ENUM ('__dap_unspecified__', 'creation_pending', 'invited', 'rejected', 'active', 'inactive', 'completed', 'deleted');
CREATE TYPE "canvas"."favorites__context_type" AS ENUM ('__dap_unspecified__', 'Course', 'Group');
CREATE TYPE "canvas"."folders__context_type" AS ENUM ('__dap_unspecified__', 'Account', 'Course', 'Group', 'User');
CREATE TYPE "canvas"."folders__unique_type" AS ENUM ('__dap_unspecified__', 'media', 'student annotation documents', 'icon maker icons', 'buttons and icons');
CREATE TYPE "canvas"."folders__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted', 'hidden', 'private', 'visible');
CREATE TYPE "canvas"."grading_period_groups__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."grading_periods__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."grading_standards__context_type" AS ENUM ('__dap_unspecified__', 'Account', 'Course');
CREATE TYPE "canvas"."grading_standards__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."group_categories__context_type" AS ENUM ('__dap_unspecified__', 'Account', 'Course');
CREATE TYPE "canvas"."group_categories__role" AS ENUM ('__dap_unspecified__', 'communities', 'student_organized', 'imported');
CREATE TYPE "canvas"."group_memberships__workflow_state" AS ENUM ('__dap_unspecified__', 'accepted', 'deleted', 'invited', 'rejected', 'requested');
CREATE TYPE "canvas"."groups__context_type" AS ENUM ('__dap_unspecified__', 'Account', 'Course');
CREATE TYPE "canvas"."groups__default_view" AS ENUM ('__dap_unspecified__', 'feed');
CREATE TYPE "canvas"."groups__workflow_state" AS ENUM ('__dap_unspecified__', 'available', 'deleted', 'active');
CREATE TYPE "canvas"."learning_outcome_groups__context_type" AS ENUM ('__dap_unspecified__', 'Account', 'Course', 'College', 'Department');
CREATE TYPE "canvas"."learning_outcome_groups__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."learning_outcome_question_results__associated_asset_type" AS ENUM ('__dap_unspecified__', 'AssessmentQuestion');
CREATE TYPE "canvas"."learning_outcome_results__artifact_type" AS ENUM ('__dap_unspecified__', 'LiveAssessments::Submission', 'Quizzes::QuizSubmission', 'RubricAssessment', 'Submission');
CREATE TYPE "canvas"."learning_outcome_results__associated_asset_type" AS ENUM ('__dap_unspecified__', 'AssessmentQuestion', 'LiveAssessments::Assessment', 'Assignment', 'Quizzes::Quiz');
CREATE TYPE "canvas"."learning_outcome_results__association_type" AS ENUM ('__dap_unspecified__', 'Assignment', 'Quizzes::Quiz', 'RubricAssociation');
CREATE TYPE "canvas"."learning_outcome_results__context_type" AS ENUM ('__dap_unspecified__', 'Course');
CREATE TYPE "canvas"."learning_outcome_results__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."learning_outcomes__calculation_method" AS ENUM ('__dap_unspecified__', 'decaying_average', 'average', 'highest', 'latest', 'n_mastery');
CREATE TYPE "canvas"."learning_outcomes__context_type" AS ENUM ('__dap_unspecified__', 'Account', 'Course');
CREATE TYPE "canvas"."learning_outcomes__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted', 'retired');
CREATE TYPE "canvas"."lti_line_items__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."lti_resource_links__context_type" AS ENUM ('__dap_unspecified__', 'Account', 'Assignment', 'Course', 'Group');
CREATE TYPE "canvas"."lti_resource_links__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."lti_results__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."master_courses_child_content_tags__content_type" AS ENUM ('__dap_unspecified__', 'AssessmentQuestionBank', 'Assignment', 'AssignmentGroup', 'Attachment', 'CalendarEvent', 'ContextExternalTool', 'ContextModule', 'ContentTag', 'CoursePace', 'DiscussionTopic', 'LearningOutcome', 'LearningOutcomeGroup', 'Rubric', 'Wiki', 'WikiPage', 'Quizzes::Quiz');
CREATE TYPE "canvas"."master_courses_child_subscriptions__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."master_courses_master_content_tags__content_type" AS ENUM ('__dap_unspecified__', 'AssessmentQuestionBank', 'Assignment', 'AssignmentGroup', 'Attachment', 'CalendarEvent', 'ContextExternalTool', 'ContextModule', 'ContentTag', 'CoursePace', 'DiscussionTopic', 'LearningOutcome', 'Rubric', 'Wiki', 'WikiPage', 'Quizzes::Quiz');
CREATE TYPE "canvas"."master_courses_master_migrations__workflow_state" AS ENUM ('__dap_unspecified__', 'completed', 'created', 'exporting', 'exports_failed', 'imports_failed', 'imports_queued', 'queued');
CREATE TYPE "canvas"."master_courses_master_templates__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."master_courses_migration_results__import_type" AS ENUM ('__dap_unspecified__', 'full', 'selective');
CREATE TYPE "canvas"."master_courses_migration_results__state" AS ENUM ('__dap_unspecified__', 'failed', 'completed', 'queued');
CREATE TYPE "canvas"."originality_reports__workflow_state" AS ENUM ('__dap_unspecified__', 'error', 'pending', 'scored');
CREATE TYPE "canvas"."outcome_proficiencies__context_type" AS ENUM ('__dap_unspecified__', 'Account', 'Course');
CREATE TYPE "canvas"."outcome_proficiencies__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."outcome_proficiency_ratings__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."pseudonyms__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted', 'suspended');
CREATE TYPE "canvas"."quiz_questions__question_data__regrade_option" AS ENUM ('__dap_unspecified__', 'available', 'unavailable', 'multiple_answers_question', 'multiple_choice_question', 'true_false_question', 'current_and_previous_correct', 'no_regrade', 'current_correct_only', 'full_credit', 'disabled');
CREATE TYPE "canvas"."quiz_questions__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted', 'generated');
CREATE TYPE "canvas"."quiz_submissions__workflow_state" AS ENUM ('__dap_unspecified__', 'complete', 'pending_review', 'preview', 'settings_only', 'untaken');
CREATE TYPE "canvas"."quizzes__context_type" AS ENUM ('__dap_unspecified__', 'Course');
CREATE TYPE "canvas"."quizzes__quiz_type" AS ENUM ('__dap_unspecified__', 'assignment', 'practice_quiz', 'graded_survey', 'survey');
CREATE TYPE "canvas"."quizzes__workflow_state" AS ENUM ('__dap_unspecified__', 'created', 'edited', 'unpublished', 'deleted', 'available');
CREATE TYPE "canvas"."role_overrides__context_type" AS ENUM ('__dap_unspecified__', 'Account');
CREATE TYPE "canvas"."roles__base_role_type" AS ENUM ('__dap_unspecified__', 'AccountAdmin', 'AccountMembership', 'DesignerEnrollment', 'NoPermissions', 'ObserverEnrollment', 'StudentEnrollment', 'TaEnrollment', 'TeacherEnrollment');
CREATE TYPE "canvas"."roles__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'built_in', 'deleted', 'inactive');
CREATE TYPE "canvas"."rubric_assessments__artifact_type" AS ENUM ('__dap_unspecified__', 'Submission', 'Assignment', 'ModeratedGrading::ProvisionalGrade');
CREATE TYPE "canvas"."rubric_assessments__assessment_type" AS ENUM ('__dap_unspecified__', 'grading', 'invited_assessment', 'peer_review');
CREATE TYPE "canvas"."rubric_associations__association_type" AS ENUM ('__dap_unspecified__', 'Account', 'Course', 'Assignment');
CREATE TYPE "canvas"."rubric_associations__context_type" AS ENUM ('__dap_unspecified__', 'Course', 'Account');
CREATE TYPE "canvas"."rubric_associations__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."rubrics__context_type" AS ENUM ('__dap_unspecified__', 'Account', 'Course');
CREATE TYPE "canvas"."rubrics__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."scores__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted');
CREATE TYPE "canvas"."submission_comments__context_type" AS ENUM ('__dap_unspecified__', 'Course');
CREATE TYPE "canvas"."submission_comments__media_comment_type" AS ENUM ('__dap_unspecified__', 'audio', 'video');
CREATE TYPE "canvas"."submission_versions__context_type" AS ENUM ('__dap_unspecified__', 'Course');
CREATE TYPE "canvas"."submissions__media_comment_type" AS ENUM ('__dap_unspecified__', 'audio', 'audio/*', 'video', 'video/*');
CREATE TYPE "canvas"."submissions__submission_type" AS ENUM ('__dap_unspecified__', 'basic_lti_launch', 'discussion_topic', 'external_tool', 'media_recording', 'online_file_upload', 'online_quiz', 'online_text_entry', 'online_upload', 'online_url', 'student_annotation');
CREATE TYPE "canvas"."submissions__workflow_state" AS ENUM ('__dap_unspecified__', 'graded', 'pending_review', 'submitted', 'unsubmitted', 'deleted');
CREATE TYPE "canvas"."users__workflow_state" AS ENUM ('__dap_unspecified__', 'creation_pending', 'deleted', 'pending_approval', 'pre_registered', 'registered');
CREATE TYPE "canvas"."web_conference_participants__participation_type" AS ENUM ('__dap_unspecified__', 'attendee', 'initiator', 'invitee');
CREATE TYPE "canvas"."web_conferences__conference_type" AS ENUM ('__dap_unspecified__', 'AdobeConnect', 'BigBlueButton', 'CiscoWebex', 'DimDim', 'Wimba', 'Wiziq');
CREATE TYPE "canvas"."web_conferences__context_type" AS ENUM ('__dap_unspecified__', 'Account', 'Course', 'Group');
CREATE TYPE "canvas"."wiki_pages__context_type" AS ENUM ('__dap_unspecified__', 'Course', 'Group');
CREATE TYPE "canvas"."wiki_pages__workflow_state" AS ENUM ('__dap_unspecified__', 'active', 'deleted', 'post_delayed', 'unpublished');
CREATE TYPE "canvas"."assignments__turnitin_settings" AS (
"originality_report_visibility" "canvas"."assignments__turnitin_settings__originality_report_visibility",
"exclude_small_matches_type" "canvas"."assignments__turnitin_settings__exclude_small_matches_type",
"exclude_small_matches_value" integer,
"s_paper_check" boolean,
"s_view_report" boolean,
"internet_check" boolean,
"journal_check" boolean,
"exclude_biblio" boolean,
"exclude_quoted" boolean,
"submit_papers_to" boolean
);
COMMENT ON TYPE "canvas"."assignments__turnitin_settings" IS 'Type extracted from column `assignments.turnitin_settings`.';
COMMENT ON COLUMN "canvas"."assignments__turnitin_settings"."originality_report_visibility" IS 'Allows to set the timeframe when the report will become visible.';
COMMENT ON COLUMN "canvas"."assignments__turnitin_settings"."exclude_small_matches_type" IS 'Exclude small sources from the Similarity Report by a set number of words or percentage.';
COMMENT ON COLUMN "canvas"."assignments__turnitin_settings"."exclude_small_matches_value" IS 'If exclude_small_matches_type is set to percent or number then the value will be will be a number (of words or a percent).';
COMMENT ON COLUMN "canvas"."assignments__turnitin_settings"."s_paper_check" IS 'If set to TRUE, will allow to compare submission against other students'' papers.';
COMMENT ON COLUMN "canvas"."assignments__turnitin_settings"."s_view_report" IS 'If set to TRUE students will be able to access their originality report.';
COMMENT ON COLUMN "canvas"."assignments__turnitin_settings"."internet_check" IS 'Select the content you''d like to compare papers against: current and archived website content.';
COMMENT ON COLUMN "canvas"."assignments__turnitin_settings"."journal_check" IS 'Select the content you''d like to compare papers against: periodicals, journals and publications.';
COMMENT ON COLUMN "canvas"."assignments__turnitin_settings"."exclude_biblio" IS 'Selecting this option will exclude text appearing in the bibliography, works cited, or references sections of student papers from being checked for matches when generating Similarity Reports.';
COMMENT ON COLUMN "canvas"."assignments__turnitin_settings"."exclude_quoted" IS 'Selecting this option will exclude text in student papers that is enclosed in quotation marks or is part of a block quotation (an indented block of text) from being checked for matches when generating Similarity Reports.';
COMMENT ON COLUMN "canvas"."assignments__turnitin_settings"."submit_papers_to" IS 'If set to FALSE, a similarity report will still be generated for paper submissions but students'' papers will not be stored in the Turnitin standard paper repository or the institution''s paper repository for future comparison.';
CREATE TYPE "canvas"."quiz_questions__question_data" AS (
"neutral_comments" text,
"answers" text,
"name" text,
"question_type" text,
"question_text" text,
"regrade_option" "canvas"."quiz_questions__question_data__regrade_option",
"correct_comments" text,
"incorrect_comments" text,
"text_after_answers" text,
"matching_answer_incorrect_matches" text,
"points_possible" double precision
);
COMMENT ON TYPE "canvas"."quiz_questions__question_data" IS 'Type extracted from column `quiz_questions.question_data`.';
COMMENT ON COLUMN "canvas"."quiz_questions__question_data"."neutral_comments" IS 'Comments to be displayed regardless of how the student answers the question.';
COMMENT ON COLUMN "canvas"."quiz_questions__question_data"."answers" IS 'Collection of possible answers.';
COMMENT ON COLUMN "canvas"."quiz_questions__question_data"."name" IS 'Name of the question.';
COMMENT ON COLUMN "canvas"."quiz_questions__question_data"."question_type" IS 'Denotes the type of the question.';
COMMENT ON COLUMN "canvas"."quiz_questions__question_data"."question_text" IS 'Text of the question.';
COMMENT ON COLUMN "canvas"."quiz_questions__question_data"."regrade_option" IS 'Denotes if regrading is available for the question. Possible values are `available` and `unavailable` for question types. Defaults to `available` for the allowed question types and NULL for the rest.';
COMMENT ON COLUMN "canvas"."quiz_questions__question_data"."correct_comments" IS 'Comments to be displayed if the student answers the question correctly.';
COMMENT ON COLUMN "canvas"."quiz_questions__question_data"."incorrect_comments" IS 'Comments to be displayed if the student answers the question incorrectly.';
COMMENT ON COLUMN "canvas"."quiz_questions__question_data"."text_after_answers" IS '(Used in *short_answer_question*, also known as *fill_in_the_blank*. Omitted for other question types.) Text following the missing word.';
COMMENT ON COLUMN "canvas"."quiz_questions__question_data"."matching_answer_incorrect_matches" IS '(Used in *matching_question*. Omitted for other question types.) List of distractors (incorrect answers), delimited by new lines, that will be seeded with all the *answer_match_right* values.';
COMMENT ON COLUMN "canvas"."quiz_questions__question_data"."points_possible" IS 'Maximum number of points that can be awarded for answering the question correctly.';
CREATE TYPE "canvas"."context_external_tools__settings" AS (
"course_home_sub_navigation" text,
"course_settings_sub_navigation" text,
"custom_fields" text,
"discussion_menu" text,
"discussion_topic_index_menu" text,
"discussion_topic_menu" text,
"editor_button" text,
"enabled" text,
"file_index_menu" text,
"file_menu" text,
"global_navigation" text,
"grade_passback" text,
"homework_selection" text,
"homework_submission" text,
"launch_presentation_document_target" text,
"link_selection" text,
"migration_selection" text,
"module_group_menu" text,
"module_index_menu" text,
"account_navigation" text,
"assignment_group_menu" text,
"assignment_index_menu" text,
"assignment_menu" text,
"assignment_selection" text,
"canvas_caliper_url" text,
"collaboration" text,
"content_migration" text,
"course_assignments_menu" text,
"course_navigation" text,
"module_menu" text,
"post_grades" text,
"quiz_index_menu" text,
"quiz_menu" text,
"similarity_detection" text,
"student_context_card" text,
"text" text,
"tool_configuration" text,
"use_1_3" text,
"user_navigation" text,
"visibility" text,
"wiki_index_menu" text,
"wiki_page_menu" text
);
COMMENT ON TYPE "canvas"."context_external_tools__settings" IS 'Type extracted from column `context_external_tools.settings`.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."course_home_sub_navigation" IS 'Course home sub navigation placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."course_settings_sub_navigation" IS 'Course settings sub navigation placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."custom_fields" IS 'Custom parameters provider request to share on every single LTI launch, each placement column might have its own set of custom_fields.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."discussion_menu" IS 'Discussion menu placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."discussion_topic_index_menu" IS 'Discussion topic index menu placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."discussion_topic_menu" IS 'Discussion topic menu placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."editor_button" IS 'RCE placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."enabled" IS 'Controls if the tool is disabled for user to click on, typically tool gets removed altogether but sometimes provider uses this setting to just disable it in the UI.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."file_index_menu" IS 'File index menu placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."file_menu" IS 'File menu placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."global_navigation" IS 'Global navigation placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."grade_passback" IS 'Grade pass-back placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."homework_selection" IS 'Homework selection placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."homework_submission" IS 'Homework submission placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."launch_presentation_document_target" IS 'Tells us if it should be opened in another window.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."link_selection" IS 'Link selection placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."migration_selection" IS 'Migration selection placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."module_group_menu" IS 'Module group menu placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."module_index_menu" IS 'Module index menu placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."account_navigation" IS 'account navigation placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."assignment_group_menu" IS 'Assignment group menu placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."assignment_index_menu" IS 'Assignment index menu placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."assignment_menu" IS 'Assignment menu placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."assignment_selection" IS 'Assignment selection placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."canvas_caliper_url" IS 'URL to caliper endpoint if supported by the tool.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."collaboration" IS 'Collaboration placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."content_migration" IS 'Content migration placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."course_assignments_menu" IS 'Course assignments menu placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."course_navigation" IS 'Course navigation placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."module_menu" IS 'Module menu placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."post_grades" IS 'Post grades placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."quiz_index_menu" IS 'Quiz index menu placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."quiz_menu" IS 'Quiz menu placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."similarity_detection" IS 'Plagiarism platform placement.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."student_context_card" IS 'Student context card placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."text" IS 'Identifies the name of the tool, default what the user can see if no label is set.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."tool_configuration" IS 'Identifies the LTI tool configuration dataset.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."use_1_3" IS 'LTI 1.3 compliant tool.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."user_navigation" IS 'User navigation placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."visibility" IS 'Controls if it is an admin only tool, takes values of `admin` and `members`.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."wiki_index_menu" IS 'Wiki index menu placement type.';
COMMENT ON COLUMN "canvas"."context_external_tools__settings"."wiki_page_menu" IS 'Wiki page menu placement type.';
CREATE TYPE "canvas"."assignment_groups__rules" AS (
"drop_highest" integer,
"drop_lowest" integer,
"never_drop" integer ARRAY
);
COMMENT ON TYPE "canvas"."assignment_groups__rules" IS 'Type extracted from column `assignment_groups.rules`.';
COMMENT ON COLUMN "canvas"."assignment_groups__rules"."drop_highest" IS 'Number of highest scores to be dropped for each user.';
COMMENT ON COLUMN "canvas"."assignment_groups__rules"."drop_lowest" IS 'Number of lowest scores to be dropped for each user.';
COMMENT ON COLUMN "canvas"."assignment_groups__rules"."never_drop" IS 'Assignment IDs that should never be dropped. E.g.: [33, 17, 24].';
CREATE TYPE "canvas"."courses__settings" AS (
"allow_student_discussion_editing" text,
"allow_student_discussion_topics" text,
"course_format" text,
"filter_speed_grader_by_student_group" text,
"hide_distribution_graphs" text,
"hide_final_grade" text,
"is_public_to_auth_users" text,
"lock_all_announcements" text,
"public_syllabus" text,
"public_syllabus_to_auth" text,
"restrict_student_future_view" text,
"restrict_student_past_view" text,
"syllabus_updated_at" text,
"usage_rights_required" text,
"allow_student_forum_attachments" text
);
COMMENT ON TYPE "canvas"."courses__settings" IS 'Type extracted from column `courses.settings`.';
COMMENT ON COLUMN "canvas"."courses__settings"."allow_student_discussion_editing" IS 'Let students edit or delete their own discussion posts.';
COMMENT ON COLUMN "canvas"."courses__settings"."allow_student_discussion_topics" IS 'Let students create discussion topics.';
COMMENT ON COLUMN "canvas"."courses__settings"."course_format" IS 'Format of a course, values include `blended`, `on_campus`, `online`.';
COMMENT ON COLUMN "canvas"."courses__settings"."filter_speed_grader_by_student_group" IS 'Filter SpeedGrader by student group.';
COMMENT ON COLUMN "canvas"."courses__settings"."hide_distribution_graphs" IS 'Hide grade distribution graphs from students.';
COMMENT ON COLUMN "canvas"."courses__settings"."hide_final_grade" IS 'Hide totals in student grades summary.';
COMMENT ON COLUMN "canvas"."courses__settings"."is_public_to_auth_users" IS 'Set to true if course is public only to authenticated users.';
COMMENT ON COLUMN "canvas"."courses__settings"."lock_all_announcements" IS 'Disable comments on announcements.';
COMMENT ON COLUMN "canvas"."courses__settings"."public_syllabus" IS 'Set to true to make the course syllabus public. Values include true, false.';
COMMENT ON COLUMN "canvas"."courses__settings"."public_syllabus_to_auth" IS 'Set to true to make the course syllabus public for authenticated users.';
COMMENT ON COLUMN "canvas"."courses__settings"."restrict_student_future_view" IS 'Restrict students from viewing courses before start date.';
COMMENT ON COLUMN "canvas"."courses__settings"."restrict_student_past_view" IS 'Restrict students from viewing courses after end date.';
COMMENT ON COLUMN "canvas"."courses__settings"."syllabus_updated_at" IS 'Timestamp when syllabus was updated in a course.';
COMMENT ON COLUMN "canvas"."courses__settings"."usage_rights_required" IS 'Copyright and license information must be provided for files before they are published.';
COMMENT ON COLUMN "canvas"."courses__settings"."allow_student_forum_attachments" IS 'Whether students can attach files to discussions.';
CREATE TABLE "canvas"."abstract_courses" (
"id" bigint NOT NULL,
CONSTRAINT "pk_abstract_courses" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."abstract_courses" IS 'Data in this table is not exposed, the table is available only as the target of a foreign key or discriminated key relationship.';
CREATE TABLE "canvas"."access_tokens" (
"id" bigint NOT NULL,
"developer_key_id" bigint NOT NULL,
"user_id" bigint,
"real_user_id" bigint,
"last_used_at" timestamp,
"expires_at" timestamp,
"purpose" varchar(255),
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"scopes" text,
"workflow_state" "canvas"."access_tokens__workflow_state" NOT NULL,
CONSTRAINT "pk_access_tokens" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."access_tokens" IS E'Stores the access tokens for a user and developer tools.\n\nThis table in Canvas Data 2 will only share developer tool specific token metadata. All users have an option to\ncreate an access token based on their role and level of data access.';
COMMENT ON COLUMN "canvas"."access_tokens"."id" IS 'The unique identifier for an access token record.';
COMMENT ON COLUMN "canvas"."access_tokens"."developer_key_id" IS 'The unique identifier of a developer key.';
COMMENT ON COLUMN "canvas"."access_tokens"."user_id" IS 'The unique ID of the user the token acts as.';
COMMENT ON COLUMN "canvas"."access_tokens"."real_user_id" IS 'If the token was created while masquerading, this is the real user doing the masquerading. Used for auditing.';
COMMENT ON COLUMN "canvas"."access_tokens"."last_used_at" IS 'Timestamp of last access using this access token.';
COMMENT ON COLUMN "canvas"."access_tokens"."expires_at" IS 'The expiration date/time for this token. This may be a NULL value.';
COMMENT ON COLUMN "canvas"."access_tokens"."purpose" IS 'For user-generated tokens, purpose can be manually set. For app-generated tokens, this should be generated based on the scope defined in the authentication process.';
COMMENT ON COLUMN "canvas"."access_tokens"."created_at" IS 'Timestamp of when an `access_tokens` record was created.';
COMMENT ON COLUMN "canvas"."access_tokens"."updated_at" IS 'Timestamp of when an `access_tokens` record was updated.';
COMMENT ON COLUMN "canvas"."access_tokens"."scopes" IS 'A list of scopes that can be applied to access tokens. i.e.: courses.';
COMMENT ON COLUMN "canvas"."access_tokens"."workflow_state" IS 'The current state of the access token record.';
CREATE TABLE "canvas"."account_users" (
"id" bigint NOT NULL,
"user_id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."account_users__workflow_state" NOT NULL,
"account_id" bigint NOT NULL,
"role_id" bigint NOT NULL,
CONSTRAINT "pk_account_users" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."account_users" IS E'Join table for accounts, users and roles.\n\nContains users\' roles within an account (this table includes the account admins).';
COMMENT ON COLUMN "canvas"."account_users"."id" IS 'The unique identifier for the users account association record.';
COMMENT ON COLUMN "canvas"."account_users"."user_id" IS 'The unique ID of a user.';
COMMENT ON COLUMN "canvas"."account_users"."created_at" IS 'Timestamp of when an `account_users` record was created.';
COMMENT ON COLUMN "canvas"."account_users"."updated_at" IS 'Timestamp of when an `account_users` record was updated.';
COMMENT ON COLUMN "canvas"."account_users"."workflow_state" IS 'The current state of the account user record.';
COMMENT ON COLUMN "canvas"."account_users"."account_id" IS 'The unique ID of an account.';
COMMENT ON COLUMN "canvas"."account_users"."role_id" IS 'The unique ID of a role.';
CREATE TABLE "canvas"."accounts" (
"id" bigint NOT NULL,
"name" varchar(255),
"deleted_at" timestamp,
"parent_account_id" bigint,
"current_sis_batch_id" bigint,
"storage_quota" bigint,
"default_storage_quota" bigint,
"default_locale" varchar(255),
"default_user_storage_quota" bigint,
"default_group_storage_quota" bigint,
"integration_id" varchar(255),
"lti_context_id" varchar(255),
"consortium_parent_account_id" bigint,
"course_template_id" bigint,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."accounts__workflow_state" NOT NULL,
"default_time_zone" varchar(255),
"uuid" varchar(255),
"sis_source_id" varchar(255),
CONSTRAINT "pk_accounts" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."accounts" IS E'Stores data about account objects in the Canvas system.\n\nAccounts are most often used to represent a hierarchy of colleges, schools, departments, campuses.';
COMMENT ON COLUMN "canvas"."accounts"."id" IS 'The ID of the Account object.';
COMMENT ON COLUMN "canvas"."accounts"."name" IS 'The display name of the account.';
COMMENT ON COLUMN "canvas"."accounts"."deleted_at" IS 'Timestamp of when the account was deleted. Will only ever be NULL for end customers.';
COMMENT ON COLUMN "canvas"."accounts"."parent_account_id" IS 'The account''s parent ID, or NULL if this is the root account.';
COMMENT ON COLUMN "canvas"."accounts"."current_sis_batch_id" IS 'The ID of the currently processing SIS (Student Information System) batch (if submitted via UI, not API).';
COMMENT ON COLUMN "canvas"."accounts"."storage_quota" IS 'The storage quote for the account, in megabytes.';
COMMENT ON COLUMN "canvas"."accounts"."default_storage_quota" IS 'The storage quota for children accounts in megabytes, if not otherwise specified.';
COMMENT ON COLUMN "canvas"."accounts"."default_locale" IS 'Language for the account.';
COMMENT ON COLUMN "canvas"."accounts"."default_user_storage_quota" IS 'The default storage quota for users in the account in megabytes, if not otherwise specified.';
COMMENT ON COLUMN "canvas"."accounts"."default_group_storage_quota" IS 'The storage quota for a group in the account in megabytes, if not otherwise specified.';
COMMENT ON COLUMN "canvas"."accounts"."integration_id" IS 'The account''s identifier in the Student Information System.';
COMMENT ON COLUMN "canvas"."accounts"."lti_context_id" IS 'UUID of the Canvas context in LTI standard. Secondary ID for this context, could be used in API to identify resource as well.';
COMMENT ON COLUMN "canvas"."accounts"."consortium_parent_account_id" IS 'The root account of the consortium account, if this root account is part of a consortium.';
COMMENT ON COLUMN "canvas"."accounts"."course_template_id" IS 'The course selected as a template for new courses created in this account. 0 if a template should not be used, nor inherited.';
COMMENT ON COLUMN "canvas"."accounts"."created_at" IS 'Timestamp of when the account was created.';
COMMENT ON COLUMN "canvas"."accounts"."updated_at" IS 'Timestamp of when the account was updated.';
COMMENT ON COLUMN "canvas"."accounts"."workflow_state" IS 'Life-cycle state for account.';
COMMENT ON COLUMN "canvas"."accounts"."default_time_zone" IS 'The default time zone of the account. Allowed time zones are [IANA time zones](https://www.iana.org/time-zones) or friendlier [Ruby on Rails time zones](https://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html).';
COMMENT ON COLUMN "canvas"."accounts"."uuid" IS 'The UUID of the account.';
COMMENT ON COLUMN "canvas"."accounts"."sis_source_id" IS 'Correlated id for the record for this course in the SIS system (assuming SIS integration is configured)';
CREATE TABLE "canvas"."appointment_groups" (
"id" bigint NOT NULL,
CONSTRAINT "pk_appointment_groups" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."appointment_groups" IS 'Data in this table is not exposed, the table is available only as the target of a foreign key or discriminated key relationship.';
CREATE TABLE "canvas"."assessment_question_banks" (
"id" bigint NOT NULL,
"deleted_at" timestamp,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."assessment_question_banks__workflow_state" NOT NULL,
"context_id" bigint,
"context_type" "canvas"."assessment_question_banks__context_type" NOT NULL,
"migration_id" varchar(255),
"title" text,
CONSTRAINT "pk_assessment_question_banks" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."assessment_question_banks" IS E'Stores data about question banks.\n\nQuestion Banks are a place to house questions that can be added to quizzes across courses or accounts.';
COMMENT ON COLUMN "canvas"."assessment_question_banks"."id" IS 'The unique identifier for the question bank.';
COMMENT ON COLUMN "canvas"."assessment_question_banks"."deleted_at" IS 'The time the question bank was deleted. If the question bank has not been deleted the value will be NULL.';
COMMENT ON COLUMN "canvas"."assessment_question_banks"."created_at" IS 'The time the question bank was created.';
COMMENT ON COLUMN "canvas"."assessment_question_banks"."updated_at" IS 'The time the question bank was last updated.';
COMMENT ON COLUMN "canvas"."assessment_question_banks"."workflow_state" IS 'Life-cycle state for the question bank.';
COMMENT ON COLUMN "canvas"."assessment_question_banks"."context_id" IS 'The unique identifier for the question bank''s context (account or course).';
COMMENT ON COLUMN "canvas"."assessment_question_banks"."context_type" IS 'The type of context the question bank is associated with.';
COMMENT ON COLUMN "canvas"."assessment_question_banks"."migration_id" IS 'The unique identifier of the migration that imported this question bank.';
COMMENT ON COLUMN "canvas"."assessment_question_banks"."title" IS 'The title for the question bank.';
CREATE TABLE "canvas"."assessment_questions" (
"id" bigint NOT NULL,
"name" text,
"deleted_at" timestamp,
"created_at" timestamp,
"updated_at" timestamp,
"workflow_state" "canvas"."assessment_questions__workflow_state",
"context_id" bigint,
"context_type" varchar(255),
"question_data" text,
"assessment_question_bank_id" bigint,
"migration_id" varchar(255),
"position" integer,
CONSTRAINT "pk_assessment_questions" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."assessment_questions" IS E'Stores attributes of a question associated with a quiz.\n\nThe column `question_data` stores a variety of question data related points such as:\n    * `question_type` denotes the type of the question. Possible values are:\n            - `calculated_question`\n            - `essay_question`\n            - `file_upload_question`\n            - `fill_in_multiple_blanks_question`\n            - `matching_question`\n            - `multiple_answers_question`\n            - `multiple_choice_question`\n            - `multiple_dropdowns_question`\n            - `numerical_question`,\n            - `short_answer_question`\n            - `text_only_question`\n            - `true_false_question`\n    * `question_text` is the text of the question.\n    * `regrade_option` denotes if regrading is available for the question. Possible values are: `available`\n      and `unavailable` for question types `multiple_answers_question`, `multiple_choice_question`,\n      `true_false_question`, and NULL for others. Defaults to `available` for the allowed question types, and NULL\n      for the rest.\n    * `correct_comments` are comments to be displayed if the student answers the question correctly.\n    * `incorrect_comments` are comments to be displayed if the student answers the question incorrectly.\n    * `neutral_comments` are comments to be displayed regardless of how the student answers the question.\n    * `answers` is a JSON array of all possible answers.';
COMMENT ON COLUMN "canvas"."assessment_questions"."id" IS 'The unique identifier for the Assessment Question.';
COMMENT ON COLUMN "canvas"."assessment_questions"."name" IS 'Name of the question.';
COMMENT ON COLUMN "canvas"."assessment_questions"."deleted_at" IS 'The time the question was deleted. If the question has not been deleted the value will be NULL.';
COMMENT ON COLUMN "canvas"."assessment_questions"."created_at" IS 'Time when the quiz question was created.';
COMMENT ON COLUMN "canvas"."assessment_questions"."updated_at" IS 'Time when the quiz question was last updated.';
COMMENT ON COLUMN "canvas"."assessment_questions"."workflow_state" IS 'Life-cycle state for the quiz question.';
COMMENT ON COLUMN "canvas"."assessment_questions"."context_id" IS 'The unique identifier for the question bank''s context (account or course). No longer used as Canvas delegates to `context_id` of the associated AssessmentQuestion.';
COMMENT ON COLUMN "canvas"."assessment_questions"."context_type" IS 'The type of context the question bank is associated with. No longer used as Canvas delegates to the context of the associated AssessmentQuestion.';
COMMENT ON COLUMN "canvas"."assessment_questions"."question_data" IS 'A variety of question data related points.';
COMMENT ON COLUMN "canvas"."assessment_questions"."assessment_question_bank_id" IS 'The unique identifier for the assessment question bank this question is associated with.';
COMMENT ON COLUMN "canvas"."assessment_questions"."migration_id" IS 'The unique identifier of the migration that imported this assessment question.';
COMMENT ON COLUMN "canvas"."assessment_questions"."position" IS 'The position of the question.';
CREATE TABLE "canvas"."assessment_requests" (
"id" bigint NOT NULL,
CONSTRAINT "pk_assessment_requests" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."assessment_requests" IS 'Data in this table is not exposed, the table is available only as the target of a foreign key or discriminated key relationship.';
CREATE TABLE "canvas"."asset_user_accesses" (
"id" bigint NOT NULL,
"display_name" text,
"user_id" bigint,
"created_at" timestamp,
"updated_at" timestamp,
"asset_code" varchar(255),
"asset_group_code" varchar(255),
"context_id" bigint,
"context_type" "canvas"."asset_user_accesses__context_type" NOT NULL,
"last_access" timestamp,
"asset_category" "canvas"."asset_user_accesses__asset_category",
"view_score" double precision,
"participate_score" double precision,
"action_level" "canvas"."asset_user_accesses__action_level",
"membership_type" "canvas"."asset_user_accesses__membership_type",
CONSTRAINT "pk_asset_user_accesses" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."asset_user_accesses" IS E'Data in this table is not exposed, the table is available only as the target of a foreign key or discriminated key relationship.\n\nSupports canvas page views feature.\n\nLogs view and participation counts for a user + asset combination. Contains information on users\' usage of assets\n(assignments, files, etc.).';
COMMENT ON COLUMN "canvas"."asset_user_accesses"."id" IS 'The unique identifier for a user resource access record.';
COMMENT ON COLUMN "canvas"."asset_user_accesses"."display_name" IS 'The user configured name of the accessed asset.';
COMMENT ON COLUMN "canvas"."asset_user_accesses"."user_id" IS 'The unique ID of a user.';
COMMENT ON COLUMN "canvas"."asset_user_accesses"."created_at" IS 'Timestamp of when an `asset_user_accesses` record was created.';
COMMENT ON COLUMN "canvas"."asset_user_accesses"."updated_at" IS 'Timestamp of when an `asset_user_accesses` record was updated.';
COMMENT ON COLUMN "canvas"."asset_user_accesses"."asset_code" IS 'It is used to specify the *asset* or the idea of being accessed. For example, `attachment_{id}` or `roster:course_{id}`.';
COMMENT ON COLUMN "canvas"."asset_user_accesses"."asset_group_code" IS 'asset_group_code is for the group. For example: calendar_event_{id}.';
COMMENT ON COLUMN "canvas"."asset_user_accesses"."context_id" IS 'The unique identifier for the asset_user_accesses''s context (account, course, user).';
COMMENT ON COLUMN "canvas"."asset_user_accesses"."context_type" IS 'The type of the object represented by `context_id`.';
COMMENT ON COLUMN "canvas"."asset_user_accesses"."last_access" IS 'Timestamp of last access for a particular asset.';
COMMENT ON COLUMN "canvas"."asset_user_accesses"."asset_category" IS 'Category of asset accessed.';
COMMENT ON COLUMN "canvas"."asset_user_accesses"."view_score" IS 'The number of times this asset has been viewed by this user.';
COMMENT ON COLUMN "canvas"."asset_user_accesses"."participate_score" IS 'The number of times this asset has been interacted with by this user.';
COMMENT ON COLUMN "canvas"."asset_user_accesses"."action_level" IS 'If this access was viewed or participated with.';
COMMENT ON COLUMN "canvas"."asset_user_accesses"."membership_type" IS 'The role type of user/enrollment accessing this asset.';
CREATE TABLE "canvas"."assignment_groups" (
"id" bigint NOT NULL,
"name" varchar(255),
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."assignment_groups__workflow_state" NOT NULL,
"context_id" bigint NOT NULL,
"context_type" "canvas"."assignment_groups__context_type" NOT NULL,
"default_assignment_name" varchar(255),
"group_weight" double precision,
"migration_id" varchar(255),
"sis_source_id" varchar(255),
"position" integer,
"rules" "canvas"."Annotated",
CONSTRAINT "pk_assignment_groups" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."assignment_groups" IS 'Stores rules associated with an assignment group.';
COMMENT ON COLUMN "canvas"."assignment_groups"."id" IS 'The ID of the assignment group.';
COMMENT ON COLUMN "canvas"."assignment_groups"."name" IS 'The name of the assignment group.';
COMMENT ON COLUMN "canvas"."assignment_groups"."created_at" IS 'The time when the assignment group was created.';
COMMENT ON COLUMN "canvas"."assignment_groups"."updated_at" IS 'The time when the assignment group was updated.';
COMMENT ON COLUMN "canvas"."assignment_groups"."workflow_state" IS 'Life-cycle state for the assignment group.';
COMMENT ON COLUMN "canvas"."assignment_groups"."context_id" IS 'The unique identifier for the assignments group context (course).';
COMMENT ON COLUMN "canvas"."assignment_groups"."context_type" IS 'The type of object represented by `context_id`.';
COMMENT ON COLUMN "canvas"."assignment_groups"."default_assignment_name" IS 'The default title for an assignment when it is created in this assignment group.';
COMMENT ON COLUMN "canvas"."assignment_groups"."group_weight" IS 'The weight of the assignment group.';
COMMENT ON COLUMN "canvas"."assignment_groups"."migration_id" IS 'The unique identifier of the migration that imported this assignment group.';
COMMENT ON COLUMN "canvas"."assignment_groups"."sis_source_id" IS 'The Student Information System source ID of the assignment group.';
COMMENT ON COLUMN "canvas"."assignment_groups"."position" IS 'The position of the assignment group.';
COMMENT ON COLUMN "canvas"."assignment_groups"."rules" IS 'Assignment group rules.';
CREATE TABLE "canvas"."assignment_override_students" (
"id" bigint NOT NULL,
"user_id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."assignment_override_students__workflow_state" NOT NULL,
"assignment_id" bigint,
"quiz_id" bigint,
"assignment_override_id" bigint NOT NULL,
CONSTRAINT "pk_assignment_override_students" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."assignment_override_students" IS 'Stores measures related to ad hoc users for whom an assignment override exists.';
COMMENT ON COLUMN "canvas"."assignment_override_students"."id" IS 'The ID of the Assignment Override Student.';
COMMENT ON COLUMN "canvas"."assignment_override_students"."user_id" IS 'Identifies the user.';
COMMENT ON COLUMN "canvas"."assignment_override_students"."created_at" IS 'Timestamp of when the `assignment_override_student` record was created.';
COMMENT ON COLUMN "canvas"."assignment_override_students"."updated_at" IS 'Timestamp of when the `assignment_override_student` was last updated.';
COMMENT ON COLUMN "canvas"."assignment_override_students"."workflow_state" IS 'Life-cycle state for assignment override students record.';
COMMENT ON COLUMN "canvas"."assignment_override_students"."assignment_id" IS 'Identifies the assignment the override is associated with.';
COMMENT ON COLUMN "canvas"."assignment_override_students"."quiz_id" IS 'Identifies the quiz the override is associated with.';
COMMENT ON COLUMN "canvas"."assignment_override_students"."assignment_override_id" IS 'Identifies the assignment override dimension.';
CREATE TABLE "canvas"."assignment_overrides" (
"id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."assignment_overrides__workflow_state" NOT NULL,
"due_at" timestamp,
"unlock_at" timestamp,
"lock_at" timestamp,
"all_day" boolean,
"assignment_version" integer,
"set_type" "canvas"."assignment_overrides__set_type" NOT NULL,
"set_id" bigint,
"due_at_overridden" boolean NOT NULL,
"unlock_at_overridden" boolean NOT NULL,
"lock_at_overridden" boolean NOT NULL,
"quiz_id" bigint,
"quiz_version" integer,
"assignment_id" bigint,
"all_day_date" date,
"title" varchar(255) NOT NULL,
CONSTRAINT "pk_assignment_overrides" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."assignment_overrides" IS E'Stores records for assignment due date overrides.\n\nThere may be many records in this table for each assignment. Use the data in this table to calculate actual due,\nall day, lock and unlock dates/times.';
COMMENT ON COLUMN "canvas"."assignment_overrides"."id" IS 'The ID of the `assignment_override`.';
COMMENT ON COLUMN "canvas"."assignment_overrides"."created_at" IS 'Timestamp of when the `assignment_override` was created.';
COMMENT ON COLUMN "canvas"."assignment_overrides"."updated_at" IS 'Timestamp of when the `assignment_override` was last updated.';
COMMENT ON COLUMN "canvas"."assignment_overrides"."workflow_state" IS 'Gives the workflow state of this record.';
COMMENT ON COLUMN "canvas"."assignment_overrides"."due_at" IS 'The new *due at* date-time for this group of users.';
COMMENT ON COLUMN "canvas"."assignment_overrides"."unlock_at" IS 'The new *unlock at* date-time for this group of users.';
COMMENT ON COLUMN "canvas"."assignment_overrides"."lock_at" IS 'The new *lock at* date-time for this group of users.';
COMMENT ON COLUMN "canvas"."assignment_overrides"."all_day" IS 'Indicates if the `all_day` field overrides the original `all_day` field in the table `assignment` for this group of users.';
COMMENT ON COLUMN "canvas"."assignment_overrides"."assignment_version" IS 'The version of the assignment this override is applied to.';
COMMENT ON COLUMN "canvas"."assignment_overrides"."set_type" IS 'Used in conjunction with `set_id`, this field tells us what type of foreign relation is used.';
COMMENT ON COLUMN "canvas"."assignment_overrides"."set_id" IS 'The primary key for the object type described in `set_id`.';
COMMENT ON COLUMN "canvas"."assignment_overrides"."due_at_overridden" IS 'Indicates if the `unlock_at` field overrides the original.';
COMMENT ON COLUMN "canvas"."assignment_overrides"."unlock_at_overridden" IS 'Indicates if the `unlock_at` field overrides the original `unlock_at` field in the table `assignment` for this group of users.';
COMMENT ON COLUMN "canvas"."assignment_overrides"."lock_at_overridden" IS 'Indicates if the `lock_at` field overrides the original `lock_at` field in the table `assignment` for this group of users.';
COMMENT ON COLUMN "canvas"."assignment_overrides"."quiz_id" IS 'Identifies the quiz the override is associated with.';
COMMENT ON COLUMN "canvas"."assignment_overrides"."quiz_version" IS 'The version of the quiz this override is applied to.';
COMMENT ON COLUMN "canvas"."assignment_overrides"."assignment_id" IS 'Identifies the assignment the override is associated with.';
COMMENT ON COLUMN "canvas"."assignment_overrides"."all_day_date" IS 'The new date version of the due date if the `all_day` flag is true.';
COMMENT ON COLUMN "canvas"."assignment_overrides"."title" IS 'The title for this `assignment_override`.';
CREATE TABLE "canvas"."assignments" (
"id" bigint NOT NULL,
"integration_id" varchar(255),
"lti_context_id" text,
"created_at" timestamp,
"updated_at" timestamp,
"workflow_state" "canvas"."assignments__workflow_state" NOT NULL,
"due_at" timestamp,
"unlock_at" timestamp,
"lock_at" timestamp,
"points_possible" double precision,
"grading_type" "canvas"."assignments__grading_type",
"submission_types" "canvas"."assignments__submission_types" ARRAY NOT NULL,
"assignment_group_id" bigint,
"grading_standard_id" bigint,
"submissions_downloads" integer NOT NULL,
"peer_review_count" integer NOT NULL,
"peer_reviews_due_at" timestamp,
"peer_reviews_assigned" boolean NOT NULL,
"peer_reviews" boolean NOT NULL,
"context_id" bigint NOT NULL,
"context_type" "canvas"."assignments__context_type" NOT NULL,
"automatic_peer_reviews" boolean NOT NULL,
"all_day" boolean NOT NULL,
"all_day_date" date,
"could_be_locked" boolean NOT NULL,
"migration_id" varchar(255),
"grade_group_students_individually" boolean NOT NULL,
"anonymous_peer_reviews" boolean NOT NULL,
"turnitin_enabled" boolean NOT NULL,
"allowed_extensions" varchar(255),
"group_category_id" bigint,
"freeze_on_copy" boolean NOT NULL,
"only_visible_to_overrides" boolean NOT NULL,
"post_to_sis" boolean NOT NULL,
"moderated_grading" boolean NOT NULL,
"grades_published_at" timestamp,
"omit_from_final_grade" boolean NOT NULL,
"intra_group_peer_reviews" boolean NOT NULL,
"vericite_enabled" boolean NOT NULL,
"anonymous_instructor_annotations" boolean NOT NULL,
"duplicate_of_id" bigint,
"anonymous_grading" boolean NOT NULL,
"graders_anonymous_to_graders" boolean NOT NULL,
"grader_count" integer NOT NULL,
"grader_comments_visible_to_graders" boolean NOT NULL,
"grader_section_id" bigint,
"final_grader_id" bigint,
"grader_names_visible_to_final_grader" boolean NOT NULL,
"allowed_attempts" integer,
"sis_source_id" text,
"annotatable_attachment_id" bigint,
"important_dates" boolean NOT NULL,
"description" text,
"position" integer,
"title" varchar(255),
"turnitin_settings" "canvas"."Annotated",
CONSTRAINT "pk_assignments" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."assignments" IS E'This table stores attributes for assignments.\n\nThere is one record in this table for each assignment.';
COMMENT ON COLUMN "canvas"."assignments"."id" IS 'Primary key for this record in the Canvas assignments table.';
COMMENT ON COLUMN "canvas"."assignments"."integration_id" IS 'Third Party unique identifier for Assignments.';
COMMENT ON COLUMN "canvas"."assignments"."lti_context_id" IS 'UUID of the Canvas context in LTI standard. Secondary ID for this context, could be used in API to identify resource as well.';
COMMENT ON COLUMN "canvas"."assignments"."created_at" IS 'The time at which this assignment was originally created.';
COMMENT ON COLUMN "canvas"."assignments"."updated_at" IS 'The time at which this assignment was last modified.';
COMMENT ON COLUMN "canvas"."assignments"."workflow_state" IS 'Current workflow state of the assignment.';
COMMENT ON COLUMN "canvas"."assignments"."due_at" IS 'The due date for the assignment. Returns NULL if not present.';
COMMENT ON COLUMN "canvas"."assignments"."unlock_at" IS 'The unlock date, meaning that the assignment is unlocked after this date. Returns NULL if not present.';
COMMENT ON COLUMN "canvas"."assignments"."lock_at" IS 'The lock date, meaning that the assignment is locked after this date. Returns NULL if not present.';
COMMENT ON COLUMN "canvas"."assignments"."points_possible" IS 'The maximum points possible for the assignment.';
COMMENT ON COLUMN "canvas"."assignments"."grading_type" IS 'The type of grading the assignment receives.';
COMMENT ON COLUMN "canvas"."assignments"."submission_types" IS 'The types of submissions allowed for this assignment.';
COMMENT ON COLUMN "canvas"."assignments"."assignment_group_id" IS 'Identifies which assignment grouping the particular assignment is part of (assignment groups may have a scoring weight to determine how much of the assignment group contributes to the total grade).';
COMMENT ON COLUMN "canvas"."assignments"."grading_standard_id" IS 'The ID of the grading standard being applied to this assignment. Valid if `grading_type` is `letter_grade` or `gpa_scale`.';
COMMENT ON COLUMN "canvas"."assignments"."submissions_downloads" IS 'Number of times submissions have been downloaded in a zip bundle.';
COMMENT ON COLUMN "canvas"."assignments"."peer_review_count" IS 'Represents the amount of reviews each user is assigned. NOTE: This key is NOT present unless you have automatic_peer_reviews set to true.';
COMMENT ON COLUMN "canvas"."assignments"."peer_reviews_due_at" IS 'Timestamp for when peer reviews should be completed.';
COMMENT ON COLUMN "canvas"."assignments"."peer_reviews_assigned" IS 'True if all peer reviews have been assigned.';
COMMENT ON COLUMN "canvas"."assignments"."peer_reviews" IS 'Indicates if peer reviews are required for this assignment.';
COMMENT ON COLUMN "canvas"."assignments"."context_id" IS 'The ID of the object this assignment belongs to. Typically course.';
COMMENT ON COLUMN "canvas"."assignments"."context_type" IS 'The type of object this assignment belongs to.';
COMMENT ON COLUMN "canvas"."assignments"."automatic_peer_reviews" IS 'Indicates if peer reviews are assigned automatically. If false, the teacher is expected to manually assign peer reviews.';
COMMENT ON COLUMN "canvas"."assignments"."all_day" IS 'True if a specific time for when the assignment is due was not given. The effective due time will be 11:59pm.';
COMMENT ON COLUMN "canvas"."assignments"."all_day_date" IS 'The date version of the due date if the `all_day` flag is true.';
COMMENT ON COLUMN "canvas"."assignments"."could_be_locked" IS 'True if the assignment is under a module that can be locked.';
COMMENT ON COLUMN "canvas"."assignments"."migration_id" IS 'The unique identifier of the migration that imported this assignment. For assignments which have been imported via a content migration, an opaque identifier for the assignment in its source. This field is used by Canvas to identify when an assignment is being re-imported, and can also be used to identify multiple assignments that have been copied from the same source.';
COMMENT ON COLUMN "canvas"."assignments"."grade_group_students_individually" IS 'If this is a group assignment, boolean flag indicating whether or not students will be graded individually.';
COMMENT ON COLUMN "canvas"."assignments"."anonymous_peer_reviews" IS 'If true, hide the identities of peer-reviewing and peer-reviewed students. Only relevant if `peer_reviews` is true.';
COMMENT ON COLUMN "canvas"."assignments"."turnitin_enabled" IS 'Flag indicating whether or not Turnitin has been enabled for the assignment. NOTE: This flag will not appear unless your account has the Turnitin plugin available.';
COMMENT ON COLUMN "canvas"."assignments"."allowed_extensions" IS 'Allowed file extensions, which take effect if `submission_types` includes `online_upload`.';
COMMENT ON COLUMN "canvas"."assignments"."group_category_id" IS 'The ID of the assignment''s group set, if this is a group assignment. For group discussions, set `group_category_id` on the discussion topic, not the linked assignment.';
COMMENT ON COLUMN "canvas"."assignments"."freeze_on_copy" IS 'Indicates if assignment will be frozen when it is copied. NOTE: This field will only be present if the AssignmentFreezer plugin is available for your account.';
COMMENT ON COLUMN "canvas"."assignments"."only_visible_to_overrides" IS 'Indicates whether the assignment is only visible to overrides.';
COMMENT ON COLUMN "canvas"."assignments"."post_to_sis" IS 'Present if Sync Grades to Student Information System feature is enabled.';
COMMENT ON COLUMN "canvas"."assignments"."moderated_grading" IS 'Indicates if the assignment is moderated.';
COMMENT ON COLUMN "canvas"."assignments"."grades_published_at" IS 'For assignments with moderated grading, a timestamp identifying when provisional grades were published.';
COMMENT ON COLUMN "canvas"."assignments"."omit_from_final_grade" IS 'If true, the assignment will be omitted from the student''s final grade.';
COMMENT ON COLUMN "canvas"."assignments"."intra_group_peer_reviews" IS 'Indicates whether or not members from within the same group on a group assignment can be assigned to peer review their own group''s work.';
COMMENT ON COLUMN "canvas"."assignments"."vericite_enabled" IS 'Flag indicating whether or not VeriCite has been enabled for the assignment. NOTE: This flag will not appear unless your account has the VeriCite plugin available.';
COMMENT ON COLUMN "canvas"."assignments"."anonymous_instructor_annotations" IS 'Flag indicating whether instructor annotations in document submissions for this assignment should be anonymous.';
COMMENT ON COLUMN "canvas"."assignments"."duplicate_of_id" IS 'If the assignment is a duplicate, the ID of the original assignment.';
COMMENT ON COLUMN "canvas"."assignments"."anonymous_grading" IS 'Indicates if the assignment is graded anonymously. If true, graders cannot see student identities.';
COMMENT ON COLUMN "canvas"."assignments"."graders_anonymous_to_graders" IS 'Indicates if provisional graders'' identities are hidden from other provisional graders. Only relevant for moderated assignments with grader_comments_visible_to_graders set to true.';
COMMENT ON COLUMN "canvas"."assignments"."grader_count" IS 'The maximum number of provisional graders who may issue grades for this assignment. Only relevant for moderated assignments. Must be a positive value, and must be set to 1 if the course has fewer than two active instructors. Otherwise, the maximum value is the number of active instructors in the course minus one, or 10 if the course has more than 11 active instructors.';
COMMENT ON COLUMN "canvas"."assignments"."grader_comments_visible_to_graders" IS 'Indicates if provisional graders'' comments are visible to other provisional graders. Only relevant for moderated assignments.';
COMMENT ON COLUMN "canvas"."assignments"."grader_section_id" IS 'Graders for an assignment with anonymous moderated marking are assigned from this section if provided, or all sections otherwise.';
COMMENT ON COLUMN "canvas"."assignments"."final_grader_id" IS 'User ID of the final grader.';
COMMENT ON COLUMN "canvas"."assignments"."grader_names_visible_to_final_grader" IS 'Indicates if provisional grader identities are visible to the final grader. Only relevant for moderated assignments.';
COMMENT ON COLUMN "canvas"."assignments"."allowed_attempts" IS 'The number of submission attempts a student can make for this assignment. -1 is considered unlimited.';
COMMENT ON COLUMN "canvas"."assignments"."sis_source_id" IS 'ID for the correlated record for the assignment in the Student Information System. It can be NULL.';
COMMENT ON COLUMN "canvas"."assignments"."annotatable_attachment_id" IS 'For an `Annotated Document` type assignment, the ID of the annotatable attachment.';
COMMENT ON COLUMN "canvas"."assignments"."important_dates" IS 'Indicates if the assignment has important dates.';
COMMENT ON COLUMN "canvas"."assignments"."description" IS 'The assignment description in an HTML fragment.';
COMMENT ON COLUMN "canvas"."assignments"."position" IS 'The sorting order of the assignment in the group.';
COMMENT ON COLUMN "canvas"."assignments"."title" IS 'Title of the assignment.';
COMMENT ON COLUMN "canvas"."assignments"."turnitin_settings" IS 'Miscellaneous settings for Turnitin.';
CREATE TABLE "canvas"."attachment_associations" (
"id" bigint NOT NULL,
"attachment_id" bigint,
"context_id" bigint,
"context_type" "canvas"."attachment_associations__context_type" NOT NULL,
CONSTRAINT "pk_attachment_associations" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."attachment_associations" IS 'Links user files to an assignment to allow grader to see the student''s submission.';
COMMENT ON COLUMN "canvas"."attachment_associations"."id" IS 'The unique identifier of an attachment associations record.';
COMMENT ON COLUMN "canvas"."attachment_associations"."attachment_id" IS 'The unique identifier of an attachment record.';
COMMENT ON COLUMN "canvas"."attachment_associations"."context_id" IS 'The unique identifier of the context of this attachment association.';
COMMENT ON COLUMN "canvas"."attachment_associations"."context_type" IS 'The type of the object represented by `context_id`.';
CREATE TABLE "canvas"."attachments" (
"id" bigint NOT NULL,
"deleted_at" timestamp,
"user_id" bigint,
"created_at" timestamp,
"updated_at" timestamp,
"workflow_state" "canvas"."attachments__workflow_state",
"unlock_at" timestamp,
"lock_at" timestamp,
"context_id" bigint,
"context_type" "canvas"."attachments__context_type",
"folder_id" bigint,
"filename" text,
"locked" boolean NOT NULL,
"file_state" "canvas"."attachments__file_state" NOT NULL,
"media_entry_id" varchar(255),
"md5" varchar(255),
"replacement_attachment_id" bigint,
"usage_rights_id" bigint,
"modified_at" timestamp,
"viewed_at" timestamp,
"could_be_locked" boolean,
"migration_id" varchar(255),
"namespace" varchar(255),
"size" bigint,
"display_name" text,
"content_type" varchar(255),
"uuid" varchar(255),
"root_attachment_id" bigint,
CONSTRAINT "pk_attachments" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."attachments" IS 'Describes files in Canvas.';
COMMENT ON COLUMN "canvas"."attachments"."id" IS 'The unique identifier of an attachment record.';
COMMENT ON COLUMN "canvas"."attachments"."deleted_at" IS 'Timestamp showing when this record was deleted. If the record has not been deleted the value will be NULL.';
COMMENT ON COLUMN "canvas"."attachments"."user_id" IS 'The unique ID of a user.';
COMMENT ON COLUMN "canvas"."attachments"."created_at" IS 'Timestamp showing when an attachments record was created.';
COMMENT ON COLUMN "canvas"."attachments"."updated_at" IS 'Timestamp showing when an attachments record was updated.';
COMMENT ON COLUMN "canvas"."attachments"."workflow_state" IS 'Current workflow state of the attachment.';
COMMENT ON COLUMN "canvas"."attachments"."unlock_at" IS 'The date-time to unlock the file at.';
COMMENT ON COLUMN "canvas"."attachments"."lock_at" IS 'The date-time to lock the file at.';
COMMENT ON COLUMN "canvas"."attachments"."context_id" IS 'The unique identifier of the attachments''s context.';
COMMENT ON COLUMN "canvas"."attachments"."context_type" IS 'The type of the object represented by context_id.';
COMMENT ON COLUMN "canvas"."attachments"."folder_id" IS 'The unique identifier of a folder record.';
COMMENT ON COLUMN "canvas"."attachments"."filename" IS 'The name of the actual file.';
COMMENT ON COLUMN "canvas"."attachments"."locked" IS 'Flag if file is locked or available.';
COMMENT ON COLUMN "canvas"."attachments"."file_state" IS 'Similar to `workflow_state` but for the file itself.';
COMMENT ON COLUMN "canvas"."attachments"."media_entry_id" IS 'The ID of a Kaltura/Notorious media entry associated with the file.';
COMMENT ON COLUMN "canvas"."attachments"."md5" IS 'A hash of the file. Historically this was MD5 in Canvas Data 1 and API but newer records store a SHA512 in this column.';
COMMENT ON COLUMN "canvas"."attachments"."replacement_attachment_id" IS 'The unique identifier of the attachment that this record replaced.';
COMMENT ON COLUMN "canvas"."attachments"."usage_rights_id" IS 'The unique identifier for the `usage_rights` record.';
COMMENT ON COLUMN "canvas"."attachments"."modified_at" IS 'Timestamp showing when an attachment record was updated.';
COMMENT ON COLUMN "canvas"."attachments"."viewed_at" IS 'Timestamp showing when an attachment record was last viewed.';
COMMENT ON COLUMN "canvas"."attachments"."could_be_locked" IS 'True if the file is in a lockable module item.';
COMMENT ON COLUMN "canvas"."attachments"."migration_id" IS 'Only applicable for files which have been imported via a content migration, an opaque identifier for the file in its source. This field is used by Canvas to identify when a file is being re-imported, and can also be used to identify multiple files that have been copied from the same source.';
COMMENT ON COLUMN "canvas"."attachments"."namespace" IS 'The asset string of the root account associated with the file''s storage.';
COMMENT ON COLUMN "canvas"."attachments"."size" IS 'The size of the file in bytes.';
COMMENT ON COLUMN "canvas"."attachments"."display_name" IS 'The attachment name that is displayed.';
COMMENT ON COLUMN "canvas"."attachments"."content_type" IS 'MIME type of the associated file.';
COMMENT ON COLUMN "canvas"."attachments"."uuid" IS 'The UUID of the attachment.';
COMMENT ON COLUMN "canvas"."attachments"."root_attachment_id" IS 'Identifier of the source file from which this file was copied and created. Defaults to `NULL` when this is the only copy.';
CREATE TABLE "canvas"."authentication_providers" (
"id" bigint NOT NULL,
CONSTRAINT "pk_authentication_providers" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."authentication_providers" IS 'Data in this table is not exposed, the table is available only as the target of a foreign key or discriminated key relationship.';
CREATE TABLE "canvas"."calendar_events" (
"id" bigint NOT NULL,
"deleted_at" timestamp,
"user_id" bigint,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."calendar_events__workflow_state" NOT NULL,
"context_id" bigint NOT NULL,
"context_type" "canvas"."calendar_events__context_type" NOT NULL,
"location_address" text,
"start_at" timestamp,
"end_at" timestamp,
"context_code" varchar(255),
"time_zone_edited" varchar(255),
"parent_calendar_event_id" bigint,
"effective_context_code" varchar(255),
"participants_per_appointment" integer,
"comments" text,
"web_conference_id" bigint,
"all_day" boolean,
"all_day_date" date,
"migration_id" varchar(255),
"important_dates" boolean NOT NULL,
"location_name" text,
"description" text,
"title" varchar(255),
CONSTRAINT "pk_calendar_events" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."calendar_events" IS E'The model for calendar events in Canvas.\n\nThese can be manually created, or automatically generated from other items like Assignments with a date attached.';
COMMENT ON COLUMN "canvas"."calendar_events"."id" IS 'The unique identifier for a calendar event record.';
COMMENT ON COLUMN "canvas"."calendar_events"."deleted_at" IS 'Timestamp when this record was deleted. If the record has not been deleted the value will be NULL.';
COMMENT ON COLUMN "canvas"."calendar_events"."user_id" IS 'The unique ID of a user.';
COMMENT ON COLUMN "canvas"."calendar_events"."created_at" IS 'Timestamp of when a `calendar_events` record was created.';
COMMENT ON COLUMN "canvas"."calendar_events"."updated_at" IS 'Timestamp of when a `calendar_events` record was updated.';
COMMENT ON COLUMN "canvas"."calendar_events"."workflow_state" IS 'Current state of the event.';
COMMENT ON COLUMN "canvas"."calendar_events"."context_id" IS 'The unique identifier for the context of this calendar event (account, course, user).';
COMMENT ON COLUMN "canvas"."calendar_events"."context_type" IS 'The type of the object represented by context_id.';
COMMENT ON COLUMN "canvas"."calendar_events"."location_address" IS 'The address where the event is taking place.';
COMMENT ON COLUMN "canvas"."calendar_events"."start_at" IS 'The start date for the calendar event, if applicable.';
COMMENT ON COLUMN "canvas"."calendar_events"."end_at" IS 'The end date for the calendar event, if applicable.';
COMMENT ON COLUMN "canvas"."calendar_events"."context_code" IS 'The context code of the calendar this event belongs to (course, user or group).';
COMMENT ON COLUMN "canvas"."calendar_events"."time_zone_edited" IS 'Time zone of the user editing the event.';
COMMENT ON COLUMN "canvas"."calendar_events"."parent_calendar_event_id" IS 'Normally NULL. If this is a reservation (see the Appointment Groups API), the ID will indicate the time slot it is for. If this is a section-level event, this will be the course-level parent event.';
COMMENT ON COLUMN "canvas"."calendar_events"."effective_context_code" IS 'If specified, it indicates which calendar this event should be displayed on. For example, a section-level event would have the course''s context code here, while the section''s context code would be returned above.';
COMMENT ON COLUMN "canvas"."calendar_events"."participants_per_appointment" IS 'If the event is a time slot, this is the participant limit.';
COMMENT ON COLUMN "canvas"."calendar_events"."comments" IS 'Comments associate with this reservation.';
COMMENT ON COLUMN "canvas"."calendar_events"."web_conference_id" IS 'The ID of a web conference associated with the calendar event.';
COMMENT ON COLUMN "canvas"."calendar_events"."all_day" IS 'Indicates whether this is an all-day event (midnight to midnight).';
COMMENT ON COLUMN "canvas"."calendar_events"."all_day_date" IS 'The date of this event.';
COMMENT ON COLUMN "canvas"."calendar_events"."migration_id" IS 'The unique identifier of the migration that imported this calendar event.';
COMMENT ON COLUMN "canvas"."calendar_events"."important_dates" IS 'Indicates if the calendar event has important dates.';
COMMENT ON COLUMN "canvas"."calendar_events"."location_name" IS 'The location name of the event.';
COMMENT ON COLUMN "canvas"."calendar_events"."description" IS 'The HTML description of the event.';
COMMENT ON COLUMN "canvas"."calendar_events"."title" IS 'The title of the calendar event.';
CREATE TABLE "canvas"."canvadocs_annotation_contexts" (
"id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"attachment_id" bigint NOT NULL,
"submission_id" bigint NOT NULL,
"launch_id" text NOT NULL,
"submission_attempt" integer,
CONSTRAINT "pk_canvadocs_annotation_contexts" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."canvadocs_annotation_contexts" IS 'Launch context associated with DocViewer when assignment is of type `Annotated_Document`.';
COMMENT ON COLUMN "canvas"."canvadocs_annotation_contexts"."id" IS 'The ID of this record.';
COMMENT ON COLUMN "canvas"."canvadocs_annotation_contexts"."created_at" IS 'When this record was created.';
COMMENT ON COLUMN "canvas"."canvadocs_annotation_contexts"."updated_at" IS 'When this record was last updated.';
COMMENT ON COLUMN "canvas"."canvadocs_annotation_contexts"."attachment_id" IS 'The attachment that this DocViewer launch is owned by.';
COMMENT ON COLUMN "canvas"."canvadocs_annotation_contexts"."submission_id" IS 'The submission this DocViewer launch is associated with.';
COMMENT ON COLUMN "canvas"."canvadocs_annotation_contexts"."launch_id" IS 'The ID that differentiates a DocViewer launch from another using the same attachment.';
COMMENT ON COLUMN "canvas"."canvadocs_annotation_contexts"."submission_attempt" IS 'The submission attempt associated with the launch_id.';
CREATE TABLE "canvas"."cloned_items" (
"id" bigint NOT NULL,
CONSTRAINT "pk_cloned_items" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."cloned_items" IS 'Data in this table is not exposed, the table is available only as the target of a foreign key or discriminated key relationship.';
CREATE TABLE "canvas"."collaborations" (
"id" bigint NOT NULL,
"collaboration_type" varchar(255),
"document_id" varchar(255),
"user_id" bigint,
"context_id" bigint,
"context_type" "canvas"."collaboration__context_type",
"url" varchar(255),
"uuid" uuid,
"data" text,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"description" text,
"title" varchar(255) NOT NULL,
"workflow_state" varchar(255) NOT NULL,
"deleted_at" timestamp,
"context_code" varchar(255),
"type" varchar(255),
"resource_link_lookup_uuid" uuid,
CONSTRAINT "pk_collaborations" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."collaborations" IS 'This table contains attributes related to collaborations.';
COMMENT ON COLUMN "canvas"."collaborations"."id" IS 'The ID of the collaboration.';
COMMENT ON COLUMN "canvas"."collaborations"."collaboration_type" IS 'The type of the collaboration.';
COMMENT ON COLUMN "canvas"."collaborations"."document_id" IS 'The ID of the document.';
COMMENT ON COLUMN "canvas"."collaborations"."user_id" IS 'The ID of the user.';
COMMENT ON COLUMN "canvas"."collaborations"."context_id" IS 'The ID of the context.';
COMMENT ON COLUMN "canvas"."collaborations"."context_type" IS 'The type of the context.';
COMMENT ON COLUMN "canvas"."collaborations"."url" IS 'The URL of the collaboration.';
COMMENT ON COLUMN "canvas"."collaborations"."uuid" IS 'The UUID of the collaboration.';
COMMENT ON COLUMN "canvas"."collaborations"."data" IS 'The data of the collaboration.';
COMMENT ON COLUMN "canvas"."collaborations"."created_at" IS 'The date this collaboration was created.';
COMMENT ON COLUMN "canvas"."collaborations"."updated_at" IS 'The date this collaboration was updated.';
COMMENT ON COLUMN "canvas"."collaborations"."description" IS 'The description of the collaboration.';
COMMENT ON COLUMN "canvas"."collaborations"."title" IS 'The title of the collaboration.';
COMMENT ON COLUMN "canvas"."collaborations"."workflow_state" IS 'The workflow state of the collaboration.';
COMMENT ON COLUMN "canvas"."collaborations"."deleted_at" IS 'The date this collaboration was deleted.';
COMMENT ON COLUMN "canvas"."collaborations"."context_code" IS 'The context code of the collaboration.';
COMMENT ON COLUMN "canvas"."collaborations"."type" IS 'The type of the collaboration.';
COMMENT ON COLUMN "canvas"."collaborations"."resource_link_lookup_uuid" IS 'The UUID of the resource';
CREATE TABLE "canvas"."comment_bank_items" (
"id" bigint NOT NULL,
"user_id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."comment_bank_items__workflow_state" NOT NULL,
"course_id" bigint NOT NULL,
"comment" text NOT NULL,
CONSTRAINT "pk_comment_bank_items" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."comment_bank_items" IS 'Stores user comments that have been added to the comment bank.';
COMMENT ON COLUMN "canvas"."comment_bank_items"."id" IS 'The ID of the comment bank item.';
COMMENT ON COLUMN "canvas"."comment_bank_items"."user_id" IS 'The ID of the user who created the comment bank item.';
COMMENT ON COLUMN "canvas"."comment_bank_items"."created_at" IS 'Timestamp of when the comment_bank_item record was created.';
COMMENT ON COLUMN "canvas"."comment_bank_items"."updated_at" IS 'Timestamp of when the comment_bank_item record was updated.';
COMMENT ON COLUMN "canvas"."comment_bank_items"."workflow_state" IS 'Workflow status of the comment bank item.';
COMMENT ON COLUMN "canvas"."comment_bank_items"."course_id" IS 'Identifies the course.';
COMMENT ON COLUMN "canvas"."comment_bank_items"."comment" IS 'The text of the comment bank item.';
CREATE TABLE "canvas"."communication_channels" (
"id" bigint NOT NULL,
"path" varchar(255) NOT NULL,
"path_type" varchar(255) NOT NULL,
"pseudonym_id" bigint,
"bounce_count" integer NOT NULL,
"confirmation_code_expires_at" timestamp,
"confirmation_sent_count" integer NOT NULL,
"user_id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."communication_channels__workflow_state" NOT NULL,
"position" integer,
CONSTRAINT "pk_communication_channels" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."communication_channels" IS E'Channels through which a user receives Canvas notifications.\n\nExamples include an email address, a phone number, a mobile device token for push notifications, etc.';
COMMENT ON COLUMN "canvas"."communication_channels"."id" IS 'The unique identifier for a user communication channel record.';
COMMENT ON COLUMN "canvas"."communication_channels"."path" IS 'The address of the communication channel e.g. an email address or a phone number.';
COMMENT ON COLUMN "canvas"."communication_channels"."path_type" IS 'The type of communication channel being described. This field determines the type of value seen in `address`.';
COMMENT ON COLUMN "canvas"."communication_channels"."pseudonym_id" IS 'The unique ID of a user''s pseudonym record.';
COMMENT ON COLUMN "canvas"."communication_channels"."bounce_count" IS 'The number of times a communication channel has bounced when trying to deliver messages.';
COMMENT ON COLUMN "canvas"."communication_channels"."confirmation_code_expires_at" IS 'The date-time when the issued confirmation code will expire.';
COMMENT ON COLUMN "canvas"."communication_channels"."confirmation_sent_count" IS 'The number of confirmations sent for the channel.';
COMMENT ON COLUMN "canvas"."communication_channels"."user_id" IS 'The unique ID of a user.';
COMMENT ON COLUMN "canvas"."communication_channels"."created_at" IS 'Timestamp of when a `communication_channels` record was created.';
COMMENT ON COLUMN "canvas"."communication_channels"."updated_at" IS 'Timestamp of when a `communication_channels` record was updated.';
COMMENT ON COLUMN "canvas"."communication_channels"."workflow_state" IS 'Current state of the communication channel.';
COMMENT ON COLUMN "canvas"."communication_channels"."position" IS 'The position of this communication channel relative to the user''s other channels when they are ordered.';
CREATE TABLE "canvas"."content_exports" (
"id" bigint NOT NULL,
CONSTRAINT "pk_content_exports" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."content_exports" IS 'Data in this table is not exposed, the table is available only as the target of a foreign key or discriminated key relationship.';
CREATE TABLE "canvas"."content_migrations" (
"id" bigint NOT NULL,
"attachment_id" bigint,
"user_id" bigint,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."content_migrations__workflow_state" NOT NULL,
"context_id" bigint NOT NULL,
"context_type" "canvas"."content_migrations__context_type" NOT NULL,
"overview_attachment_id" bigint,
"exported_attachment_id" bigint,
"source_course_id" bigint,
"migration_type" varchar(255),
"child_subscription_id" bigint,
"migration_settings" text,
"started_at" timestamp,
"finished_at" timestamp,
"progress" double precision,
CONSTRAINT "pk_content_migrations" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."content_migrations" IS 'Saves data about what and when was added to a course through a course copy or import.';
COMMENT ON COLUMN "canvas"."content_migrations"."id" IS 'The unique identifier of a content migration record.';
COMMENT ON COLUMN "canvas"."content_migrations"."attachment_id" IS 'The unique ID of the package being imported.';
COMMENT ON COLUMN "canvas"."content_migrations"."user_id" IS 'The unique ID of a user.';
COMMENT ON COLUMN "canvas"."content_migrations"."created_at" IS 'Timestamp showing when a `content_migrations` record was created.';
COMMENT ON COLUMN "canvas"."content_migrations"."updated_at" IS 'Timestamp of when a `content_migrations` record was updated.';
COMMENT ON COLUMN "canvas"."content_migrations"."workflow_state" IS 'Current state of the content migration.';
COMMENT ON COLUMN "canvas"."content_migrations"."context_id" IS 'The unique identifier of a `content_migrations` context.';
COMMENT ON COLUMN "canvas"."content_migrations"."context_type" IS 'The type of the object represented by `context_id`.';
COMMENT ON COLUMN "canvas"."content_migrations"."overview_attachment_id" IS 'The unique ID of the packages overview.json file.';
COMMENT ON COLUMN "canvas"."content_migrations"."exported_attachment_id" IS 'The unique ID of the resulting exported package.';
COMMENT ON COLUMN "canvas"."content_migrations"."source_course_id" IS 'The course to copy from for a course copy migration (required if doing course copy).';
COMMENT ON COLUMN "canvas"."content_migrations"."migration_type" IS 'The type of the migration. Use the Migrator endpoint to see all available migrators. Examples include: `academic_benchmark_importer`, `angel_exporter`, `blackboard_exporter`, `canvas_cartridge_importer`, `common_cartridge_importer`, `course_copy_importer`, `d2l_exporter`, `master_course_import`, `moodle_converter`, `qti_converter`, `webct_scraper`,`zip_file_importer`, `context_external_tool_1234`.';
COMMENT ON COLUMN "canvas"."content_migrations"."child_subscription_id" IS 'The unique ID of the `master_courses_child_subscription` record indicating a blueprint association.';
COMMENT ON COLUMN "canvas"."content_migrations"."migration_settings" IS 'Ruby hash of settings that determine what data will get imported for this migration.';
COMMENT ON COLUMN "canvas"."content_migrations"."started_at" IS 'Timestamp showing when a content migration started.';
COMMENT ON COLUMN "canvas"."content_migrations"."finished_at" IS 'Timestamp showing when a content migration finished.';
COMMENT ON COLUMN "canvas"."content_migrations"."progress" IS 'Current migration progress. 100 indicates done at 100%.';
CREATE TABLE "canvas"."content_participation_counts" (
"id" bigint NOT NULL,
"user_id" bigint,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"context_id" bigint,
"context_type" "canvas"."content_participation_counts__context_type" NOT NULL,
"unread_count" integer NOT NULL,
"content_type" "canvas"."content_participation_counts__content_type" NOT NULL,
CONSTRAINT "pk_content_participation_counts" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."content_participation_counts" IS 'Shows students a count of the number of submissions they have that have something unread.';
COMMENT ON COLUMN "canvas"."content_participation_counts"."id" IS 'The unique identifier of a content participation count record.';
COMMENT ON COLUMN "canvas"."content_participation_counts"."user_id" IS 'The unique ID of a user.';
COMMENT ON COLUMN "canvas"."content_participation_counts"."created_at" IS 'Timestamp showing when a content_participation_counts record was created.';
COMMENT ON COLUMN "canvas"."content_participation_counts"."updated_at" IS 'Timestamp showing when a content_participation_counts record was updated.';
COMMENT ON COLUMN "canvas"."content_participation_counts"."context_id" IS 'The unique identifier of a content_participation_counts''s context (course).';
COMMENT ON COLUMN "canvas"."content_participation_counts"."context_type" IS 'The type of the object represented by context_id.';
COMMENT ON COLUMN "canvas"."content_participation_counts"."unread_count" IS 'The number of unread actions for this user on this course.';
COMMENT ON COLUMN "canvas"."content_participation_counts"."content_type" IS 'The type of content.';
CREATE TABLE "canvas"."content_participations" (
"id" bigint NOT NULL,
"user_id" bigint NOT NULL,
"workflow_state" "canvas"."content_participations__workflow_state" NOT NULL,
"content_id" bigint NOT NULL,
"content_type" "canvas"."content_participations__content_type" NOT NULL,
CONSTRAINT "pk_content_participations" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."content_participations" IS E'Stores data related to students submission updates or feedback.\n\nExamples include new grade, new excused status, or new score.';
COMMENT ON COLUMN "canvas"."content_participations"."id" IS 'The unique identifier of a content participation record.';
COMMENT ON COLUMN "canvas"."content_participations"."user_id" IS 'The unique ID of a user.';
COMMENT ON COLUMN "canvas"."content_participations"."workflow_state" IS 'Current state of the record.';
COMMENT ON COLUMN "canvas"."content_participations"."content_id" IS 'The unique identifier of a content record.';
COMMENT ON COLUMN "canvas"."content_participations"."content_type" IS 'The type of the object represented by `content_id`.';
CREATE TABLE "canvas"."content_shares" (
"id" bigint NOT NULL,
"name" varchar(255) NOT NULL,
"type" "canvas"."content_shares__type" NOT NULL,
"user_id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"content_export_id" bigint NOT NULL,
"sender_id" bigint,
"read_state" "canvas"."content_shares__read_state" NOT NULL,
CONSTRAINT "pk_content_shares" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."content_shares" IS E'Provides a link to a content export from a sender to a receiver.\n\nThe receiver can use this link to import the content export into any of their courses.';
COMMENT ON COLUMN "canvas"."content_shares"."id" IS 'The unique identifier of a content share.';
COMMENT ON COLUMN "canvas"."content_shares"."name" IS 'Name of the content item being shared.';
COMMENT ON COLUMN "canvas"."content_shares"."type" IS 'Type of content share.';
COMMENT ON COLUMN "canvas"."content_shares"."user_id" IS 'The ID of the user who owns the content share.';
COMMENT ON COLUMN "canvas"."content_shares"."created_at" IS 'Timestamp showing when a `content_share` record was created.';
COMMENT ON COLUMN "canvas"."content_shares"."updated_at" IS 'Timestamp showing when a `content_share` record was updated.';
COMMENT ON COLUMN "canvas"."content_shares"."content_export_id" IS 'The ID of the ContentExport containing the content of the share.';
COMMENT ON COLUMN "canvas"."content_shares"."sender_id" IS 'The ID of the user who sent the content share. Only populated for ReceivedContentShare.';
COMMENT ON COLUMN "canvas"."content_shares"."read_state" IS 'State of the content shared.';
CREATE TABLE "canvas"."content_tags" (
"id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."content_tags__workflow_state" NOT NULL,
"context_id" bigint NOT NULL,
"context_type" "canvas"."content_tags__context_type" NOT NULL,
"context_code" varchar(255),
"comments" text,
"migration_id" varchar(255),
"content_id" bigint,
"tag_type" "canvas"."content_tags__tag_type" NOT NULL,
"context_module_id" bigint,
"learning_outcome_id" bigint,
"mastery_score" double precision,
"rubric_association_id" bigint,
"associated_asset_id" bigint,
"associated_asset_type" "canvas"."content_tags__associated_asset_type",
"link_settings" text,
"new_tab" boolean,
"position" integer,
"content_type" "canvas"."content_tags__content_type",
"url" text,
"title" text,
CONSTRAINT "pk_content_tags" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."content_tags" IS E'In the context of LTI, joins `context_external_tools` to either `assignments` or to `context_modules`.\n\nSome of the ways to use this table would be to: identify the external tool that is used to submit an assignment,\nidentify the items that are in modules (the IDs in this table are also referred to as `module_item_id`), identify\nthe learning outcome group that an outcome is part of.';
COMMENT ON COLUMN "canvas"."content_tags"."id" IS 'The unique identifier for a content tag record.';
COMMENT ON COLUMN "canvas"."content_tags"."created_at" IS 'Timestamp of when a `content_tags` record was created.';
COMMENT ON COLUMN "canvas"."content_tags"."updated_at" IS 'Timestamp of when a `content_tags` record was updated.';
COMMENT ON COLUMN "canvas"."content_tags"."workflow_state" IS 'The workflow state of the content tag.';
COMMENT ON COLUMN "canvas"."content_tags"."context_id" IS 'The unique identifier for the `content_tags` context (account, course, user). Depends on `context_type` value: `Course`: `courses.id`, `Assignment`: `assignments.id`.';
COMMENT ON COLUMN "canvas"."content_tags"."context_type" IS 'The type of the object represented by `context_id`, typically `Course` or `Account` or `User`.';
COMMENT ON COLUMN "canvas"."content_tags"."context_code" IS 'An asset string describing the content tag context (for example: `assignment_3`).';
COMMENT ON COLUMN "canvas"."content_tags"."comments" IS 'Comments associated with the tag.';
COMMENT ON COLUMN "canvas"."content_tags"."migration_id" IS 'The ID of the migration that created the content tag.';
COMMENT ON COLUMN "canvas"."content_tags"."content_id" IS 'Refers to the ID of the object that is linked to another object (`context_type`).';
COMMENT ON COLUMN "canvas"."content_tags"."tag_type" IS 'Identifies the type of tag.';
COMMENT ON COLUMN "canvas"."content_tags"."context_module_id" IS 'The ID of the context module the content tag belongs to (if `tag_type` is `context_module`).';
COMMENT ON COLUMN "canvas"."content_tags"."learning_outcome_id" IS 'Has a value if `tag_type` is `learning_outcome`, indicates that the content (`content_type`, `content_id`) is aligned with the given LearningOutcome.';
COMMENT ON COLUMN "canvas"."content_tags"."mastery_score" IS 'when `tag_type` is `learning_outcome` and `content_type` is `AssessmentQuestionBank`, indicates the required score on a set of bank questions to show mastery.';
COMMENT ON COLUMN "canvas"."content_tags"."rubric_association_id" IS '(deprecated) when `tag_type` is `learning_outcome` and `content_type` is `Assignment`, indicates the *RubricAssociation* which aligns the *LearningOutcome* to the *Assignment*.';
COMMENT ON COLUMN "canvas"."content_tags"."associated_asset_id" IS 'Associated asset, whose use varies by ContentTag use. When `tag_type` is `learning_outcome_association`, then `content_type` is `LearningOutcome` and `associated_asset_type` is `learning_outcome_group` and indicates the *LearningOutcome* (`content_id`) is displayed within the *LearningOutcomeGroup* (`associated_asset_id`). When `content_type` is `ContextExternalTool` and `associated_asset_type` is `Lti::ResourceLink`, indicates the resource link associated with an LTI tool link.';
COMMENT ON COLUMN "canvas"."content_tags"."associated_asset_type" IS 'when `tag_type` is `learning_outcome_association`, then `content_type` is `LearningOutcome` and `associated_asset_type` is `learning_outcome_group` and indicates the *LearningOutcome* (`content_id`) is displayed within the *LearningOutcomeGroup* (`associated_asset_id`).';
COMMENT ON COLUMN "canvas"."content_tags"."link_settings" IS 'Settings for LTI links associated with the content tag (for example, tool iframe width and height).';
COMMENT ON COLUMN "canvas"."content_tags"."new_tab" IS 'Whether or not the content should open in a new tab.';
COMMENT ON COLUMN "canvas"."content_tags"."position" IS 'The position of the content tag relative to other content tags when listed in a UI.';
COMMENT ON COLUMN "canvas"."content_tags"."content_type" IS 'The type of the tag''s content. Corresponds to the tables that `content_id` is a foreign key for, the exceptions being: `Announcement` (for which `content_id` references the `discussion_topics` table) and `ContextModuleSubheader` and `ExternalUrl` (which have no tables).';
COMMENT ON COLUMN "canvas"."content_tags"."url" IS 'The URL of the content where applicable (for example: the launch URL of a context_external_tool). Applicable when `content_type` is `ExternalUrl`, `ContextExternalTool` or `Lti::MessageHandler`.';
COMMENT ON COLUMN "canvas"."content_tags"."title" IS 'The title of the content tag.';
CREATE TABLE "canvas"."context_external_tools" (
"id" bigint NOT NULL,
"developer_key_id" bigint,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."context_external_tools__workflow_state" NOT NULL,
"context_id" bigint,
"context_type" "canvas"."context_external_tools__context_type",
"migration_id" varchar(255),
"consumer_key" text NOT NULL,
"cloned_item_id" bigint,
"tool_id" varchar(255),
"not_selectable" boolean,
"app_center_id" varchar(255),
"allow_membership_service_access" boolean NOT NULL,
"description" text,
"name" varchar(255) NOT NULL,
"domain" varchar(255),
"url" varchar(4096),
"settings" "canvas"."Annotated",
CONSTRAINT "pk_context_external_tools" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."context_external_tools" IS 'Stores data about installed LTI 1 and 1.3 tools.';
COMMENT ON COLUMN "canvas"."context_external_tools"."id" IS 'Primary key for this record in the `context_external_tools` table in the Canvas database.';
COMMENT ON COLUMN "canvas"."context_external_tools"."developer_key_id" IS 'The client ID of the tool provider. LTI 1.3 only.';
COMMENT ON COLUMN "canvas"."context_external_tools"."created_at" IS 'Timestamp when the activation was created.';
COMMENT ON COLUMN "canvas"."context_external_tools"."updated_at" IS 'The time at which the tool was last updated.';
COMMENT ON COLUMN "canvas"."context_external_tools"."workflow_state" IS 'Workflow state for activation (active, deleted).';
COMMENT ON COLUMN "canvas"."context_external_tools"."context_id" IS 'The ID of the context the tool is deployed to. Identifies either a course (`courses`.`id` if `context_type` is `Course`) or an account (`accounts`.`id` if `context_type` is `Account`).';
COMMENT ON COLUMN "canvas"."context_external_tools"."context_type" IS 'The type of object the tool was activated in.';
COMMENT ON COLUMN "canvas"."context_external_tools"."migration_id" IS 'The unique identifier of the migration that imported the tool.';
COMMENT ON COLUMN "canvas"."context_external_tools"."consumer_key" IS 'A key used by the tool for validation at launch time. This value is set by the Canvas user who installs the tool.';
COMMENT ON COLUMN "canvas"."context_external_tools"."cloned_item_id" IS 'The Id of the item in which this context_external_tool was cloned from.';
COMMENT ON COLUMN "canvas"."context_external_tools"."tool_id" IS 'The tool ID received from the external tool. May be missing if the tool does not send an ID.';
COMMENT ON COLUMN "canvas"."context_external_tools"."not_selectable" IS 'true - tool is selectable in all scenarios. false - not selectable for assignment or module selection menu.';
COMMENT ON COLUMN "canvas"."context_external_tools"."app_center_id" IS 'The tool ID from eduappcenter.com.';
COMMENT ON COLUMN "canvas"."context_external_tools"."allow_membership_service_access" IS 'Indicates that the tool has access to the legacy membership service. LTI 1 only. This setting is set by the Canvas user who installs the tool.';
COMMENT ON COLUMN "canvas"."context_external_tools"."description" IS 'The description of the tool activation as entered by the user.';
COMMENT ON COLUMN "canvas"."context_external_tools"."name" IS 'The name of tool activation as entered by the user.';
COMMENT ON COLUMN "canvas"."context_external_tools"."domain" IS 'The domain for the tool launch URL (optional field). Canvas uses this domain to lookup the correct tool to launch when the tool ID is unknown.';
COMMENT ON COLUMN "canvas"."context_external_tools"."url" IS 'The URL to where the tool may launch to (if this value is NULL, use the `domain` field).';
COMMENT ON COLUMN "canvas"."context_external_tools"."settings" IS 'LTI application settings, such as placements, links, etc.';
CREATE TABLE "canvas"."context_module_progressions" (
"id" bigint NOT NULL,
"user_id" bigint,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."context_module_progressions__workflow_state" NOT NULL,
"requirements_met" text,
"collapsed" boolean,
"current_position" integer,
"completed_at" timestamp,
"current" boolean,
"evaluated_at" timestamp,
"incomplete_requirements" text,
"context_module_id" bigint,
"lock_version" integer NOT NULL DEFAULT 0,
CONSTRAINT "pk_context_module_progressions" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."context_module_progressions" IS 'Shows which items a student has completed, started and not started in a module.';
COMMENT ON COLUMN "canvas"."context_module_progressions"."id" IS 'The unique identifier of a user module progression record.';
COMMENT ON COLUMN "canvas"."context_module_progressions"."user_id" IS 'The unique ID of a user.';
COMMENT ON COLUMN "canvas"."context_module_progressions"."created_at" IS 'Timestamp showing when a context_module_progressions record was created.';
COMMENT ON COLUMN "canvas"."context_module_progressions"."updated_at" IS 'Timestamp showing when a context_module_progressions record was updated.';
COMMENT ON COLUMN "canvas"."context_module_progressions"."workflow_state" IS 'The current state of the record.';
COMMENT ON COLUMN "canvas"."context_module_progressions"."requirements_met" IS 'Object indicating which requirements have been met.';
COMMENT ON COLUMN "canvas"."context_module_progressions"."collapsed" IS 'Flag indicating whether modules items are collapsed for user.';
COMMENT ON COLUMN "canvas"."context_module_progressions"."current_position" IS 'For sequential access, this is the current position of the module item (ContentTag).';
COMMENT ON COLUMN "canvas"."context_module_progressions"."completed_at" IS 'Timestamp showing when this user completed this module progression.';
COMMENT ON COLUMN "canvas"."context_module_progressions"."current" IS 'Flag indicating that this progression is current and not outdated.';
COMMENT ON COLUMN "canvas"."context_module_progressions"."evaluated_at" IS 'Timestamp showing when this progression was last evaluated for completion, lock, or unlock.';
COMMENT ON COLUMN "canvas"."context_module_progressions"."incomplete_requirements" IS 'Object that contains incomplete requirements related to min_score.';
COMMENT ON COLUMN "canvas"."context_module_progressions"."context_module_id" IS 'The unique identifier of a associated context_module.';
COMMENT ON COLUMN "canvas"."context_module_progressions"."lock_version" IS 'Lock version of the module progression.';
CREATE TABLE "canvas"."context_modules" (
"id" bigint NOT NULL,
"name" text,
"deleted_at" timestamp,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."context_modules__workflow_state" NOT NULL,
"unlock_at" timestamp,
"context_id" bigint NOT NULL,
"context_type" "canvas"."context_modules__context_type" NOT NULL,
"migration_id" varchar(255),
"prerequisites" text,
"completion_requirements" text,
"require_sequential_progress" boolean,
"completion_events" text,
"requirement_count" integer,
"position" integer,
CONSTRAINT "pk_context_modules" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."context_modules" IS E'Modules in Canvas.\n\nA place to link items so that students can proceed through course content in order.';
COMMENT ON COLUMN "canvas"."context_modules"."id" IS 'The unique identifier of a module record.';
COMMENT ON COLUMN "canvas"."context_modules"."name" IS 'The name of the module that shows up in the UI.';
COMMENT ON COLUMN "canvas"."context_modules"."deleted_at" IS 'Timestamp showing when this record was deleted. If the record has not been deleted, the value will be NULL.';
COMMENT ON COLUMN "canvas"."context_modules"."created_at" IS 'Timestamp showing when a `context_modules` record was created.';
COMMENT ON COLUMN "canvas"."context_modules"."updated_at" IS 'Timestamp showing when a `context_modules` record was updated.';
COMMENT ON COLUMN "canvas"."context_modules"."workflow_state" IS 'Current state of the record.';
COMMENT ON COLUMN "canvas"."context_modules"."unlock_at" IS 'Module can be locked until this date.';
COMMENT ON COLUMN "canvas"."context_modules"."context_id" IS 'The unique identifier for the context of `context_modules` (`courses`.`id` if `context_type` is `Course`).';
COMMENT ON COLUMN "canvas"."context_modules"."context_type" IS 'The type of the object represented by context_id.';
COMMENT ON COLUMN "canvas"."context_modules"."migration_id" IS 'An identifier used by the Blueprint system to match with the blueprint content.';
COMMENT ON COLUMN "canvas"."context_modules"."prerequisites" IS 'An object indicating which module(s) must be completed before accessing this one. Has value if course module has prerequisites; field contains ids (context_modules.id), type and name of prerequisites.';
COMMENT ON COLUMN "canvas"."context_modules"."completion_requirements" IS 'An object indicating the requirements to complete this module. Contains ids and types (the action required). Requirements can be "must_mark_done" , "must_view", or "must_contribute".';
COMMENT ON COLUMN "canvas"."context_modules"."require_sequential_progress" IS 'Indicates whether requirements must be completed in sequential order.';
COMMENT ON COLUMN "canvas"."context_modules"."completion_events" IS 'Events that can trigger module completion in CSV format: publish_final_grade.';
COMMENT ON COLUMN "canvas"."context_modules"."requirement_count" IS 'The number of requirements to be completed before marking module as complete: can be 1 or NULL for all.';
COMMENT ON COLUMN "canvas"."context_modules"."position" IS 'Where the module should fall in the list of modules.';
CREATE TABLE "canvas"."conversation_message_participants" (
"id" bigint NOT NULL,
"deleted_at" timestamp,
"user_id" bigint,
"workflow_state" "canvas"."conversation_message_participants__workflow_state",
"conversation_message_id" bigint,
"conversation_participant_id" bigint,
"tags" text,
CONSTRAINT "pk_conversation_message_participants" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."conversation_message_participants" IS 'The participants in a certain message in a Conversation.';
COMMENT ON COLUMN "canvas"."conversation_message_participants"."id" IS 'The unique identifier for a conversation recipients record.';
COMMENT ON COLUMN "canvas"."conversation_message_participants"."deleted_at" IS 'Timestamp when this record was deleted. If the record has not been deleted the value will be NULL.';
COMMENT ON COLUMN "canvas"."conversation_message_participants"."user_id" IS 'The unique ID of a user.';
COMMENT ON COLUMN "canvas"."conversation_message_participants"."workflow_state" IS 'The workflow state of the conversation participants.';
COMMENT ON COLUMN "canvas"."conversation_message_participants"."conversation_message_id" IS 'Identifies the messages dataset for the associated message.';
COMMENT ON COLUMN "canvas"."conversation_message_participants"."conversation_participant_id" IS 'Identifies the conversations dataset for the associated conversation.';
COMMENT ON COLUMN "canvas"."conversation_message_participants"."tags" IS 'Tags used to identify multiple contexts such as course, group, etc.';
CREATE TABLE "canvas"."conversation_messages" (
"id" bigint NOT NULL,
"created_at" timestamp,
"context_id" bigint,
"context_type" "canvas"."conversation_messages__context_type",
"conversation_id" bigint,
"author_id" bigint,
"generated" boolean,
"forwarded_message_ids" text,
"media_comment_id" varchar(255),
"media_comment_type" "canvas"."conversation_messages__media_comment_type",
"asset_id" bigint,
"asset_type" "canvas"."conversation_messages__asset_type",
"attachment_ids" text,
"has_attachments" boolean,
"has_media_objects" boolean,
"body" text,
CONSTRAINT "pk_conversation_messages" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."conversation_messages" IS 'The messages that belong to a certain Conversation, these are in the *Inbox*.';
COMMENT ON COLUMN "canvas"."conversation_messages"."id" IS 'The unique identifier for a conversation message record.';
COMMENT ON COLUMN "canvas"."conversation_messages"."created_at" IS 'Timestamp of when a `conversation_messages` record was created.';
COMMENT ON COLUMN "canvas"."conversation_messages"."context_id" IS 'The unique identifier for the context of `conversation_messages` (account, course, user).';
COMMENT ON COLUMN "canvas"."conversation_messages"."context_type" IS 'The type of the object represented by `context_id`, typically `Course` or `Account` or `User`.';
COMMENT ON COLUMN "canvas"."conversation_messages"."conversation_id" IS 'The unique identifier for the conversation.';
COMMENT ON COLUMN "canvas"."conversation_messages"."author_id" IS 'User ID of the author of the message.';
COMMENT ON COLUMN "canvas"."conversation_messages"."generated" IS 'This attribute is true if the system generated this message (e.g. "John was added to this conversation").';
COMMENT ON COLUMN "canvas"."conversation_messages"."forwarded_message_ids" IS 'The IDs of any messages that were created as a forward of the current message.';
COMMENT ON COLUMN "canvas"."conversation_messages"."media_comment_id" IS 'Media comment ID of an audio of video file to be associated with this message.';
COMMENT ON COLUMN "canvas"."conversation_messages"."media_comment_type" IS 'Type of the associated media file.';
COMMENT ON COLUMN "canvas"."conversation_messages"."asset_id" IS 'The ID of an attached asset, such as a submission.';
COMMENT ON COLUMN "canvas"."conversation_messages"."asset_type" IS 'The type of an attached asset.';
COMMENT ON COLUMN "canvas"."conversation_messages"."attachment_ids" IS 'Comma-separated list of attachments ids. These must be files that have been previously uploaded to the sender''s "conversation attachments" folder.';
COMMENT ON COLUMN "canvas"."conversation_messages"."has_attachments" IS 'True if the message has attachments.';
COMMENT ON COLUMN "canvas"."conversation_messages"."has_media_objects" IS 'True if the message has media objects.';
COMMENT ON COLUMN "canvas"."conversation_messages"."body" IS 'The HTML content of the message.';
CREATE TABLE "canvas"."conversation_participants" (
"id" bigint NOT NULL,
"user_id" bigint NOT NULL,
"updated_at" timestamp,
"workflow_state" "canvas"."conversation_participants__workflow_state" NOT NULL,
"has_attachments" boolean NOT NULL,
"has_media_objects" boolean NOT NULL,
"last_message_at" timestamp,
"subscribed" boolean NOT NULL,
"message_count" integer NOT NULL,
"label" varchar(255),
"tags" text,
CONSTRAINT "pk_conversation_participants" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."conversation_participants" IS 'The participants in a Conversation.';
COMMENT ON COLUMN "canvas"."conversation_participants"."id" IS 'The unique identifier for a conversation message participants record.';
COMMENT ON COLUMN "canvas"."conversation_participants"."user_id" IS 'The unique ID of a user.';
COMMENT ON COLUMN "canvas"."conversation_participants"."updated_at" IS 'Timestamp of when a `conversation_participants` record was updated.';
COMMENT ON COLUMN "canvas"."conversation_participants"."workflow_state" IS 'The workflow state of the message.';
COMMENT ON COLUMN "canvas"."conversation_participants"."has_attachments" IS 'If the conversation has attachments.';
COMMENT ON COLUMN "canvas"."conversation_participants"."has_media_objects" IS 'If the conversation has media objects associated.';
COMMENT ON COLUMN "canvas"."conversation_participants"."last_message_at" IS 'The timestamp of the latest message.';
COMMENT ON COLUMN "canvas"."conversation_participants"."subscribed" IS 'Indicates whether the current user is subscribed to the conversation.';
COMMENT ON COLUMN "canvas"."conversation_participants"."message_count" IS 'The number of messages in the conversation.';
COMMENT ON COLUMN "canvas"."conversation_participants"."label" IS 'Any label applied to the conversation, such as *starred*.';
COMMENT ON COLUMN "canvas"."conversation_participants"."tags" IS 'Tags used to identify multiple contexts such as course, group, etc.';
CREATE TABLE "canvas"."conversations" (
"id" bigint NOT NULL,
"updated_at" timestamp,
"context_id" bigint,
"context_type" "canvas"."conversations__context_type",
"has_attachments" boolean NOT NULL,
"has_media_objects" boolean NOT NULL,
"subject" varchar(255),
"tags" text,
CONSTRAINT "pk_conversations" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."conversations" IS 'Conversation threads from the Canvas Inbox.';
COMMENT ON COLUMN "canvas"."conversations"."id" IS 'The unique identifier for a conversations record. Links to `conversation_messages.conversation_id`.';
COMMENT ON COLUMN "canvas"."conversations"."updated_at" IS 'Timestamp of when a conversations record was updated.';
COMMENT ON COLUMN "canvas"."conversations"."context_id" IS 'The unique identifier for the conversations''s context (account, course, user). ID associated with the `context_type`.';
COMMENT ON COLUMN "canvas"."conversations"."context_type" IS 'The type of the object represented by context_id.';
COMMENT ON COLUMN "canvas"."conversations"."has_attachments" IS 'If the conversation has attachments.';
COMMENT ON COLUMN "canvas"."conversations"."has_media_objects" IS 'If the conversation has media objects associated.';
COMMENT ON COLUMN "canvas"."conversations"."subject" IS 'The subject line of the conversation.';
COMMENT ON COLUMN "canvas"."conversations"."tags" IS 'Tags used to identify multiple contexts such as course, group, etc. Contains a comma-delimited list of IDs of the course or group if the conversation is associated with a course or group. The format of the values are `course_12345` or `group_12345`.';
CREATE TABLE "canvas"."course_account_associations" (
"id" bigint NOT NULL,
"course_id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"account_id" bigint NOT NULL,
"course_section_id" bigint,
"depth" integer NOT NULL,
CONSTRAINT "pk_course_account_associations" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."course_account_associations" IS 'An explicit place to keep track of all the the accounts in the account hierarchy that a course belongs to.';
COMMENT ON COLUMN "canvas"."course_account_associations"."id" IS 'The unique identifier for a course account association record.';
COMMENT ON COLUMN "canvas"."course_account_associations"."course_id" IS 'Identifies the course.';
COMMENT ON COLUMN "canvas"."course_account_associations"."created_at" IS 'Timestamp of when the record was created.';
COMMENT ON COLUMN "canvas"."course_account_associations"."updated_at" IS 'Timestamp of when the record was updated.';
COMMENT ON COLUMN "canvas"."course_account_associations"."account_id" IS 'Identifies the accounts dataset. Points to the account associated with the course. Could be Canvas root account or sub-account ID.';
COMMENT ON COLUMN "canvas"."course_account_associations"."course_section_id" IS 'Identifies the course section.';
COMMENT ON COLUMN "canvas"."course_account_associations"."depth" IS 'How many steps in the account chain are between the courses'' direct account (`course`.`account_id`) and the `account_id` of the association.';
CREATE TABLE "canvas"."course_sections" (
"id" bigint NOT NULL,
"name" varchar(255) NOT NULL,
"course_id" bigint NOT NULL,
"integration_id" varchar(255),
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."course_sections__workflow_state" NOT NULL,
"sis_batch_id" bigint,
"start_at" timestamp,
"end_at" timestamp,
"sis_source_id" varchar(255),
"default_section" boolean,
"accepting_enrollments" boolean,
"restrict_enrollments_to_section_dates" boolean,
"nonxlist_course_id" bigint,
"enrollment_term_id" bigint,
CONSTRAINT "pk_course_sections" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."course_sections" IS E'Stores attributes for a section of a course.\n\nSections are a group of students that have been organized for administrative purposes.  When users are enrolled in\na course, they are actually enrolled in one of the sections of that course. It is possible to place more than one\nsection in course, but it is not possible to put sections within sections. All sections of a course share the same\ncontent. If a course is taught by one instructor, sections can remain under one course. However, if each section is\ntaught by a different instructor, those sections will need to be housed under separate courses. Each section can\nhave its own varied due dates for assignments, quizzes, and discussions. For example, a course may have sections\nthat meet on different days of the week or in different formats (online vs. face-to-face). Sections are also\nbeneficial when Teacher Assistants are assigned to help manage courses and oversee grading for a portion of\na course enrollment. As part of SIS or manual enrollments, you can limit students to only see students in their\nsection. Instructors can also limit students if you allow them to manually enroll users in their own courses.';
COMMENT ON COLUMN "canvas"."course_sections"."id" IS 'The unique identifier for the section.';
COMMENT ON COLUMN "canvas"."course_sections"."name" IS 'The name of the section.';
COMMENT ON COLUMN "canvas"."course_sections"."course_id" IS 'The unique Canvas identifier for the course in which the section belongs.';
COMMENT ON COLUMN "canvas"."course_sections"."integration_id" IS 'The integration ID of the section. This field is only included if there is an integration set up between CanvaS and SIS.';
COMMENT ON COLUMN "canvas"."course_sections"."created_at" IS 'Timestamp for when this section was entered into the system.';
COMMENT ON COLUMN "canvas"."course_sections"."updated_at" IS 'Timestamp for when the last time the section was updated.';
COMMENT ON COLUMN "canvas"."course_sections"."workflow_state" IS 'Life-cycle state for the section.';
COMMENT ON COLUMN "canvas"."course_sections"."sis_batch_id" IS 'The unique identifier for the SIS import if created through SIS.';
COMMENT ON COLUMN "canvas"."course_sections"."start_at" IS 'The start date for the section, if applicable. When a user is allowed to participate in a course, enrollment term dates, course dates, and course section dates flow together in all aspects of Canvas. Various dates allow different users to participate in the course. The hierarchy of dates are: course section dates override course dates, course dates override term dates.';
COMMENT ON COLUMN "canvas"."course_sections"."end_at" IS 'The end date for the section, if applicable. When a user is allowed to participate in a course.';
COMMENT ON COLUMN "canvas"."course_sections"."sis_source_id" IS 'Id for the correlated record for the section in the SIS (assuming SIS integration has been properly configured).';
COMMENT ON COLUMN "canvas"."course_sections"."default_section" IS 'True if this is the default section.';
COMMENT ON COLUMN "canvas"."course_sections"."accepting_enrollments" IS 'True if this section is open for enrollment.';
COMMENT ON COLUMN "canvas"."course_sections"."restrict_enrollments_to_section_dates" IS 'Restrict user enrollments to the start and end dates of the section. True when "Users can only participate in the course between these dates" is checked.';
COMMENT ON COLUMN "canvas"."course_sections"."nonxlist_course_id" IS 'The unique identifier of the original course of a cross-listed section.';
COMMENT ON COLUMN "canvas"."course_sections"."enrollment_term_id" IS 'Identifies the associated enrollment term.';
CREATE TABLE "canvas"."courses" (
"id" bigint NOT NULL,
"storage_quota" bigint,
"integration_id" varchar(255),
"lti_context_id" varchar(255),
"sis_batch_id" bigint,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."courses__workflow_state" NOT NULL,
"account_id" bigint NOT NULL,
"grading_standard_id" bigint,
"start_at" timestamp,
"sis_source_id" varchar(255),
"group_weighting_scheme" varchar(255),
"conclude_at" timestamp,
"is_public" boolean,
"allow_student_wiki_edits" boolean,
"syllabus_body" text,
"default_wiki_editing_roles" varchar(255),
"wiki_id" bigint,
"allow_student_organized_groups" boolean NOT NULL,
"course_code" varchar(255),
"default_view" varchar(255),
"abstract_course_id" bigint,
"enrollment_term_id" bigint NOT NULL,
"open_enrollment" boolean,
"tab_configuration" text,
"turnitin_comments" text,
"self_enrollment" boolean,
"license" varchar(255),
"indexed" boolean,
"restrict_enrollments_to_course_dates" boolean,
"template_course_id" bigint,
"replacement_course_id" bigint,
"public_description" text,
"self_enrollment_code" varchar(255),
"self_enrollment_limit" integer,
"turnitin_id" bigint,
"show_announcements_on_home_page" boolean,
"home_page_announcement_limit" integer,
"latest_outcome_import_id" bigint,
"grade_passback_setting" varchar(255),
"template" boolean NOT NULL,
"homeroom_course" boolean NOT NULL,
"sync_enrollments_from_homeroom" boolean NOT NULL,
"homeroom_course_id" bigint,
"locale" varchar(255),
"name" varchar(255),
"time_zone" varchar(255),
"uuid" varchar(255),
"settings" "canvas"."Annotated",
CONSTRAINT "pk_courses" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."courses" IS 'Stores attributes for a course.';
COMMENT ON COLUMN "canvas"."courses"."id" IS 'The unique identifier for the course.';
COMMENT ON COLUMN "canvas"."courses"."storage_quota" IS 'The total amount of storage space (in bytes) allowed to be used by files in the course.';
COMMENT ON COLUMN "canvas"."courses"."integration_id" IS 'the integration identifier for the course, if defined.';
COMMENT ON COLUMN "canvas"."courses"."lti_context_id" IS 'UUID of the Canvas context in LTI standard. secondary ID for this context, could be used in API to identify resource as well.';
COMMENT ON COLUMN "canvas"."courses"."sis_batch_id" IS 'The unique identifier for the SIS import.';
COMMENT ON COLUMN "canvas"."courses"."created_at" IS 'The date the course was created.';
COMMENT ON COLUMN "canvas"."courses"."updated_at" IS 'The time the course was last updated.';
COMMENT ON COLUMN "canvas"."courses"."workflow_state" IS 'Life-cycle state for the course.';
COMMENT ON COLUMN "canvas"."courses"."account_id" IS 'Points to the account associated with the course.';
COMMENT ON COLUMN "canvas"."courses"."grading_standard_id" IS 'The grading standard associated with the course.';
COMMENT ON COLUMN "canvas"."courses"."start_at" IS 'The start date for the course, if applicable. If NULL, then use `start_at` value from `enrollment_terms` table. Enrollment term dates, course dates, and course section dates flow together in all aspects of Canvas. Various dates allow different users to participate in the course. The hierarchy of dates are: course section dates override course dates, course dates override term dates.';
COMMENT ON COLUMN "canvas"."courses"."sis_source_id" IS 'The SIS identifier for the course, if defined.';
COMMENT ON COLUMN "canvas"."courses"."group_weighting_scheme" IS 'Whether final grades will be weighted based on the `group_weight` value of assignment groups `percent` if weighted `equal` or NULL otherwise.';
COMMENT ON COLUMN "canvas"."courses"."conclude_at" IS 'The end date for the course, if applicable. If NULL, then use `start_at` value from `enrollment_terms` table.';
COMMENT ON COLUMN "canvas"."courses"."is_public" IS 'True if the course is publicly visible.';
COMMENT ON COLUMN "canvas"."courses"."allow_student_wiki_edits" IS 'Whether Pages in the course can be created and are editable by students.';
COMMENT ON COLUMN "canvas"."courses"."syllabus_body" IS 'User-generated HTML for the course syllabus.';
COMMENT ON COLUMN "canvas"."courses"."default_wiki_editing_roles" IS 'Comma-separated list used as the default `editing_roles` value for new `wiki_pages` in the course.';
COMMENT ON COLUMN "canvas"."courses"."wiki_id" IS 'Foreign key to the `wikis` dataset.';
COMMENT ON COLUMN "canvas"."courses"."allow_student_organized_groups" IS 'Whether students are able to organize their own groups.';
COMMENT ON COLUMN "canvas"."courses"."course_code" IS 'The course code.';
COMMENT ON COLUMN "canvas"."courses"."default_view" IS 'the type of page that users will see when they first visit the course - `feed`: Recent Activity Dashboard - `wiki`: Wiki Front Page - `modules`: Course Modules/Sections Page - `assignments`: Course Assignments List - `syllabus`: Course Syllabus Page other types may be added in the future.';
COMMENT ON COLUMN "canvas"."courses"."abstract_course_id" IS 'Foreign key to the `abstract_courses` table.';
COMMENT ON COLUMN "canvas"."courses"."enrollment_term_id" IS 'The enrollment term associated with the course.';
COMMENT ON COLUMN "canvas"."courses"."open_enrollment" IS 'Whether the course has enabled open enrollment.';
COMMENT ON COLUMN "canvas"."courses"."tab_configuration" IS 'A JSON serialized list detailing the order and visibility status of tabs in the left-hand navigation for the course.';
COMMENT ON COLUMN "canvas"."courses"."turnitin_comments" IS 'Comments to be shown to students when submitting a Turnitin-enabled assignment.';
COMMENT ON COLUMN "canvas"."courses"."self_enrollment" IS 'Whether the course has enabled self enrollment.';
COMMENT ON COLUMN "canvas"."courses"."license" IS 'The default license for content in the course; `private`: Private (Copyrighted), `public_domain`: Public Domain, `cc_by`: CC Attribution, `cc_by_sa`: CC Attribution Share Alike, `cc_by_nc`: CC Attribution Noncommercial, `cc_by_nc_sa`: CC Attribution Noncommercial Share Alike, `cc_by_nd`: CC Attribution No Derivatives, `cc_by_nc_nd`: CC Attribution Noncommercial No Derivatives.';
COMMENT ON COLUMN "canvas"."courses"."indexed" IS 'Whether the course is included in the public course index.';
COMMENT ON COLUMN "canvas"."courses"."restrict_enrollments_to_course_dates" IS 'Whether the course''s start and end dates will override dates from the term when determining user access.';
COMMENT ON COLUMN "canvas"."courses"."template_course_id" IS 'If set, this course was originally created via SIS when a section was marked to be cross listed to a non-existent course, using attributes from the original section''s course and setting that course ID here.';
COMMENT ON COLUMN "canvas"."courses"."replacement_course_id" IS 'The ID of the course created to replace this one when it had its content reset.';
COMMENT ON COLUMN "canvas"."courses"."public_description" IS 'The public description of the course.';
COMMENT ON COLUMN "canvas"."courses"."self_enrollment_code" IS 'The alpha-numeric code students can use to enroll in the course through self enrollment.';
COMMENT ON COLUMN "canvas"."courses"."self_enrollment_limit" IS 'The number of students that can enroll in the course through self enrollment.';
COMMENT ON COLUMN "canvas"."courses"."turnitin_id" IS 'A unique identifier for use with Turnitin.';
COMMENT ON COLUMN "canvas"."courses"."show_announcements_on_home_page" IS 'Whether announcements will be shown on the course home page.';
COMMENT ON COLUMN "canvas"."courses"."home_page_announcement_limit" IS 'The maximum number of announcements to show on the course home page.';
COMMENT ON COLUMN "canvas"."courses"."latest_outcome_import_id" IS 'The ID of the most recent Outcome Import for the course.';
COMMENT ON COLUMN "canvas"."courses"."grade_passback_setting" IS 'The grade_passback_setting set on the course.';
COMMENT ON COLUMN "canvas"."courses"."template" IS 'Course is marked as a template for accounts to use.';
COMMENT ON COLUMN "canvas"."courses"."homeroom_course" IS 'Course is marked as a homeroom course.';
COMMENT ON COLUMN "canvas"."courses"."sync_enrollments_from_homeroom" IS 'Enrollments for this course will be synced from the associated homeroom.';
COMMENT ON COLUMN "canvas"."courses"."homeroom_course_id" IS 'Points to the homeroom course from which this course receives its enrollments.';
COMMENT ON COLUMN "canvas"."courses"."locale" IS 'The course-set locale, if applicable.';
COMMENT ON COLUMN "canvas"."courses"."name" IS 'The full name of the course.';
COMMENT ON COLUMN "canvas"."courses"."time_zone" IS 'The course''s IANA time zone name.';
COMMENT ON COLUMN "canvas"."courses"."uuid" IS 'The UUID of the course.';
COMMENT ON COLUMN "canvas"."courses"."settings" IS 'Miscellaneous settings for the course.';
CREATE TABLE "canvas"."custom_gradebook_column_data" (
"id" bigint NOT NULL,
"content" varchar(255) NOT NULL,
"user_id" bigint NOT NULL,
"custom_gradebook_column_id" bigint NOT NULL,
CONSTRAINT "pk_custom_gradebook_column_data" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."custom_gradebook_column_data" IS 'Contains per-user data for the custom columns defined in custom_gradebook_columns.';
COMMENT ON COLUMN "canvas"."custom_gradebook_column_data"."id" IS 'The unique identifier for a custom gradebook column data record.';
COMMENT ON COLUMN "canvas"."custom_gradebook_column_data"."content" IS 'The particular value of the specified column for the user denoted by user_id.';
COMMENT ON COLUMN "canvas"."custom_gradebook_column_data"."user_id" IS 'The unique ID of the user to whom this data record applies.';
COMMENT ON COLUMN "canvas"."custom_gradebook_column_data"."custom_gradebook_column_id" IS 'The ID of the associated custom column.';
CREATE TABLE "canvas"."custom_gradebook_columns" (
"id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."custom_gradebook_columns__workflow_state" NOT NULL,
"course_id" bigint NOT NULL,
"teacher_notes" boolean NOT NULL,
"position" integer NOT NULL,
"read_only" boolean NOT NULL,
"title" varchar(255) NOT NULL,
CONSTRAINT "pk_custom_gradebook_columns" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."custom_gradebook_columns" IS 'Contains configuration information for custom Gradebook columns defined for specific courses.';
COMMENT ON COLUMN "canvas"."custom_gradebook_columns"."id" IS 'The unique identifier for a custom Gradebook column data definition.';
COMMENT ON COLUMN "canvas"."custom_gradebook_columns"."created_at" IS 'Timestamp of when a custom_gradebook_columns record was created.';
COMMENT ON COLUMN "canvas"."custom_gradebook_columns"."updated_at" IS 'Timestamp of when a custom_gradebook_columns record was updated.';
COMMENT ON COLUMN "canvas"."custom_gradebook_columns"."workflow_state" IS 'Life-cycle state for the custom gradebook column.';
COMMENT ON COLUMN "canvas"."custom_gradebook_columns"."course_id" IS 'The ID of the course that defines this column.';
COMMENT ON COLUMN "canvas"."custom_gradebook_columns"."teacher_notes" IS 'True if this column represents the predefined *Notes* column in Gradebook.';
COMMENT ON COLUMN "canvas"."custom_gradebook_columns"."position" IS 'The ordering of this column among the columns defined for this course.';
COMMENT ON COLUMN "canvas"."custom_gradebook_columns"."read_only" IS 'If true, the contents of this column cannot be edited from Gradebook.';
COMMENT ON COLUMN "canvas"."custom_gradebook_columns"."title" IS 'The title of the column, as displayed in Gradebook.';
CREATE TABLE "canvas"."developer_key_account_bindings" (
"id" bigint NOT NULL,
"account_id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."developer_key_account_bindings__workflow_state" NOT NULL,
"developer_key_id" bigint NOT NULL,
CONSTRAINT "pk_developer_key_account_bindings" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."developer_key_account_bindings" IS E'Joins the accounts table to developer_keys.\n\nDescribes if the associated developer key is "on" or "off" for the associated account.';
COMMENT ON COLUMN "canvas"."developer_key_account_bindings"."id" IS 'The unique identifier for a developer key and account association record.';
COMMENT ON COLUMN "canvas"."developer_key_account_bindings"."account_id" IS 'Points to the account associated with the course. Could be Canvas root account or sub-account ID.';
COMMENT ON COLUMN "canvas"."developer_key_account_bindings"."created_at" IS 'Timestamp of when a developer_key_account_bindings record was created.';
COMMENT ON COLUMN "canvas"."developer_key_account_bindings"."updated_at" IS 'Timestamp of when a developer_key_account_bindings record was updated.';
COMMENT ON COLUMN "canvas"."developer_key_account_bindings"."workflow_state" IS 'The workflow state of the binding.';
COMMENT ON COLUMN "canvas"."developer_key_account_bindings"."developer_key_id" IS 'The ID of the associated developer key.';
CREATE TABLE "canvas"."developer_keys" (
"id" bigint NOT NULL,
"name" varchar(255),
"user_id" bigint,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"scopes" text,
"workflow_state" "canvas"."developer_keys__workflow_state" NOT NULL,
"account_id" bigint,
"redirect_uri" varchar(255),
"icon_url" varchar(255),
"redirect_uris" varchar(255) ARRAY NOT NULL,
"notes" text,
"access_token_count" integer NOT NULL,
"require_scopes" boolean NOT NULL,
"test_cluster_only" boolean NOT NULL,
"public_jwk" text,
"allow_includes" boolean NOT NULL,
"is_lti_key" boolean NOT NULL,
"client_credentials_audience" text,
"email" varchar(255),
"user_name" varchar(255),
CONSTRAINT "pk_developer_keys" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."developer_keys" IS E'A table representing a set of credentials used for API access.\n\nContains both normal API keys and the LTI keys used in LTI 1.3 apps.';
COMMENT ON COLUMN "canvas"."developer_keys"."id" IS 'The unique identifier for a developer key record.';
COMMENT ON COLUMN "canvas"."developer_keys"."name" IS 'The name of the developer key.';
COMMENT ON COLUMN "canvas"."developer_keys"."user_id" IS 'The unique ID of a user.';
COMMENT ON COLUMN "canvas"."developer_keys"."created_at" IS 'Timestamp of when a `developer_keys` record was created.';
COMMENT ON COLUMN "canvas"."developer_keys"."updated_at" IS 'Timestamp of when a `developer_keys` record was updated.';
COMMENT ON COLUMN "canvas"."developer_keys"."scopes" IS 'The list of scopes the developer key''s access tokens may use.';
COMMENT ON COLUMN "canvas"."developer_keys"."workflow_state" IS 'The workflow state of the developer key.';
COMMENT ON COLUMN "canvas"."developer_keys"."account_id" IS 'Points to the account associated with the course. Could be Canvas root account or sub-account ID.';
COMMENT ON COLUMN "canvas"."developer_keys"."redirect_uri" IS '(legacy) The valid redirect URI for the developer key.';
COMMENT ON COLUMN "canvas"."developer_keys"."icon_url" IS 'A URL pointing to the icon of the developer key.';
COMMENT ON COLUMN "canvas"."developer_keys"."redirect_uris" IS 'The list of valid redirect URIs for the developer key.';
COMMENT ON COLUMN "canvas"."developer_keys"."notes" IS 'Any notes added to the developer key.';
COMMENT ON COLUMN "canvas"."developer_keys"."access_token_count" IS 'The number of times the developer key has been used.';
COMMENT ON COLUMN "canvas"."developer_keys"."require_scopes" IS 'Whether or not access token for the developer key are required to be scoped.';
COMMENT ON COLUMN "canvas"."developer_keys"."test_cluster_only" IS 'If true, the developer key''s access tokens are only valid on Canvas test and beta instances.';
COMMENT ON COLUMN "canvas"."developer_keys"."public_jwk" IS 'The public key (in JWK format) for the developer key. Used if the developer key is associated with an LTI 1.3 tool.';
COMMENT ON COLUMN "canvas"."developer_keys"."allow_includes" IS 'If true, requests made with this key''s access token can use "includes" parameters to retrieve additional data in each request.';
COMMENT ON COLUMN "canvas"."developer_keys"."is_lti_key" IS 'If true, the developer key is intended to be used with LTI 1.3 tools.';
COMMENT ON COLUMN "canvas"."developer_keys"."client_credentials_audience" IS 'The intended audience of client credentials issued by the developer key. If internal (default), credentials will be verified by Canvas; if external, credentials will be verified by other parties using Canvas'' public key.';
COMMENT ON COLUMN "canvas"."developer_keys"."email" IS 'The email address of the developer key''s owner.';
COMMENT ON COLUMN "canvas"."developer_keys"."user_name" IS 'the login ID of the user who originated developer key.';
CREATE TABLE "canvas"."discussion_entries" (
"id" bigint NOT NULL,
"message" text,
"attachment_id" bigint,
"deleted_at" timestamp,
"user_id" bigint,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."discussion_entries__workflow_state" NOT NULL,
"migration_id" varchar(255),
"discussion_topic_id" bigint,
"parent_id" bigint,
"editor_id" bigint,
"root_entry_id" bigint,
"depth" integer,
"rating_count" integer,
"rating_sum" integer,
CONSTRAINT "pk_discussion_entries" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."discussion_entries" IS E'Stores attributes for discussion entries.\n\nDiscussion entries are replies in a discussion topic.';
COMMENT ON COLUMN "canvas"."discussion_entries"."id" IS 'The unique identifier for the entry.';
COMMENT ON COLUMN "canvas"."discussion_entries"."message" IS 'The content of the entry. Contains html tags.';
COMMENT ON COLUMN "canvas"."discussion_entries"."attachment_id" IS 'Representation of the attachment for the entry, if any. Present only if there is an attachment.';
COMMENT ON COLUMN "canvas"."discussion_entries"."deleted_at" IS 'Timestamp when the discussion entry was deleted.';
COMMENT ON COLUMN "canvas"."discussion_entries"."user_id" IS 'The unique identifier for the author of the entry.';
COMMENT ON COLUMN "canvas"."discussion_entries"."created_at" IS 'The creation time of the entry.';
COMMENT ON COLUMN "canvas"."discussion_entries"."updated_at" IS 'The updated time of the entry, in ISO8601 format.';
COMMENT ON COLUMN "canvas"."discussion_entries"."workflow_state" IS 'Life-cycle state for the discussion message.';
COMMENT ON COLUMN "canvas"."discussion_entries"."migration_id" IS 'The unique identifier of the migration that imported the entry.';
COMMENT ON COLUMN "canvas"."discussion_entries"."discussion_topic_id" IS 'The ID of the discussion topic that this entry is part of.';
COMMENT ON COLUMN "canvas"."discussion_entries"."parent_id" IS 'The parent discussion entry ID of this discussion entry. Has a value if the entry is a reply to another entry.';
COMMENT ON COLUMN "canvas"."discussion_entries"."editor_id" IS 'The unique user ID of the person to last edit the entry, if different than user_id.';
COMMENT ON COLUMN "canvas"."discussion_entries"."root_entry_id" IS 'The root discussion entry ID that this entry is a part of. Has a value if the entry is a reply to another entry.';
COMMENT ON COLUMN "canvas"."discussion_entries"."depth" IS 'Reply depth for this entry.';
COMMENT ON COLUMN "canvas"."discussion_entries"."rating_count" IS 'Rating count is the amount of people who have submitted a rating on a given discussion with the only rating being "like".';
COMMENT ON COLUMN "canvas"."discussion_entries"."rating_sum" IS 'The rating sum is the sum of the ratings which occurred.';
CREATE TABLE "canvas"."discussion_entry_participants" (
"id" bigint NOT NULL,
"user_id" bigint NOT NULL,
"workflow_state" "canvas"."discussion_entry_participants__workflow_state" NOT NULL,
"forced_read_state" boolean,
"discussion_entry_id" bigint NOT NULL,
"rating" integer,
CONSTRAINT "pk_discussion_entry_participants" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."discussion_entry_participants" IS 'Tracks who has read a particular entry.';
COMMENT ON COLUMN "canvas"."discussion_entry_participants"."id" IS 'The Id of the discussion entry participant.';
COMMENT ON COLUMN "canvas"."discussion_entry_participants"."user_id" IS 'The ID of the user who participated in this discussion entry.';
COMMENT ON COLUMN "canvas"."discussion_entry_participants"."workflow_state" IS 'Life-cycle state for the entry record, could be "read" if a participant read a discussion.';
COMMENT ON COLUMN "canvas"."discussion_entry_participants"."forced_read_state" IS 'Allows for users to force a discussion entry to be unread.';
COMMENT ON COLUMN "canvas"."discussion_entry_participants"."discussion_entry_id" IS 'The ID of the discussion entry that this participant participated in.';
COMMENT ON COLUMN "canvas"."discussion_entry_participants"."rating" IS 'It is a number of 0 or 1 that indicates the rating providing to the linked entry.';
CREATE TABLE "canvas"."discussion_topic_participants" (
"id" bigint NOT NULL,
"user_id" bigint NOT NULL,
"workflow_state" "canvas"."discussion_topic_participants__workflow_state" NOT NULL,
"subscribed" boolean,
"unread_entry_count" integer NOT NULL,
"discussion_topic_id" bigint NOT NULL,
CONSTRAINT "pk_discussion_topic_participants" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."discussion_topic_participants" IS E'Links discussion topics to the users who have posted in them.\n\nIf a user has posted to a discussion topic, there will be a row in this table.';
COMMENT ON COLUMN "canvas"."discussion_topic_participants"."id" IS 'The unique identifier of a discussion topic participants record.';
COMMENT ON COLUMN "canvas"."discussion_topic_participants"."user_id" IS 'The unique ID of a user.';
COMMENT ON COLUMN "canvas"."discussion_topic_participants"."workflow_state" IS 'Current state of the record.';
COMMENT ON COLUMN "canvas"."discussion_topic_participants"."subscribed" IS 'Flag indicating that user is subscribed to discussion and will receive notifications for new comments.';
COMMENT ON COLUMN "canvas"."discussion_topic_participants"."unread_entry_count" IS 'The count of discussion entries that this user has not yet read.';
COMMENT ON COLUMN "canvas"."discussion_topic_participants"."discussion_topic_id" IS 'The unique identifier of a discussion topic record.';
CREATE TABLE "canvas"."discussion_topics" (
"id" bigint NOT NULL,
"message" text,
"type" "canvas"."discussion_topics__type",
"attachment_id" bigint,
"deleted_at" timestamp,
"user_id" bigint,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."discussion_topics__workflow_state" NOT NULL,
"lock_at" timestamp,
"context_id" bigint NOT NULL,
"context_type" "canvas"."discussion_topics__context_type" NOT NULL,
"locked" boolean NOT NULL,
"assignment_id" bigint,
"migration_id" varchar(255),
"group_category_id" bigint,
"cloned_item_id" bigint,
"last_reply_at" timestamp,
"delayed_post_at" timestamp,
"posted_at" timestamp,
"root_topic_id" bigint,
"old_assignment_id" bigint,
"subtopics_refreshed_at" timestamp,
"external_feed_id" bigint,
"podcast_enabled" boolean NOT NULL,
"podcast_has_student_posts" boolean NOT NULL,
"require_initial_post" boolean NOT NULL,
"editor_id" bigint,
"discussion_type" "canvas"."discussion_topics__discussion_type",
"pinned" boolean NOT NULL,
"allow_rating" boolean NOT NULL,
"only_graders_can_rate" boolean NOT NULL,
"sort_by_rating" boolean NOT NULL,
"todo_date" timestamp,
"is_section_specific" boolean NOT NULL,
"position" integer,
"title" varchar(255),
CONSTRAINT "pk_discussion_topics" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."discussion_topics" IS E'This table stores attributes for discussion topics in Canvas.\n\nDiscussion topics are logical discussion threads. They can have many discussion entries. They also have their own\nmessage text for the message that started the topic.';
COMMENT ON COLUMN "canvas"."discussion_topics"."id" IS 'The ID of this topic.';
COMMENT ON COLUMN "canvas"."discussion_topics"."message" IS 'The HTML content of the message body.';
COMMENT ON COLUMN "canvas"."discussion_topics"."type" IS 'Discussion topic type. Two types are default (blank) and Announcement.';
COMMENT ON COLUMN "canvas"."discussion_topics"."attachment_id" IS 'Has a value if the discussion topic is associated with an attachment (file).';
COMMENT ON COLUMN "canvas"."discussion_topics"."deleted_at" IS 'Timestamp when the discussion topic was deleted.';
COMMENT ON COLUMN "canvas"."discussion_topics"."user_id" IS 'The username of the topic creator.';
COMMENT ON COLUMN "canvas"."discussion_topics"."created_at" IS 'The date the discussion topic was made.';
COMMENT ON COLUMN "canvas"."discussion_topics"."updated_at" IS 'The date the discussion topic was updated.';
COMMENT ON COLUMN "canvas"."discussion_topics"."workflow_state" IS 'Life-cycle state for the discussion topic.';
COMMENT ON COLUMN "canvas"."discussion_topics"."lock_at" IS 'The datetime to lock the topic (if ever).';
COMMENT ON COLUMN "canvas"."discussion_topics"."context_id" IS 'The ID of the context that this discussion is used in, e.g. `courses`.`id` if `context_type` is `Course`.';
COMMENT ON COLUMN "canvas"."discussion_topics"."context_type" IS 'The type of context this discussion is used with.';
COMMENT ON COLUMN "canvas"."discussion_topics"."locked" IS 'Whether or not the discussion is *closed for comments*.';
COMMENT ON COLUMN "canvas"."discussion_topics"."assignment_id" IS 'The unique identifier of the assignment if the topic is for grading, otherwise NULL.';
COMMENT ON COLUMN "canvas"."discussion_topics"."migration_id" IS 'The unique identifier of the migration that imported this discussion topic.';
COMMENT ON COLUMN "canvas"."discussion_topics"."group_category_id" IS 'The unique identifier of the group category if the topic is a group discussion, otherwise NULL.';
COMMENT ON COLUMN "canvas"."discussion_topics"."cloned_item_id" IS 'The ID of the item in which this discussion topic was cloned from.';
COMMENT ON COLUMN "canvas"."discussion_topics"."last_reply_at" IS 'The datetime for when the last reply was in the topic.';
COMMENT ON COLUMN "canvas"."discussion_topics"."delayed_post_at" IS 'The datetime to publish the topic (if not right away).';
COMMENT ON COLUMN "canvas"."discussion_topics"."posted_at" IS 'The datetime the topic was posted. If it is NULL it hasn''t been posted yet.';
COMMENT ON COLUMN "canvas"."discussion_topics"."root_topic_id" IS 'If the topic is for grading and a group assignment this will point to the original topic in the course.';
COMMENT ON COLUMN "canvas"."discussion_topics"."old_assignment_id" IS 'the assignment ID after you change a topic from graded to ungraded, then restores the old one if it goes back to graded.';
COMMENT ON COLUMN "canvas"."discussion_topics"."subtopics_refreshed_at" IS 'The time at which the subtopics for a group category discussion was refreshed at.';
COMMENT ON COLUMN "canvas"."discussion_topics"."external_feed_id" IS 'The ID of the external feed that this discussion topic was created from.';
COMMENT ON COLUMN "canvas"."discussion_topics"."podcast_enabled" IS 'Boolean to determine if the podcast is enabled.';
COMMENT ON COLUMN "canvas"."discussion_topics"."podcast_has_student_posts" IS 'If true, the podcast will include posts from students as well. Implies podcast_enabled.';
COMMENT ON COLUMN "canvas"."discussion_topics"."require_initial_post" IS 'If true then a user may not respond to other replies until that user has made an initial reply.';
COMMENT ON COLUMN "canvas"."discussion_topics"."editor_id" IS 'The ID of the editor of the discussion.';
COMMENT ON COLUMN "canvas"."discussion_topics"."discussion_type" IS 'The type of discussion.';
COMMENT ON COLUMN "canvas"."discussion_topics"."pinned" IS 'Whether or not the discussion has been *pinned* by an instructor.';
COMMENT ON COLUMN "canvas"."discussion_topics"."allow_rating" IS 'Whether or not users can rate entries in this topic.';
COMMENT ON COLUMN "canvas"."discussion_topics"."only_graders_can_rate" IS 'Whether or not grade permissions are required to rate entries.';
COMMENT ON COLUMN "canvas"."discussion_topics"."sort_by_rating" IS 'Whether or not entries should be sorted by rating.';
COMMENT ON COLUMN "canvas"."discussion_topics"."todo_date" IS 'Date in which discussion topic will show up in the student planner feature.';
COMMENT ON COLUMN "canvas"."discussion_topics"."is_section_specific" IS 'Boolean distinguishing if the topic is a section specific topic or not.';
COMMENT ON COLUMN "canvas"."discussion_topics"."position" IS 'The position on the discussions index page under pinned items.';
COMMENT ON COLUMN "canvas"."discussion_topics"."title" IS 'The topic title.';
CREATE TABLE "canvas"."enrollment_dates_overrides" (
"id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"context_id" bigint NOT NULL,
"context_type" "canvas"."enrollment_dates_overrides__context_type" NOT NULL,
"start_at" timestamp,
"end_at" timestamp,
"enrollment_term_id" bigint,
"enrollment_type" "canvas"."enrollment_dates_overrides__enrollment_type",
CONSTRAINT "pk_enrollment_dates_overrides" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."enrollment_dates_overrides" IS 'Supports allowing certain roles to have access to a term outside of term date boundaries.';
COMMENT ON COLUMN "canvas"."enrollment_dates_overrides"."id" IS 'The unique identifier for an enrollment date override record.';
COMMENT ON COLUMN "canvas"."enrollment_dates_overrides"."created_at" IS 'Timestamp of when a enrollment_dates_overrides record was created.';
COMMENT ON COLUMN "canvas"."enrollment_dates_overrides"."updated_at" IS 'Timestamp of when an enrollment_dates_overrides record was updated.';
COMMENT ON COLUMN "canvas"."enrollment_dates_overrides"."context_id" IS 'The unique ID of main Canvas account, always a root account ID in this table.';
COMMENT ON COLUMN "canvas"."enrollment_dates_overrides"."context_type" IS 'The type of the object represented by context_id.';
COMMENT ON COLUMN "canvas"."enrollment_dates_overrides"."start_at" IS 'The start time of the enrollment.';
COMMENT ON COLUMN "canvas"."enrollment_dates_overrides"."end_at" IS 'The end datetime for the enrollment date override, if applicable.';
COMMENT ON COLUMN "canvas"."enrollment_dates_overrides"."enrollment_term_id" IS 'The unique identifier for the enrollment term.';
COMMENT ON COLUMN "canvas"."enrollment_dates_overrides"."enrollment_type" IS 'The enrollment type. One of StudentEnrollment, TeacherEnrollment, TaEnrollment, DesignerEnrollment, ObserverEnrollment.';
CREATE TABLE "canvas"."enrollment_states" (
"enrollment_id" bigint NOT NULL,
"updated_at" timestamp,
"state_is_current" boolean NOT NULL,
"state_started_at" timestamp,
"state_valid_until" timestamp,
"restricted_access" boolean NOT NULL,
"access_is_current" boolean NOT NULL,
"state" "canvas"."enrollment_states__state",
CONSTRAINT "pk_enrollment_states" PRIMARY KEY ("enrollment_id")
);
COMMENT ON TABLE "canvas"."enrollment_states" IS 'Stores the state of an enrollment.';
COMMENT ON COLUMN "canvas"."enrollment_states"."enrollment_id" IS 'The ID of the enrollment.';
COMMENT ON COLUMN "canvas"."enrollment_states"."updated_at" IS 'Timestamp of when an `enrollment_states` record was updated.';
COMMENT ON COLUMN "canvas"."enrollment_states"."state_is_current" IS 'Indicates if the enrollment state is current or needs recalculation.';
COMMENT ON COLUMN "canvas"."enrollment_states"."state_started_at" IS 'Indicates the date that the enrollment state should take effect.';
COMMENT ON COLUMN "canvas"."enrollment_states"."state_valid_until" IS 'Indicates the date that the enrollment state becomes stale.';
COMMENT ON COLUMN "canvas"."enrollment_states"."restricted_access" IS 'Indicates if the enrollment is allowed to view the course.';
COMMENT ON COLUMN "canvas"."enrollment_states"."access_is_current" IS 'Indicates if the state is within the start and valid until bounds.';
COMMENT ON COLUMN "canvas"."enrollment_states"."state" IS 'State of the user enrollment.';
CREATE TABLE "canvas"."enrollment_terms" (
"id" bigint NOT NULL,
"name" varchar(255),
"integration_id" varchar(255),
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."enrollment_terms__workflow_state" NOT NULL,
"sis_batch_id" bigint,
"start_at" timestamp,
"end_at" timestamp,
"sis_source_id" varchar(255),
"term_code" varchar(255),
"grading_period_group_id" bigint,
CONSTRAINT "pk_enrollment_terms" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."enrollment_terms" IS E'Stores enrollment term records that describe the term or semester associated with courses (e.g. Fall 2013).\n\nUse the dates in this table as a proxy for the course start/end dates if the `start_at` and `end_at` fields in\nthe courses table are NULL.';
COMMENT ON COLUMN "canvas"."enrollment_terms"."id" IS 'The unique identifier for the enrollment term.';
COMMENT ON COLUMN "canvas"."enrollment_terms"."name" IS 'The name of the term.';
COMMENT ON COLUMN "canvas"."enrollment_terms"."integration_id" IS 'The ID of the enrollment term in the external tools or SIS, this ID usually gets populated via API or SIS import.';
COMMENT ON COLUMN "canvas"."enrollment_terms"."created_at" IS 'Timestamp of when the enrollment term was created.';
COMMENT ON COLUMN "canvas"."enrollment_terms"."updated_at" IS 'Timestamp of when the enrollment term was last updated.';
COMMENT ON COLUMN "canvas"."enrollment_terms"."workflow_state" IS 'Life-cycle state for the term.';
COMMENT ON COLUMN "canvas"."enrollment_terms"."sis_batch_id" IS 'The unique identifier for the SIS import. This field is only included if the user has permission to manage SIS information.';
COMMENT ON COLUMN "canvas"."enrollment_terms"."start_at" IS 'The datetime of the start of the term. Set up by the administrator. Enrollment term dates, course dates, and course section dates flow together in all aspects of Canvas; various dates allow different users to participate in the course. The hierarchy of dates are: course section dates override course dates, course dates override term dates.';
COMMENT ON COLUMN "canvas"."enrollment_terms"."end_at" IS 'The datetime of the end of the term. Set up by the administrator.';
COMMENT ON COLUMN "canvas"."enrollment_terms"."sis_source_id" IS 'The SIS ID of the term. Only included if the user has permission to view SIS information.';
COMMENT ON COLUMN "canvas"."enrollment_terms"."term_code" IS 'Enrollment term code as viewed in the UI.';
COMMENT ON COLUMN "canvas"."enrollment_terms"."grading_period_group_id" IS 'Identifies the grading period group.';
CREATE TABLE "canvas"."enrollments" (
"id" bigint NOT NULL,
"sis_batch_id" bigint,
"user_id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."enrollments__workflow_state" NOT NULL,
"role_id" bigint NOT NULL,
"start_at" timestamp,
"end_at" timestamp,
"course_id" bigint NOT NULL,
"completed_at" timestamp,
"course_section_id" bigint NOT NULL,
"grade_publishing_status" varchar(255) NOT NULL,
"associated_user_id" bigint,
"self_enrolled" boolean,
"limit_privileges_to_course_section" boolean NOT NULL,
"last_activity_at" timestamp,
"total_activity_time" integer,
"sis_pseudonym_id" bigint,
"last_attended_at" timestamp,
"type" "canvas"."enrollments__type" NOT NULL,
CONSTRAINT "pk_enrollments" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."enrollments" IS E'This table stores user enrollments.\n\nAn enrollment represents a user\'s association with a specific course and section. There may be multiple records\nassociated with a `course_id` and `user_id` combination (records are unique on: `course_id`, `user_id`,\n`course_section_id`, `role_id`, `workflow_state`, `associated_user_id`).';
COMMENT ON COLUMN "canvas"."enrollments"."id" IS 'The ID of the enrollment.';
COMMENT ON COLUMN "canvas"."enrollments"."sis_batch_id" IS 'The unique identifier for the SIS import. This field is only included if the user has permission to manage SIS information.';
COMMENT ON COLUMN "canvas"."enrollments"."user_id" IS 'The unique ID of the user.';
COMMENT ON COLUMN "canvas"."enrollments"."created_at" IS 'The created time of the enrollment.';
COMMENT ON COLUMN "canvas"."enrollments"."updated_at" IS 'The updated time of the enrollment.';
COMMENT ON COLUMN "canvas"."enrollments"."workflow_state" IS 'Life-cycle state for the user''s enrollment in the course.';
COMMENT ON COLUMN "canvas"."enrollments"."role_id" IS 'The ID of the enrollment role.';
COMMENT ON COLUMN "canvas"."enrollments"."start_at" IS 'The start time of the enrollment, in ISO8601 format.';
COMMENT ON COLUMN "canvas"."enrollments"."end_at" IS 'The end time of the enrollment, in ISO8601 format.';
COMMENT ON COLUMN "canvas"."enrollments"."course_id" IS 'The unique ID of the course.';
COMMENT ON COLUMN "canvas"."enrollments"."completed_at" IS 'Enrollment completed date.';
COMMENT ON COLUMN "canvas"."enrollments"."course_section_id" IS 'The Section Integration ID in which the enrollment is associated. This field is only included if the user has permission to view SIS information.';
COMMENT ON COLUMN "canvas"."enrollments"."grade_publishing_status" IS 'Used internally with grade passback functionality.';
COMMENT ON COLUMN "canvas"."enrollments"."associated_user_id" IS 'The unique ID of the associated user. Will be NULL unless type is ObserverEnrollment.';
COMMENT ON COLUMN "canvas"."enrollments"."self_enrolled" IS 'Enrollment was created via self-enrollment.';
COMMENT ON COLUMN "canvas"."enrollments"."limit_privileges_to_course_section" IS 'User can only access his or her own course section.';
COMMENT ON COLUMN "canvas"."enrollments"."last_activity_at" IS 'The last activity time of the user for the enrollment. This time stamp updates when a user navigates through the course using the Course Navigation menu, replies to a discussion or submits an assignment or quiz, and when they access course files and pages (does not include mobile interactions or group participation).';
COMMENT ON COLUMN "canvas"."enrollments"."total_activity_time" IS 'The total activity time of the user for the enrollment, in seconds. If user is viewing a page and is enrolled in that particular course, then the time is incremented. Requires at least 2 minutes, but not more than 10 (e.g. if a student just checks their grade or due date and was on the page for less than 2 min, it doesn''t get counted). May not be incremented for page views through mobile app (will get incremented for page views through mobile browser); does not include group activity or page views for videos that do not include intermediate page requests, such as a half-hour recorded lecture.';
COMMENT ON COLUMN "canvas"."enrollments"."sis_pseudonym_id" IS 'If enrolled via SIS import, which pseudonym was referenced to create this enrollment. It is the user ID that was referenced when an enrollment was created via SIS. it''s used for some LTI calls to try and send consistent IDs. also used for splitting accidentally-merged-users to decide which way the enrollments should go.';
COMMENT ON COLUMN "canvas"."enrollments"."last_attended_at" IS 'The last attended date of the user for the enrollment in a course. The UI facing field that could be set by an end user or API call.';
COMMENT ON COLUMN "canvas"."enrollments"."type" IS 'The base enrollment type.';
CREATE TABLE "canvas"."eportfolios" (
"id" bigint NOT NULL,
CONSTRAINT "pk_eportfolios" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."eportfolios" IS 'Data in this table is not exposed, the table is available only as the target of a foreign key or discriminated key relationship.';
CREATE TABLE "canvas"."epub_exports" (
"id" bigint NOT NULL,
CONSTRAINT "pk_epub_exports" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."epub_exports" IS 'Data in this table is not exposed, the table is available only as the target of a foreign key or discriminated key relationship.';
CREATE TABLE "canvas"."external_feeds" (
"id" bigint NOT NULL,
CONSTRAINT "pk_external_feeds" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."external_feeds" IS 'Data in this table is not exposed, the table is available only as the target of a foreign key or discriminated key relationship.';
CREATE TABLE "canvas"."favorites" (
"id" bigint NOT NULL,
"user_id" bigint,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"context_id" bigint,
"context_type" "canvas"."favorites__context_type" NOT NULL,
CONSTRAINT "pk_favorites" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."favorites" IS E'A record of items that a user has favorited, such as a Course.\n\nThis affects how items are displayed in places like the Dashboard.';
COMMENT ON COLUMN "canvas"."favorites"."id" IS 'The unique identifier for a favorite record.';
COMMENT ON COLUMN "canvas"."favorites"."user_id" IS 'The unique ID of a user.';
COMMENT ON COLUMN "canvas"."favorites"."created_at" IS 'Timestamp of when a favorites record was created.';
COMMENT ON COLUMN "canvas"."favorites"."updated_at" IS 'Timestamp of when a favorites record was updated.';
COMMENT ON COLUMN "canvas"."favorites"."context_id" IS 'The unique identifier for the favorites''s context (account, course, user).';
COMMENT ON COLUMN "canvas"."favorites"."context_type" IS 'The type of the object represented by `context_id`, typically `Course` or `Account` or `User`.';
CREATE TABLE "canvas"."folders" (
"id" bigint NOT NULL,
"name" varchar(255),
"full_name" text,
"deleted_at" timestamp,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."folders__workflow_state" NOT NULL,
"unlock_at" timestamp,
"lock_at" timestamp,
"context_id" bigint NOT NULL,
"context_type" "canvas"."folders__context_type" NOT NULL,
"locked" boolean,
"cloned_item_id" bigint,
"submission_context_code" varchar(255),
"parent_folder_id" bigint,
"unique_type" "canvas"."folders__unique_type",
"position" integer,
CONSTRAINT "pk_folders" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."folders" IS 'A collection of files (attachments).';
COMMENT ON COLUMN "canvas"."folders"."id" IS 'The unique identifier for a folder record.';
COMMENT ON COLUMN "canvas"."folders"."name" IS 'Name of the folder.';
COMMENT ON COLUMN "canvas"."folders"."full_name" IS 'Full path of the folder.';
COMMENT ON COLUMN "canvas"."folders"."deleted_at" IS 'Timestamp when this record was deleted. If the record has not been deleted the value will be NULL.';
COMMENT ON COLUMN "canvas"."folders"."created_at" IS 'Timestamp of when a folders record was created.';
COMMENT ON COLUMN "canvas"."folders"."updated_at" IS 'Timestamp of when a folders record was updated.';
COMMENT ON COLUMN "canvas"."folders"."workflow_state" IS 'In this context the workflow state indicates the visibility of the folder.';
COMMENT ON COLUMN "canvas"."folders"."unlock_at" IS 'Indicates the date at which this folder should become accessible.';
COMMENT ON COLUMN "canvas"."folders"."lock_at" IS 'Indicates the date at which this folder should no longer be accessible.';
COMMENT ON COLUMN "canvas"."folders"."context_id" IS 'The unique identifier for the folders''s context (account, course, user).';
COMMENT ON COLUMN "canvas"."folders"."context_type" IS 'The type of the object represented by context_id.';
COMMENT ON COLUMN "canvas"."folders"."locked" IS 'Indicates if the folder is currently accessible [NULL=false].';
COMMENT ON COLUMN "canvas"."folders"."cloned_item_id" IS 'Unique identifier of the folder that this folder was cloned from.';
COMMENT ON COLUMN "canvas"."folders"."submission_context_code" IS 'A value indicating the context to which this folder should be submitted if it is for a submission.';
COMMENT ON COLUMN "canvas"."folders"."parent_folder_id" IS 'Id of the parent folder.';
COMMENT ON COLUMN "canvas"."folders"."unique_type" IS 'Value indicating what kind of files are stored in this folder. NULL is the most common value, meaning this is a standard folder. `media` is a special case where media files are stored.';
COMMENT ON COLUMN "canvas"."folders"."position" IS 'An integer value used for sorting the order in which the folder is listed.';
CREATE TABLE "canvas"."gradebook_uploads" (
"id" bigint NOT NULL,
CONSTRAINT "pk_gradebook_uploads" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."gradebook_uploads" IS 'Data in this table is not exposed, the table is available only as the target of a foreign key or discriminated key relationship.';
CREATE TABLE "canvas"."grading_period_groups" (
"id" bigint NOT NULL,
"account_id" bigint,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."grading_period_groups__workflow_state" NOT NULL,
"course_id" bigint,
"weighted" boolean,
"display_totals_for_all_grading_periods" boolean NOT NULL,
"title" varchar(255),
CONSTRAINT "pk_grading_period_groups" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."grading_period_groups" IS 'Stores attributes for grading period groups, which are a group of grading periods.';
COMMENT ON COLUMN "canvas"."grading_period_groups"."id" IS 'Primary key for the grading period groups.';
COMMENT ON COLUMN "canvas"."grading_period_groups"."account_id" IS 'Points to the account associated with the group.';
COMMENT ON COLUMN "canvas"."grading_period_groups"."created_at" IS 'Timestamp when record was created.';
COMMENT ON COLUMN "canvas"."grading_period_groups"."updated_at" IS 'Timestamp when record was last updated.';
COMMENT ON COLUMN "canvas"."grading_period_groups"."workflow_state" IS 'Life-cycle state for the grading period group.';
COMMENT ON COLUMN "canvas"."grading_period_groups"."course_id" IS 'Identifies the course.';
COMMENT ON COLUMN "canvas"."grading_period_groups"."weighted" IS 'Whether to weight individual grading periods within this grading group.';
COMMENT ON COLUMN "canvas"."grading_period_groups"."display_totals_for_all_grading_periods" IS 'If set, shows the option to display the totals for all grading periods within this group on the student grades page and the gradebook.';
COMMENT ON COLUMN "canvas"."grading_period_groups"."title" IS 'The title for this grading period group.';
CREATE TABLE "canvas"."grading_periods" (
"id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."grading_periods__workflow_state" NOT NULL,
"grading_period_group_id" bigint NOT NULL,
"start_date" timestamp NOT NULL,
"end_date" timestamp NOT NULL,
"close_date" timestamp,
"title" varchar(255),
"weight" double precision,
CONSTRAINT "pk_grading_periods" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."grading_periods" IS E'Stores attributes for grading period.\n\nA Grading period is like a "term", essentially used for splitting up the grade book into "periods".';
COMMENT ON COLUMN "canvas"."grading_periods"."id" IS 'The unique identifier for the grading period.';
COMMENT ON COLUMN "canvas"."grading_periods"."created_at" IS 'Timestamp when record was created.';
COMMENT ON COLUMN "canvas"."grading_periods"."updated_at" IS 'Timestamp when record was last updated.';
COMMENT ON COLUMN "canvas"."grading_periods"."workflow_state" IS 'Life-cycle state for the grading periods.';
COMMENT ON COLUMN "canvas"."grading_periods"."grading_period_group_id" IS 'Surrogate ID to the grading period group dataset.';
COMMENT ON COLUMN "canvas"."grading_periods"."start_date" IS 'The start date of the grading period.';
COMMENT ON COLUMN "canvas"."grading_periods"."end_date" IS 'The end date of the grading period.';
COMMENT ON COLUMN "canvas"."grading_periods"."close_date" IS 'Grades can only be changed before this close date of the grading period.';
COMMENT ON COLUMN "canvas"."grading_periods"."title" IS 'The title for the grading period.';
COMMENT ON COLUMN "canvas"."grading_periods"."weight" IS 'A weight value that contributes to the overall weight of a grading period set, used to calculate how much assignments in this period contribute to the total grade.';
CREATE TABLE "canvas"."grading_standards" (
"id" bigint NOT NULL,
"version" integer,
"context_code" varchar(255),
"user_id" bigint,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."grading_standards__workflow_state" NOT NULL,
"context_id" bigint NOT NULL,
"context_type" "canvas"."grading_standards__context_type" NOT NULL,
"migration_id" varchar(255),
"title" varchar(255),
"data" text,
CONSTRAINT "pk_grading_standards" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."grading_standards" IS 'Contains data for grading schemes defined for a course or account.';
COMMENT ON COLUMN "canvas"."grading_standards"."id" IS 'The unique identifier for a grading standard record.';
COMMENT ON COLUMN "canvas"."grading_standards"."version" IS 'Either 1 or 2, as noted in the definition of `data`.';
COMMENT ON COLUMN "canvas"."grading_standards"."context_code" IS 'A value in string form representing the associated context (e.g., `course_5`).';
COMMENT ON COLUMN "canvas"."grading_standards"."user_id" IS 'The ID of the user who created this grading standard.';
COMMENT ON COLUMN "canvas"."grading_standards"."created_at" IS 'Timestamp of when a `grading_standards` record was created.';
COMMENT ON COLUMN "canvas"."grading_standards"."updated_at" IS 'Timestamp of when a `grading_standards` record was updated.';
COMMENT ON COLUMN "canvas"."grading_standards"."workflow_state" IS 'Life-cycle state for the grading standard.';
COMMENT ON COLUMN "canvas"."grading_standards"."context_id" IS 'The ID of the account or course to which this grading standard belongs.';
COMMENT ON COLUMN "canvas"."grading_standards"."context_type" IS 'The type of the object represented by `context_id`, either Account or Course.';
COMMENT ON COLUMN "canvas"."grading_standards"."migration_id" IS 'The ID of the associated migration, if this grading standard was created via a content migration.';
COMMENT ON COLUMN "canvas"."grading_standards"."title" IS 'The name for this grading standard.';
COMMENT ON COLUMN "canvas"."grading_standards"."data" IS 'A stringified array representing the content of this grading standard. If the `version` column is 1, each element is a tuple containing a letter grade and the maximum value for that letter grade. If the `version` column is 2, each element is a tuple containing a letter grade and the minimum value for that letter grade.';
CREATE TABLE "canvas"."group_and_membership_importers" (
"id" bigint NOT NULL,
CONSTRAINT "pk_group_and_membership_importers" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."group_and_membership_importers" IS 'Data in this table is not exposed, the table is available only as the target of a foreign key or discriminated key relationship.';
CREATE TABLE "canvas"."group_categories" (
"id" bigint NOT NULL,
"name" varchar(255),
"deleted_at" timestamp,
"created_at" timestamp,
"updated_at" timestamp,
"sis_batch_id" bigint,
"context_id" bigint,
"context_type" "canvas"."group_categories__context_type" NOT NULL,
"sis_source_id" text,
"role" "canvas"."group_categories__role",
"self_signup" varchar(255),
"group_limit" integer,
"auto_leader" varchar(255),
CONSTRAINT "pk_group_categories" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."group_categories" IS 'A container for a set of groups, since often you want everyone to be in exactly one group in a set.';
COMMENT ON COLUMN "canvas"."group_categories"."id" IS 'The unique identifier for a group category record.';
COMMENT ON COLUMN "canvas"."group_categories"."name" IS 'The display name of the group category.';
COMMENT ON COLUMN "canvas"."group_categories"."deleted_at" IS 'Timestamp when this record was deleted. If the record has not been deleted the value will be NULL.';
COMMENT ON COLUMN "canvas"."group_categories"."created_at" IS 'Timestamp of when a `group_categories` record was created.';
COMMENT ON COLUMN "canvas"."group_categories"."updated_at" IS 'Timestamp of when a `group_categories` record was updated.';
COMMENT ON COLUMN "canvas"."group_categories"."sis_batch_id" IS 'The unique identifier for the SIS import. This field is only included if the user has permission to manage SIS information.';
COMMENT ON COLUMN "canvas"."group_categories"."context_id" IS 'The unique identifier for the context of `group_categories` (account, course, user).';
COMMENT ON COLUMN "canvas"."group_categories"."context_type" IS 'The type of the object represented by context_id.';
COMMENT ON COLUMN "canvas"."group_categories"."sis_source_id" IS 'The unique identifier for this group in the customer SIS.';
COMMENT ON COLUMN "canvas"."group_categories"."role" IS 'Certain types of group categories have special role designations. Currently, these include: `communities`, `student_organized`, and `imported`. Regular course/account group categories have a role of NULL.';
COMMENT ON COLUMN "canvas"."group_categories"."self_signup" IS 'If the group category allows users to join a group themselves, thought they may only be a member of one group per group category at a time. Values include `restricted`, `enabled`, and NULL. `enabled` allows students to assign themselves to a group, `restricted` restricts them to only joining a group in their section, NULL disallows students from joining groups.';
COMMENT ON COLUMN "canvas"."group_categories"."group_limit" IS 'If self-signup is enabled, this field can be set to cap the number of users in each group. If NULL, there is no limit.';
COMMENT ON COLUMN "canvas"."group_categories"."auto_leader" IS 'Gives instructors the ability to automatically have group leaders assigned. Values include `random`, `first`, and NULL; `random` picks a student from the group at random as the leader, `first` sets the first student to be assigned to the group as the leader.';
CREATE TABLE "canvas"."group_memberships" (
"id" bigint NOT NULL,
"user_id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."group_memberships__workflow_state" NOT NULL,
"sis_batch_id" bigint,
"group_id" bigint NOT NULL,
"moderator" boolean,
"uuid" varchar(255) NOT NULL,
CONSTRAINT "pk_group_memberships" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."group_memberships" IS 'A join table of users and groups. Like enrollments, but for groups instead of courses.';
COMMENT ON COLUMN "canvas"."group_memberships"."id" IS 'The unique identifier for a group membership record.';
COMMENT ON COLUMN "canvas"."group_memberships"."user_id" IS 'The ID of the user object to which the membership belongs.';
COMMENT ON COLUMN "canvas"."group_memberships"."created_at" IS 'Timestamp of when a `group_memberships` record was created.';
COMMENT ON COLUMN "canvas"."group_memberships"."updated_at" IS 'Timestamp of when a `group_memberships` record was updated.';
COMMENT ON COLUMN "canvas"."group_memberships"."workflow_state" IS 'The current state of the membership.';
COMMENT ON COLUMN "canvas"."group_memberships"."sis_batch_id" IS 'The ID of the SIS import if created through SIS. Only included if the user has permission to manage SIS information.';
COMMENT ON COLUMN "canvas"."group_memberships"."group_id" IS 'The ID of the group object to which the membership belongs.';
COMMENT ON COLUMN "canvas"."group_memberships"."moderator" IS 'Whether or not the user is a moderator of the group (the must also be an active member of the group to moderate).';
COMMENT ON COLUMN "canvas"."group_memberships"."uuid" IS 'UUID for a membership record.';
CREATE TABLE "canvas"."groups" (
"id" bigint NOT NULL,
"name" varchar(255),
"deleted_at" timestamp,
"storage_quota" bigint,
"lti_context_id" varchar(255),
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."groups__workflow_state" NOT NULL,
"account_id" bigint NOT NULL,
"sis_batch_id" bigint,
"context_id" bigint NOT NULL,
"context_type" "canvas"."groups__context_type" NOT NULL,
"migration_id" varchar(255),
"group_category_id" bigint,
"sis_source_id" varchar(255),
"is_public" boolean,
"wiki_id" bigint,
"max_membership" integer,
"join_level" varchar(255),
"avatar_attachment_id" bigint,
"leader_id" bigint,
"description" text,
"uuid" varchar(255) NOT NULL,
"default_view" "canvas"."groups__default_view",
CONSTRAINT "pk_groups" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."groups" IS E'Stores attributes for groups in canvas.\n\nGroups contain two or more students enrolled in a particular course working on an assignment or project together.';
COMMENT ON COLUMN "canvas"."groups"."id" IS 'The ID of the group.';
COMMENT ON COLUMN "canvas"."groups"."name" IS 'The display name of the group.';
COMMENT ON COLUMN "canvas"."groups"."deleted_at" IS 'Timestamp when the group was deleted.';
COMMENT ON COLUMN "canvas"."groups"."storage_quota" IS 'The storage quota for the group.';
COMMENT ON COLUMN "canvas"."groups"."lti_context_id" IS 'UUID of the Canvas context in LTI standard. secondary ID for this context, could be used in API to identify resource as well.';
COMMENT ON COLUMN "canvas"."groups"."created_at" IS 'Timestamp when the group was first saved in the system.';
COMMENT ON COLUMN "canvas"."groups"."updated_at" IS 'Timestamp when the group was last updated in the system.';
COMMENT ON COLUMN "canvas"."groups"."workflow_state" IS 'Life-cycle state for the group.';
COMMENT ON COLUMN "canvas"."groups"."account_id" IS 'Identifies the associated account, groups could be owned by sub-accounts.';
COMMENT ON COLUMN "canvas"."groups"."sis_batch_id" IS 'The ID of the SIS import if created through SIS.';
COMMENT ON COLUMN "canvas"."groups"."context_id" IS 'The ID of the context (account or course) this group belongs too. See also: context_type.';
COMMENT ON COLUMN "canvas"."groups"."context_type" IS 'The course or account that the group belongs to. The pattern here is that whatever the `context_type` is, there will be an `_id` field named after that type. So if instead `context_type` was `account`, the `course_id` field would be replaced by an `account_id` field.';
COMMENT ON COLUMN "canvas"."groups"."migration_id" IS 'The unique identifier of the migration that imported this group.';
COMMENT ON COLUMN "canvas"."groups"."group_category_id" IS 'The ID of the group''s category.';
COMMENT ON COLUMN "canvas"."groups"."sis_source_id" IS 'The SIS ID of the group.';
COMMENT ON COLUMN "canvas"."groups"."is_public" IS 'Whether or not the group is public. Currently only community groups can be made public. Also, once a group has been set to public, it cannot be changed back to private.';
COMMENT ON COLUMN "canvas"."groups"."wiki_id" IS 'The ID of an associated wiki page.';
COMMENT ON COLUMN "canvas"."groups"."max_membership" IS 'The maximum number of participating users in the group.';
COMMENT ON COLUMN "canvas"."groups"."join_level" IS 'How people are allowed to join the group. For all groups except for community groups, the user must share the group''s parent course or account. For student organized or community groups, where a user can be a member of as many or few as they want, the applicable levels are `parent_context_auto_join`, `parent_context_request`, and `invitation_only`. For class groups, where students are divided up and should only be part of one group of the category, this value will always be `invitation_only`, and is not relevant. If `parent_context_auto_join`, anyone can join and will be automatically accepted. If `parent_context_request`, anyone can request to join, which must be approved by a group moderator. If `invitation_only`, only those how have received an invitation my join the group, by accepting that invitation.';
COMMENT ON COLUMN "canvas"."groups"."avatar_attachment_id" IS 'Foreign key to the `attachments` table for the avatar of this group.';
COMMENT ON COLUMN "canvas"."groups"."leader_id" IS 'Foreign key to the `users` table for the leader of this group.';
COMMENT ON COLUMN "canvas"."groups"."description" IS 'A description of the group.';
COMMENT ON COLUMN "canvas"."groups"."uuid" IS 'The UUID of the group.';
COMMENT ON COLUMN "canvas"."groups"."default_view" IS 'Default view for groups is the feed.';
CREATE TABLE "canvas"."late_policies" (
"id" bigint NOT NULL,
"course_id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"missing_submission_deduction_enabled" boolean NOT NULL,
"missing_submission_deduction" decimal(5, 2) NOT NULL,
"late_submission_deduction_enabled" boolean NOT NULL,
"late_submission_deduction" decimal(5, 2) NOT NULL,
"late_submission_interval" varchar(16) NOT NULL,
"late_submission_minimum_percent_enabled" boolean NOT NULL,
"late_submission_minimum_percent" decimal(5, 2) NOT NULL,
CONSTRAINT "pk_late_policies" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."late_policies" IS 'Contains late/missing policy configurations for courses.';
COMMENT ON COLUMN "canvas"."late_policies"."id" IS 'The unique identifier for a late policy record.';
COMMENT ON COLUMN "canvas"."late_policies"."course_id" IS 'The ID of the course this late policy references.';
COMMENT ON COLUMN "canvas"."late_policies"."created_at" IS 'Timestamp of when a `late_policies` record was created.';
COMMENT ON COLUMN "canvas"."late_policies"."updated_at" IS 'Timestamp of when a `late_policies` record was updated.';
COMMENT ON COLUMN "canvas"."late_policies"."missing_submission_deduction_enabled" IS 'Whether to apply a deduction for submissions that have not been submitted as of their due date.';
COMMENT ON COLUMN "canvas"."late_policies"."missing_submission_deduction" IS 'The amount to award for a missing submission, expressed as a percentage (from 0 to 100) of the assignment''s possible points.';
COMMENT ON COLUMN "canvas"."late_policies"."late_submission_deduction_enabled" IS 'Whether to apply a deduction for submissions submitted late.';
COMMENT ON COLUMN "canvas"."late_policies"."late_submission_deduction" IS 'The amount to deduct from the submission for each interval it is late, expressed as a percentage (from 0 to 100) of the assignment''s possible points.';
COMMENT ON COLUMN "canvas"."late_policies"."late_submission_interval" IS 'The interval at which points should be deducted: valid values are `day` and `hour`.';
COMMENT ON COLUMN "canvas"."late_policies"."late_submission_minimum_percent_enabled" IS 'True if the points deducted for lateness should be capped.';
COMMENT ON COLUMN "canvas"."late_policies"."late_submission_minimum_percent" IS 'If late_submission_minimum_percent_enabled is true, prevents late deductions from bringing a submission below this percentage of the total points. A value between 0 and 100.';
CREATE TABLE "canvas"."learning_outcome_groups" (
"id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."learning_outcome_groups__workflow_state" NOT NULL,
"context_id" bigint,
"context_type" "canvas"."learning_outcome_groups__context_type",
"migration_id" varchar(255),
"learning_outcome_group_id" bigint,
"root_learning_outcome_group_id" bigint,
"vendor_guid" varchar(255),
"outcome_import_id" bigint,
"source_outcome_group_id" bigint,
"description" text,
"title" varchar(255) NOT NULL,
CONSTRAINT "pk_learning_outcome_groups" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."learning_outcome_groups" IS E'Learning outcome groups organize outcomes hierarchically within a context, such as an account, course or the global context.\n\nThis table contains dimensions for learning outcome groups.';
COMMENT ON COLUMN "canvas"."learning_outcome_groups"."id" IS 'The unique identifier for a learning outcome group record.';
COMMENT ON COLUMN "canvas"."learning_outcome_groups"."created_at" IS 'Timestamp of when a learning_outcome_groups record was created.';
COMMENT ON COLUMN "canvas"."learning_outcome_groups"."updated_at" IS 'Timestamp of when a learning_outcome_groups record was updated.';
COMMENT ON COLUMN "canvas"."learning_outcome_groups"."workflow_state" IS 'Workflow status of the learning outcome.';
COMMENT ON COLUMN "canvas"."learning_outcome_groups"."context_id" IS 'The unique identifier for the learning_outcome_groups''s context (account, course).';
COMMENT ON COLUMN "canvas"."learning_outcome_groups"."context_type" IS 'The type of the object represented by context_id.';
COMMENT ON COLUMN "canvas"."learning_outcome_groups"."migration_id" IS 'A GUID used to resolve outcomes during import and migration.';
COMMENT ON COLUMN "canvas"."learning_outcome_groups"."learning_outcome_group_id" IS 'ID associated with the parent of this group (NULL if it does not have parent). Refers to a learning_outcome_group record.';
COMMENT ON COLUMN "canvas"."learning_outcome_groups"."root_learning_outcome_group_id" IS 'ID associated with the root group in the group hierarchy (NULL if it is the root). Refers to a learning_outcome_group record.';
COMMENT ON COLUMN "canvas"."learning_outcome_groups"."vendor_guid" IS 'A custom GUID for the learning standard.';
COMMENT ON COLUMN "canvas"."learning_outcome_groups"."outcome_import_id" IS 'Foreign key to the outcome import associated with this outcome group, if this group was imported.';
COMMENT ON COLUMN "canvas"."learning_outcome_groups"."source_outcome_group_id" IS 'Foreign key to the learning outcome group that the group was copied from.';
COMMENT ON COLUMN "canvas"."learning_outcome_groups"."description" IS 'Description of the learning outcome group.';
COMMENT ON COLUMN "canvas"."learning_outcome_groups"."title" IS 'Title of the learning outcome group.';
CREATE TABLE "canvas"."learning_outcome_question_results" (
"id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"learning_outcome_id" bigint,
"associated_asset_id" bigint,
"associated_asset_type" "canvas"."learning_outcome_question_results__associated_asset_type" NOT NULL,
"learning_outcome_result_id" bigint,
"score" double precision,
"possible" double precision,
"mastery" boolean,
"attempt" integer,
"original_score" double precision,
"original_possible" double precision,
"original_mastery" boolean,
"assessed_at" timestamp,
"submitted_at" timestamp,
"percent" double precision,
"title" text,
CONSTRAINT "pk_learning_outcome_question_results" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."learning_outcome_question_results" IS 'Attributes for the results of answered questions which have been associated with a learning outcome.';
COMMENT ON COLUMN "canvas"."learning_outcome_question_results"."id" IS 'The unique identifier for a learning outcome question result record.';
COMMENT ON COLUMN "canvas"."learning_outcome_question_results"."created_at" IS 'Timestamp of when a learning_outcome_question_results record was created.';
COMMENT ON COLUMN "canvas"."learning_outcome_question_results"."updated_at" IS 'Timestamp of when a learning_outcome_question_results record was updated.';
COMMENT ON COLUMN "canvas"."learning_outcome_question_results"."learning_outcome_id" IS 'Foreign key to the learning outcome this record is associated with.';
COMMENT ON COLUMN "canvas"."learning_outcome_question_results"."associated_asset_id" IS 'Polymorphic foreign key to the associated asset (currently always Assessment Question) used to generate this result.';
COMMENT ON COLUMN "canvas"."learning_outcome_question_results"."associated_asset_type" IS 'Type of the associated asset (currently always Assessment Question).';
COMMENT ON COLUMN "canvas"."learning_outcome_question_results"."learning_outcome_result_id" IS 'Identifies the learning outcome result.';
COMMENT ON COLUMN "canvas"."learning_outcome_question_results"."score" IS 'The student''s score.';
COMMENT ON COLUMN "canvas"."learning_outcome_question_results"."possible" IS 'Total number of points possible.';
COMMENT ON COLUMN "canvas"."learning_outcome_question_results"."mastery" IS 'Boolean indicating whether user achieved mastery.';
COMMENT ON COLUMN "canvas"."learning_outcome_question_results"."attempt" IS 'The total number of attempts, or submissions.';
COMMENT ON COLUMN "canvas"."learning_outcome_question_results"."original_score" IS 'Score on the first attempt.';
COMMENT ON COLUMN "canvas"."learning_outcome_question_results"."original_possible" IS 'Possible points on the first attempt.';
COMMENT ON COLUMN "canvas"."learning_outcome_question_results"."original_mastery" IS 'Boolean indicating whether user achieved mastery.';
COMMENT ON COLUMN "canvas"."learning_outcome_question_results"."assessed_at" IS 'Time when answer was assessed.';
COMMENT ON COLUMN "canvas"."learning_outcome_question_results"."submitted_at" IS 'Time when answer was submitted.';
COMMENT ON COLUMN "canvas"."learning_outcome_question_results"."percent" IS 'Score''s percent of maximum points possible for outcome, scaled to reflect any custom mastery levels that differ from the learning outcome.';
COMMENT ON COLUMN "canvas"."learning_outcome_question_results"."title" IS 'Title for identifying the question result.';
CREATE TABLE "canvas"."learning_outcome_results" (
"id" bigint NOT NULL,
"user_id" bigint,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."learning_outcome_results__workflow_state" NOT NULL,
"context_id" bigint,
"context_type" "canvas"."learning_outcome_results__context_type",
"context_code" varchar(255),
"learning_outcome_id" bigint,
"associated_asset_id" bigint,
"associated_asset_type" "canvas"."learning_outcome_results__associated_asset_type",
"score" double precision,
"possible" double precision,
"mastery" boolean,
"attempt" integer,
"original_score" double precision,
"original_possible" double precision,
"original_mastery" boolean,
"assessed_at" timestamp,
"submitted_at" timestamp,
"association_id" bigint,
"association_type" "canvas"."learning_outcome_results__association_type",
"content_tag_id" bigint,
"user_uuid" varchar(255),
"artifact_id" bigint,
"artifact_type" "canvas"."learning_outcome_results__artifact_type",
"hide_points" boolean NOT NULL,
"hidden" boolean NOT NULL,
"percent" double precision,
"title" varchar(255),
CONSTRAINT "pk_learning_outcome_results" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."learning_outcome_results" IS E'Learning outcome results are a student\'s mastery score on a given outcome.\n\nThis table contains dimensions for learning outcome results.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."id" IS 'The unique identifier for a learning outcome result record.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."user_id" IS 'The unique ID of a user who made the submission.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."created_at" IS 'Timestamp of when a learning_outcome_results record was created.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."updated_at" IS 'Timestamp of when a learning_outcome_results record was updated.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."workflow_state" IS 'The current state of a learning outcome result record.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."context_id" IS 'The unique identifier for the learning_outcome_results''s context (account, course, user).';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."context_type" IS 'The type of the object represented by `context_id`, typically `Course` or `Account` or `User`.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."context_code" IS 'Alternate specification of learning outcome result context as single string.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."learning_outcome_id" IS 'Identifies the learning outcome this result is associated with.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."associated_asset_id" IS 'Polymorphic foreign key to the associated asset this result is associated with.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."associated_asset_type" IS 'Type of the associated asset this result is associated with.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."score" IS 'The student''s score.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."possible" IS 'Total number of points possible.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."mastery" IS 'Boolean indicating whether user achieved mastery.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."attempt" IS 'The total number of attempts, or submissions.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."original_score" IS 'Score on the first attempt.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."original_possible" IS 'Possible points on the first attempt.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."original_mastery" IS 'Boolean indicating whether user achieved mastery.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."assessed_at" IS 'Time when the result was assessed.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."submitted_at" IS 'Time when the submission was submitted.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."association_id" IS 'Polymorphic foreign key to the aligned learning object this result is associated with.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."association_type" IS 'Type of the aligned learning object this result is associated with.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."content_tag_id" IS 'Foreign key to the content tag representing the learning outcome alignment this result is associated with.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."user_uuid" IS 'The uuid of the user who made the submission.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."artifact_id" IS 'Polymorphic foreign key to the assessed artifact this result is associated with.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."artifact_type" IS 'Type of the assessed artifact this result is associated with.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."hide_points" IS 'Boolean indicating if outcome result points should be hidden in the Learning Mastery Gradebook and reports. If enabled, replace points with the description of the highest scoring outcome criterion rating.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."hidden" IS 'Boolean indicating if outcome result should be hidden from the Learning Mastery Gradebook and reports.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."percent" IS 'Percent of maximum points possible for an outcome, scaled to reflect any custom mastery levels that differ from the learning outcome.';
COMMENT ON COLUMN "canvas"."learning_outcome_results"."title" IS 'Title for identifying the result.';
CREATE TABLE "canvas"."learning_outcomes" (
"id" bigint NOT NULL,
"display_name" varchar(255),
"context_code" varchar(255),
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."learning_outcomes__workflow_state" NOT NULL,
"context_id" bigint,
"context_type" "canvas"."learning_outcomes__context_type",
"migration_id" varchar(255),
"vendor_guid" varchar(255),
"outcome_import_id" bigint,
"calculation_method" "canvas"."learning_outcomes__calculation_method",
"calculation_int" smallint,
"short_description" varchar(255) NOT NULL,
"description" text,
"data" text,
CONSTRAINT "pk_learning_outcomes" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."learning_outcomes" IS E'Learning outcomes are measurable statements that express student knowledge or a student skill.\n\nThis table contains dimensions for learning outcomes.';
COMMENT ON COLUMN "canvas"."learning_outcomes"."id" IS 'The unique identifier for a learning outcome record.';
COMMENT ON COLUMN "canvas"."learning_outcomes"."display_name" IS 'Optional friendly name for reporting.';
COMMENT ON COLUMN "canvas"."learning_outcomes"."context_code" IS 'Alternate specification of learning outcome context as single string. Combination of `context_type` and `context_id` (e.g. `course_34416`).';
COMMENT ON COLUMN "canvas"."learning_outcomes"."created_at" IS 'Timestamp of when a `learning_outcomes` record was created.';
COMMENT ON COLUMN "canvas"."learning_outcomes"."updated_at" IS 'Timestamp of when a `learning_outcomes` record was updated.';
COMMENT ON COLUMN "canvas"."learning_outcomes"."workflow_state" IS 'Workflow status of the learning outcome.';
COMMENT ON COLUMN "canvas"."learning_outcomes"."context_id" IS 'The unique identifier for the context of `learning_outcomes` (account, course, user), may be NULL for global outcomes.';
COMMENT ON COLUMN "canvas"."learning_outcomes"."context_type" IS 'The type of the object represented by `context_id`.';
COMMENT ON COLUMN "canvas"."learning_outcomes"."migration_id" IS 'A GUID used to resolve outcomes during import and migration.';
COMMENT ON COLUMN "canvas"."learning_outcomes"."vendor_guid" IS 'A custom GUID for the learning standard.';
COMMENT ON COLUMN "canvas"."learning_outcomes"."outcome_import_id" IS 'Foreign key to the outcome import associated with this outcome, if this outcome was imported.';
COMMENT ON COLUMN "canvas"."learning_outcomes"."calculation_method" IS 'The method used to calculate student score.';
COMMENT ON COLUMN "canvas"."learning_outcomes"."calculation_int" IS 'Defines the variable value used by the calculation_method. included only if `calculation_method` uses it.';
COMMENT ON COLUMN "canvas"."learning_outcomes"."short_description" IS 'Title of the outcome.';
COMMENT ON COLUMN "canvas"."learning_outcomes"."description" IS 'Description of the outcome.';
COMMENT ON COLUMN "canvas"."learning_outcomes"."data" IS 'YAML data specifying the scoring method and rubric criteria for this outcome.';
CREATE TABLE "canvas"."live_assessments_assessments" (
"id" bigint NOT NULL,
CONSTRAINT "pk_live_assessments_assessments" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."live_assessments_assessments" IS 'Data in this table is not exposed, the table is available only as the target of a foreign key or discriminated key relationship.';
CREATE TABLE "canvas"."live_assessments_submissions" (
"id" bigint NOT NULL,
CONSTRAINT "pk_live_assessments_submissions" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."live_assessments_submissions" IS 'Data in this table is not exposed, the table is available only as the target of a foreign key or discriminated key relationship.';
CREATE TABLE "canvas"."lti_line_items" (
"id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."lti_line_items__workflow_state" NOT NULL,
"assignment_id" bigint NOT NULL,
"client_id" bigint NOT NULL,
"coupled" boolean NOT NULL,
"score_maximum" double precision NOT NULL,
"resource_id" text,
"lti_resource_link_id" bigint,
"label" text NOT NULL,
"extensions" text NOT NULL,
"tag" text,
CONSTRAINT "pk_lti_line_items" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."lti_line_items" IS E'Represents a line item from the IMS Assignment and Grade service.\n\nLTI 1.3 tools that have been authorized by an admin may manage this table.\n\nSee [Learning Tools Interoperability (LTI) Assignment and Grade Services\nSpecification](https://www.imsglobal.org/spec/lti-ags/v2p0#line-item-service).';
COMMENT ON COLUMN "canvas"."lti_line_items"."id" IS 'The unique identifier for an lti line item record.';
COMMENT ON COLUMN "canvas"."lti_line_items"."created_at" IS 'Timestamp of when a lti_line_items record was created.';
COMMENT ON COLUMN "canvas"."lti_line_items"."updated_at" IS 'Timestamp of when a lti_line_items record was updated.';
COMMENT ON COLUMN "canvas"."lti_line_items"."workflow_state" IS 'The workflow state of the line item.';
COMMENT ON COLUMN "canvas"."lti_line_items"."assignment_id" IS 'The ID of the assignment associated with the line item.';
COMMENT ON COLUMN "canvas"."lti_line_items"."client_id" IS 'The client ID used to create the line item (developer key global id).';
COMMENT ON COLUMN "canvas"."lti_line_items"."coupled" IS 'True if the line item is the default one created when a user created an assignment; false if the line item was created via the API (regardless if it is the default line item or not).';
COMMENT ON COLUMN "canvas"."lti_line_items"."score_maximum" IS 'The maximum score for the line item.';
COMMENT ON COLUMN "canvas"."lti_line_items"."resource_id" IS 'A Tool Provider specified ID for the Line Item. Multiple line items may share the same resourceId within a given context.';
COMMENT ON COLUMN "canvas"."lti_line_items"."lti_resource_link_id" IS 'The resource link ID associated with the line item. This ID matches the associated assignments "lti_context_id".';
COMMENT ON COLUMN "canvas"."lti_line_items"."label" IS 'The label of the line item.';
COMMENT ON COLUMN "canvas"."lti_line_items"."extensions" IS 'Contains canvas-specific line item extensions. For example: submission_type.';
COMMENT ON COLUMN "canvas"."lti_line_items"."tag" IS 'A value used to qualify a line Item beyond its ids. Line Items may be queried by this value in the List endpoint. Multiple line items can share the same tag within a given context.';
CREATE TABLE "canvas"."lti_message_handlers" (
"id" bigint NOT NULL,
CONSTRAINT "pk_lti_message_handlers" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."lti_message_handlers" IS 'Data in this table is not exposed, the table is available only as the target of a foreign key or discriminated key relationship.';
CREATE TABLE "canvas"."lti_resource_links" (
"id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."lti_resource_links__workflow_state" NOT NULL,
"context_id" bigint NOT NULL,
"context_type" "canvas"."lti_resource_links__context_type" NOT NULL,
"context_external_tool_id" bigint NOT NULL,
"custom" text,
"resource_link_uuid" uuid NOT NULL,
"lookup_uuid" uuid NOT NULL,
CONSTRAINT "pk_lti_resource_links" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."lti_resource_links" IS E'Joins `context_external_tools` to other resources in Canvas (assignments for example).\n\nOnly used with LTI 1.3 `context_external_tools`.';
COMMENT ON COLUMN "canvas"."lti_resource_links"."id" IS 'The unique identifier for an lti resource link record.';
COMMENT ON COLUMN "canvas"."lti_resource_links"."created_at" IS 'Timestamp of when a lti_resource_links record was created.';
COMMENT ON COLUMN "canvas"."lti_resource_links"."updated_at" IS 'Timestamp of when a lti_resource_links record was updated.';
COMMENT ON COLUMN "canvas"."lti_resource_links"."workflow_state" IS 'The workflow state of the line item.';
COMMENT ON COLUMN "canvas"."lti_resource_links"."context_id" IS 'The context the LTI resource link belongs to.';
COMMENT ON COLUMN "canvas"."lti_resource_links"."context_type" IS 'The type of the context the LTI resource link belongs to.';
COMMENT ON COLUMN "canvas"."lti_resource_links"."context_external_tool_id" IS 'The ID of the context_external_tool associated to the resource.';
COMMENT ON COLUMN "canvas"."lti_resource_links"."custom" IS 'Custom parameters that will be added to the LTI launch. These are custom parameters returned from a Deep Linking response. These are merged with tool/placement-level custom parameters, if any.';
COMMENT ON COLUMN "canvas"."lti_resource_links"."resource_link_uuid" IS 'A UUID identifying the resource link.';
COMMENT ON COLUMN "canvas"."lti_resource_links"."lookup_uuid" IS 'Used to identify the resource link to use in order to lookup custom parameters in some scenarios, such as a link added from Deep Linking into a Rich Content Editor.';
CREATE TABLE "canvas"."lti_results" (
"id" bigint NOT NULL,
"extensions" text NOT NULL,
"comment" text,
"submission_id" bigint,
"user_id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."lti_results__workflow_state" NOT NULL,
"result_score" double precision,
"result_maximum" double precision,
"activity_progress" text,
"grading_progress" text,
"lti_line_item_id" bigint NOT NULL,
CONSTRAINT "pk_lti_results" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."lti_results" IS E'Represents a result from the IMS Assignment and Grade service\n\nSee [IMS Global](https://www.imsglobal.org/spec/lti-ags/v2p0#result-service). LTI 1.3 tools that have been\nauthorized by an admin may read records from this table via API.';
COMMENT ON COLUMN "canvas"."lti_results"."id" IS 'The unique identifier for an lti result record.';
COMMENT ON COLUMN "canvas"."lti_results"."extensions" IS 'Platform-specific extensions for the result.';
COMMENT ON COLUMN "canvas"."lti_results"."comment" IS 'Comment visible to the student about the result (LTI AGS).';
COMMENT ON COLUMN "canvas"."lti_results"."submission_id" IS 'the ID of the associated submission.';
COMMENT ON COLUMN "canvas"."lti_results"."user_id" IS 'The unique ID of a user.';
COMMENT ON COLUMN "canvas"."lti_results"."created_at" IS 'Timestamp of when a `lti_results` record was created.';
COMMENT ON COLUMN "canvas"."lti_results"."updated_at" IS 'Timestamp of when a `lti_results` record was updated.';
COMMENT ON COLUMN "canvas"."lti_results"."workflow_state" IS 'The workflow state of the result.';
COMMENT ON COLUMN "canvas"."lti_results"."result_score" IS 'The score given for the the student (LTI AGS).';
COMMENT ON COLUMN "canvas"."lti_results"."result_maximum" IS 'The maximum score for the student (LTI AGS).';
COMMENT ON COLUMN "canvas"."lti_results"."activity_progress" IS 'Indication to Canvas of the status of the user towards the activity''s completion. Must be one of Initialized, Started, InProgress, Submitted, Completed (LTI AGS).';
COMMENT ON COLUMN "canvas"."lti_results"."grading_progress" IS 'Indication to Canvas of the status of the grading process. A value of PendingManual will require intervention by a grader. Values of NotReady, Failed, and Pending will cause the scoreGiven to be ignored. FullyGraded values will require no action. Possible values are NotReady, Failed, Pending, PendingManual, FullyGraded (LTI AGS).';
COMMENT ON COLUMN "canvas"."lti_results"."lti_line_item_id" IS 'The ID of the associated line item.';
CREATE TABLE "canvas"."master_courses_child_content_tags" (
"id" bigint NOT NULL,
"child_subscription_id" bigint NOT NULL,
"content_id" bigint NOT NULL,
"migration_id" text,
"downstream_changes" text,
"content_type" "canvas"."master_courses_child_content_tags__content_type" NOT NULL,
CONSTRAINT "pk_master_courses_child_content_tags" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."master_courses_child_content_tags" IS 'Links imported course content to the child subscription and keeps track of changes made to content.';
COMMENT ON COLUMN "canvas"."master_courses_child_content_tags"."id" IS 'The unique identifier of a master courses child content tag record.';
COMMENT ON COLUMN "canvas"."master_courses_child_content_tags"."child_subscription_id" IS 'The ID of a subscription belonging to the associated course.';
COMMENT ON COLUMN "canvas"."master_courses_child_content_tags"."content_id" IS 'The ID of an associated content object.';
COMMENT ON COLUMN "canvas"."master_courses_child_content_tags"."migration_id" IS 'An identifier used by the Blueprint system to match with the blueprint content.';
COMMENT ON COLUMN "canvas"."master_courses_child_content_tags"."downstream_changes" IS 'The columns changed on the associated content.';
COMMENT ON COLUMN "canvas"."master_courses_child_content_tags"."content_type" IS 'The class of the associated content object.';
CREATE TABLE "canvas"."master_courses_child_subscriptions" (
"id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."master_courses_child_subscriptions__workflow_state" NOT NULL,
"use_selective_copy" boolean NOT NULL,
"master_template_id" bigint NOT NULL,
"child_course_id" bigint NOT NULL,
CONSTRAINT "pk_master_courses_child_subscriptions" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."master_courses_child_subscriptions" IS 'Saves data about which child courses are linked to which master blueprint courses.';
COMMENT ON COLUMN "canvas"."master_courses_child_subscriptions"."id" IS 'The unique identifier of a master courses child subscription record.';
COMMENT ON COLUMN "canvas"."master_courses_child_subscriptions"."created_at" IS 'Timestamp showing when a master_courses_child_subscriptions record was created.';
COMMENT ON COLUMN "canvas"."master_courses_child_subscriptions"."updated_at" IS 'Timestamp showing when a master_courses_child_subscriptions record was updated.';
COMMENT ON COLUMN "canvas"."master_courses_child_subscriptions"."workflow_state" IS 'Whether the subscription is active or has been deleted.';
COMMENT ON COLUMN "canvas"."master_courses_child_subscriptions"."use_selective_copy" IS 'Whether the associated course can receive partial exports from the blueprint course for subsequent sync events.';
COMMENT ON COLUMN "canvas"."master_courses_child_subscriptions"."master_template_id" IS 'The ID of a template that belongs to the blueprint course.';
COMMENT ON COLUMN "canvas"."master_courses_child_subscriptions"."child_course_id" IS 'The ID of an associated course.';
CREATE TABLE "canvas"."master_courses_master_content_tags" (
"id" bigint NOT NULL,
"content_id" bigint NOT NULL,
"migration_id" text,
"restrictions" text,
"use_default_restrictions" boolean NOT NULL,
"master_template_id" bigint NOT NULL,
"content_type" "canvas"."master_courses_master_content_tags__content_type" NOT NULL,
CONSTRAINT "pk_master_courses_master_content_tags" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."master_courses_master_content_tags" IS 'Links blueprint course content to the template and keeps track of their locked status.';
COMMENT ON COLUMN "canvas"."master_courses_master_content_tags"."id" IS 'The unique identifier of a master courses master content tag record.';
COMMENT ON COLUMN "canvas"."master_courses_master_content_tags"."content_id" IS 'The ID of an associated content object.';
COMMENT ON COLUMN "canvas"."master_courses_master_content_tags"."migration_id" IS 'An identifier used by the Blueprint system to match with associated content.';
COMMENT ON COLUMN "canvas"."master_courses_master_content_tags"."restrictions" IS 'The locked status of the associated content object.';
COMMENT ON COLUMN "canvas"."master_courses_master_content_tags"."use_default_restrictions" IS 'Whether the content is using defaults set by the course or has been individually configured.';
COMMENT ON COLUMN "canvas"."master_courses_master_content_tags"."master_template_id" IS 'The ID of a template belonging to the blueprint course.';
COMMENT ON COLUMN "canvas"."master_courses_master_content_tags"."content_type" IS 'The class of the associated content object.';
CREATE TABLE "canvas"."master_courses_master_migrations" (
"id" bigint NOT NULL,
"comment" text,
"user_id" bigint,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."master_courses_master_migrations__workflow_state" NOT NULL,
"migration_settings" text,
"export_results" text,
"exports_started_at" timestamp,
"imports_queued_at" timestamp,
"imports_completed_at" timestamp,
"send_notification" boolean NOT NULL,
"master_template_id" bigint NOT NULL,
CONSTRAINT "pk_master_courses_master_migrations" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."master_courses_master_migrations" IS 'Represents a blueprint course sync event.';
COMMENT ON COLUMN "canvas"."master_courses_master_migrations"."id" IS 'The unique identifier of a master courses master migrations record.';
COMMENT ON COLUMN "canvas"."master_courses_master_migrations"."comment" IS 'An optional message to be displayed with the sync event.';
COMMENT ON COLUMN "canvas"."master_courses_master_migrations"."user_id" IS 'The unique ID of a user.';
COMMENT ON COLUMN "canvas"."master_courses_master_migrations"."created_at" IS 'Timestamp showing when a master_courses_master_migrations record was created.';
COMMENT ON COLUMN "canvas"."master_courses_master_migrations"."updated_at" IS 'Timestamp showing when a master_courses_master_migrations record was updated.';
COMMENT ON COLUMN "canvas"."master_courses_master_migrations"."workflow_state" IS 'Current state of the sync event.';
COMMENT ON COLUMN "canvas"."master_courses_master_migrations"."migration_settings" IS 'Optional settings for the sync event (such as whether to include course settings).';
COMMENT ON COLUMN "canvas"."master_courses_master_migrations"."export_results" IS 'Record of which associated courses received full exports and which ones received partial (selective) ones.';
COMMENT ON COLUMN "canvas"."master_courses_master_migrations"."exports_started_at" IS 'Timestamp showing when exports started being generated from the blueprint course.';
COMMENT ON COLUMN "canvas"."master_courses_master_migrations"."imports_queued_at" IS 'Timestamp showing when imports started being queued into the associated courses.';
COMMENT ON COLUMN "canvas"."master_courses_master_migrations"."imports_completed_at" IS 'Timestamp showing when all imports into associated courses completed.';
COMMENT ON COLUMN "canvas"."master_courses_master_migrations"."send_notification" IS 'Whether to generate notifications around the sync event.';
COMMENT ON COLUMN "canvas"."master_courses_master_migrations"."master_template_id" IS 'The ID of a template that belongs to the blueprint course.';
CREATE TABLE "canvas"."master_courses_master_templates" (
"id" bigint NOT NULL,
"course_id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."master_courses_master_templates__workflow_state",
"full_course" boolean NOT NULL,
"active_migration_id" bigint,
"default_restrictions" text,
"use_default_restrictions_by_type" boolean NOT NULL,
"default_restrictions_by_type" text,
CONSTRAINT "pk_master_courses_master_templates" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."master_courses_master_templates" IS 'Stores blueprint course specific data and links a course with all other blueprint models.';
COMMENT ON COLUMN "canvas"."master_courses_master_templates"."id" IS 'The unique identifier of a master courses template record.';
COMMENT ON COLUMN "canvas"."master_courses_master_templates"."course_id" IS 'The ID of a blueprint course record.';
COMMENT ON COLUMN "canvas"."master_courses_master_templates"."created_at" IS 'Timestamp showing when a master_courses_templates record was created.';
COMMENT ON COLUMN "canvas"."master_courses_master_templates"."updated_at" IS 'Timestamp showing when a master_courses_templates record was updated.';
COMMENT ON COLUMN "canvas"."master_courses_master_templates"."workflow_state" IS 'Whether the template is active or if it has been deleted (i.e. the course has been unset as a blueprint).';
COMMENT ON COLUMN "canvas"."master_courses_master_templates"."full_course" IS 'Whether all blueprint content in the course should be synced (always true for the time being).';
COMMENT ON COLUMN "canvas"."master_courses_master_templates"."active_migration_id" IS 'The ID of a last migration to be run (used to ensure only one is running at a time).';
COMMENT ON COLUMN "canvas"."master_courses_master_templates"."default_restrictions" IS 'The default locked status for all blueprint course content (unless using restrictions by type).';
COMMENT ON COLUMN "canvas"."master_courses_master_templates"."use_default_restrictions_by_type" IS 'Whether to use default_restrictions_by_type to determine content locked status.';
COMMENT ON COLUMN "canvas"."master_courses_master_templates"."default_restrictions_by_type" IS 'The default locked status for all blueprint course content depending on the type of content (unless not using restrictions by type).';
CREATE TABLE "canvas"."master_courses_migration_results" (
"id" bigint NOT NULL,
"state" "canvas"."master_courses_migration_results__state" NOT NULL,
"child_subscription_id" bigint NOT NULL,
"master_migration_id" bigint NOT NULL,
"content_migration_id" bigint NOT NULL,
"import_type" "canvas"."master_courses_migration_results__import_type" NOT NULL,
"results" text,
CONSTRAINT "pk_master_courses_migration_results" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."master_courses_migration_results" IS 'Stores results for individual associated courses for a blueprint sync event.';
COMMENT ON COLUMN "canvas"."master_courses_migration_results"."id" IS 'The unique identifier of a master courses migration result record.';
COMMENT ON COLUMN "canvas"."master_courses_migration_results"."state" IS 'The state of the import into the associated course (`failed`, `completed` or `queued`).';
COMMENT ON COLUMN "canvas"."master_courses_migration_results"."child_subscription_id" IS 'The ID of a relevant associated course subscription record.';
COMMENT ON COLUMN "canvas"."master_courses_migration_results"."master_migration_id" IS 'The ID of a relevant blueprint migration record (sync event).';
COMMENT ON COLUMN "canvas"."master_courses_migration_results"."content_migration_id" IS 'The ID of a relevant import record on the associated course.';
COMMENT ON COLUMN "canvas"."master_courses_migration_results"."import_type" IS 'Whether the blueprint export was for the entire course (`full`) or a partial (`selective`).';
COMMENT ON COLUMN "canvas"."master_courses_migration_results"."results" IS 'Relevant results of the import (e.g. items that were not synced because they were modified by the associated course).';
CREATE TABLE "canvas"."media_objects" (
"id" bigint NOT NULL,
CONSTRAINT "pk_media_objects" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."media_objects" IS 'Data in this table is not exposed, the table is available only as the target of a foreign key or discriminated key relationship.';
CREATE TABLE "canvas"."moderated_grading_provisional_grades" (
"id" bigint NOT NULL,
CONSTRAINT "pk_moderated_grading_provisional_grades" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."moderated_grading_provisional_grades" IS 'Data in this table is not exposed, the table is available only as the target of a foreign key or discriminated key relationship.';
CREATE TABLE "canvas"."originality_reports" (
"id" bigint NOT NULL,
"error_message" text,
"attachment_id" bigint,
"submission_id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."originality_reports__workflow_state" NOT NULL,
"originality_score" double precision,
"originality_report_url" text,
"originality_report_lti_url" text,
"link_id" text,
"submission_time" timestamp,
CONSTRAINT "pk_originality_reports" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."originality_reports" IS E'Represents an "originality score" for a submission.\n\nRows in this table are managed solely by LTI 2 tool providers that leverage the Canvas plagiarism detection\nplatform.';
COMMENT ON COLUMN "canvas"."originality_reports"."id" IS 'The unique identifier for an originality report record.';
COMMENT ON COLUMN "canvas"."originality_reports"."error_message" IS 'The error message provided by the tool provider. Only set if there was an error processing the submission.';
COMMENT ON COLUMN "canvas"."originality_reports"."attachment_id" IS 'The is of the attachment associated with the originality report.';
COMMENT ON COLUMN "canvas"."originality_reports"."submission_id" IS 'ID of the submission associated with the originality report.';
COMMENT ON COLUMN "canvas"."originality_reports"."created_at" IS 'Timestamp of when an `originality_reports` record was created.';
COMMENT ON COLUMN "canvas"."originality_reports"."updated_at" IS 'Timestamp of when an `originality_reports` record was updated.';
COMMENT ON COLUMN "canvas"."originality_reports"."workflow_state" IS 'Workflow state of the originality report.';
COMMENT ON COLUMN "canvas"."originality_reports"."originality_score" IS 'A number ranging from 0-100 indicating the level of potential plagiarism.';
COMMENT ON COLUMN "canvas"."originality_reports"."originality_report_url" IS 'The url pointing to the originality report from the tool provider.';
COMMENT ON COLUMN "canvas"."originality_reports"."originality_report_lti_url" IS 'The LTI launch URL that allows a user to view the originality report in the tool.';
COMMENT ON COLUMN "canvas"."originality_reports"."link_id" IS 'Resource link ID of the assignment associated with the submission.';
COMMENT ON COLUMN "canvas"."originality_reports"."submission_time" IS 'Time the submission was submitted.';
CREATE TABLE "canvas"."outcome_imports" (
"id" bigint NOT NULL,
CONSTRAINT "pk_outcome_imports" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."outcome_imports" IS 'Data in this table is not exposed, the table is available only as the target of a foreign key or discriminated key relationship.';
CREATE TABLE "canvas"."outcome_proficiencies" (
"id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."outcome_proficiencies__workflow_state" NOT NULL,
"context_id" bigint NOT NULL,
"context_type" "canvas"."outcome_proficiencies__context_type" NOT NULL,
CONSTRAINT "pk_outcome_proficiencies" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."outcome_proficiencies" IS 'Outcome proficiencies, or learning mastery proficiency ratings, define a set of ratings, which together create a point scale and a mastery level.';
COMMENT ON COLUMN "canvas"."outcome_proficiencies"."id" IS 'The unique identifier for an outcome proficiency record.';
COMMENT ON COLUMN "canvas"."outcome_proficiencies"."created_at" IS 'Timestamp of when an `outcome_proficiencies` record was created.';
COMMENT ON COLUMN "canvas"."outcome_proficiencies"."updated_at" IS 'Timestamp of when an `outcome_proficiencies` record was updated.';
COMMENT ON COLUMN "canvas"."outcome_proficiencies"."workflow_state" IS 'Workflow status of the outcome_proficiency. Defaults to `active`.';
COMMENT ON COLUMN "canvas"."outcome_proficiencies"."context_id" IS 'The unique identifier for the context (account or course) of the outcome proficiency.';
COMMENT ON COLUMN "canvas"."outcome_proficiencies"."context_type" IS 'The type of the object represented by context_id.';
CREATE TABLE "canvas"."outcome_proficiency_ratings" (
"id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."outcome_proficiency_ratings__workflow_state" NOT NULL,
"mastery" boolean NOT NULL,
"points" double precision NOT NULL,
"outcome_proficiency_id" bigint NOT NULL,
"color" text NOT NULL,
"description" varchar(255) NOT NULL,
CONSTRAINT "pk_outcome_proficiency_ratings" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."outcome_proficiency_ratings" IS 'Outcome proficiency ratings define the individual tiers of outcome proficiencies.';
COMMENT ON COLUMN "canvas"."outcome_proficiency_ratings"."id" IS 'The unique identifier for an outcome proficiency ratings record.';
COMMENT ON COLUMN "canvas"."outcome_proficiency_ratings"."created_at" IS 'Timestamp of when an outcome_proficiency_ratings record was created.';
COMMENT ON COLUMN "canvas"."outcome_proficiency_ratings"."updated_at" IS 'Timestamp of when an outcome_proficiency_ratings record was updated.';
COMMENT ON COLUMN "canvas"."outcome_proficiency_ratings"."workflow_state" IS 'Workflow status of the outcome_proficiency_rating. Defaults to `active`.';
COMMENT ON COLUMN "canvas"."outcome_proficiency_ratings"."mastery" IS 'Indicates the rating where mastery is first achieved.';
COMMENT ON COLUMN "canvas"."outcome_proficiency_ratings"."points" IS 'A non-negative number of points for the rating.';
COMMENT ON COLUMN "canvas"."outcome_proficiency_ratings"."outcome_proficiency_id" IS 'Unique ID of proficiency collection to which this rating belongs.';
COMMENT ON COLUMN "canvas"."outcome_proficiency_ratings"."color" IS 'The hex color code of the rating.';
COMMENT ON COLUMN "canvas"."outcome_proficiency_ratings"."description" IS 'The description of the rating.';
CREATE TABLE "canvas"."post_policies" (
"id" bigint NOT NULL,
"course_id" bigint,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"assignment_id" bigint,
"post_manually" boolean NOT NULL,
CONSTRAINT "pk_post_policies" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."post_policies" IS 'Contains post policy configurations for courses and individual assignments.';
COMMENT ON COLUMN "canvas"."post_policies"."id" IS 'The unique identifier for a post policy record.';
COMMENT ON COLUMN "canvas"."post_policies"."course_id" IS 'The ID of the course referenced by this policy. Note that this is always set even if the policy refers to a specific assignment within a course.';
COMMENT ON COLUMN "canvas"."post_policies"."created_at" IS 'Timestamp of when a `post_policies` record was created.';
COMMENT ON COLUMN "canvas"."post_policies"."updated_at" IS 'Timestamp of when a `post_policies` record was updated.';
COMMENT ON COLUMN "canvas"."post_policies"."assignment_id" IS 'The ID of the assignment referenced by this policy, or NULL if the policy refers to a course at large.';
COMMENT ON COLUMN "canvas"."post_policies"."post_manually" IS 'For post policies associated with an assignment, whether submissions receiving grades or comments should be posted to the student automatically. For post policies associated with a course, this value will be applied by default to assignments created in the course.';
CREATE TABLE "canvas"."pseudonyms" (
"id" bigint NOT NULL,
"deleted_at" timestamp,
"integration_id" varchar(255),
"user_id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."pseudonyms__workflow_state" NOT NULL,
"account_id" bigint NOT NULL,
"sis_batch_id" bigint,
"unique_id" varchar(255) NOT NULL,
"login_count" integer NOT NULL,
"failed_login_count" integer NOT NULL,
"last_request_at" timestamp,
"last_login_at" timestamp,
"current_login_at" timestamp,
"last_login_ip" varchar(255),
"current_login_ip" varchar(255),
"sis_user_id" varchar(255),
"authentication_provider_id" bigint,
"position" integer,
CONSTRAINT "pk_pseudonyms" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."pseudonyms" IS E'This table stores user pseudonyms.\n\nPseudonyms are login profiles associated with users. Contains user / account relationship (may contain multiple\nrecords per `user_id` if that `user_id` is associated with multiple accounts); note: not all users can be found in\nthe pseudonyms table.';
COMMENT ON COLUMN "canvas"."pseudonyms"."id" IS 'Primary key for this pseudonym in the the Canvas database.';
COMMENT ON COLUMN "canvas"."pseudonyms"."deleted_at" IS 'Timestamp when the pseudonym was deleted (NULL if the pseudonym is still active).';
COMMENT ON COLUMN "canvas"."pseudonyms"."integration_id" IS 'The `integration_id` associated with the user.';
COMMENT ON COLUMN "canvas"."pseudonyms"."user_id" IS 'Id for the user associated with this pseudonym.';
COMMENT ON COLUMN "canvas"."pseudonyms"."created_at" IS 'Timestamp when this pseudonym was created in Canvas.';
COMMENT ON COLUMN "canvas"."pseudonyms"."updated_at" IS 'Timestamp when this pseudonym was last updated in Canvas.';
COMMENT ON COLUMN "canvas"."pseudonyms"."workflow_state" IS 'Life-cycle state for the pseudonym.';
COMMENT ON COLUMN "canvas"."pseudonyms"."account_id" IS 'Identifies the account associated with this pseudonym. Typically root account ID unless account user belongs to trust/consortium based Canvas accounts.';
COMMENT ON COLUMN "canvas"."pseudonyms"."sis_batch_id" IS 'The ID of the SIS import.';
COMMENT ON COLUMN "canvas"."pseudonyms"."unique_id" IS 'The unique login ID for the user. This is what the user uses to log in to Canvas.';
COMMENT ON COLUMN "canvas"."pseudonyms"."login_count" IS 'The count of all user logins.';
COMMENT ON COLUMN "canvas"."pseudonyms"."failed_login_count" IS 'Only applies to accounts that use Canvas authentication settings.';
COMMENT ON COLUMN "canvas"."pseudonyms"."last_request_at" IS 'Timestamp of when the user last logged in with this pseudonym.';
COMMENT ON COLUMN "canvas"."pseudonyms"."last_login_at" IS 'Timestamp of last time a user logged in with this pseudonym.';
COMMENT ON COLUMN "canvas"."pseudonyms"."current_login_at" IS 'Timestamp of when the user logged in.';
COMMENT ON COLUMN "canvas"."pseudonyms"."last_login_ip" IS 'IP address recorded the last time a user logged in with this pseudonym.';
COMMENT ON COLUMN "canvas"."pseudonyms"."current_login_ip" IS 'IP address of user''s previous login id, this value could be the same as last_login_ip.';
COMMENT ON COLUMN "canvas"."pseudonyms"."sis_user_id" IS 'The SIS ID associated with the user.';
COMMENT ON COLUMN "canvas"."pseudonyms"."authentication_provider_id" IS 'The authentication provider this login is associated with. This can be the integer ID of the provider, or the type of the provider (in which case, it will find the first matching provider).';
COMMENT ON COLUMN "canvas"."pseudonyms"."position" IS 'Position of user''s login credentials.';
CREATE TABLE "canvas"."purgatories" (
"id" bigint NOT NULL,
CONSTRAINT "pk_purgatories" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."purgatories" IS 'Data in this table is not exposed, the table is available only as the target of a foreign key or discriminated key relationship.';
CREATE TABLE "canvas"."quiz_groups" (
"id" bigint NOT NULL,
"name" varchar(255),
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"assessment_question_bank_id" bigint,
"quiz_id" bigint NOT NULL,
"migration_id" varchar(255),
"pick_count" integer,
"question_points" double precision,
"position" integer,
CONSTRAINT "pk_quiz_groups" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."quiz_groups" IS 'This table stores attributes for quiz group.';
COMMENT ON COLUMN "canvas"."quiz_groups"."id" IS 'The ID of the question group.';
COMMENT ON COLUMN "canvas"."quiz_groups"."name" IS 'The name of the question group.';
COMMENT ON COLUMN "canvas"."quiz_groups"."created_at" IS 'Time when the quiz question was created.';
COMMENT ON COLUMN "canvas"."quiz_groups"."updated_at" IS 'Time when the quiz question was last updated.';
COMMENT ON COLUMN "canvas"."quiz_groups"."assessment_question_bank_id" IS 'The ID of the Assessment question bank to pull questions from.';
COMMENT ON COLUMN "canvas"."quiz_groups"."quiz_id" IS 'The ID of the Quiz the question group belongs to.';
COMMENT ON COLUMN "canvas"."quiz_groups"."migration_id" IS 'The unique identifier of the migration that imported the quiz group.';
COMMENT ON COLUMN "canvas"."quiz_groups"."pick_count" IS 'The number of questions to pick from the group to display to the student.';
COMMENT ON COLUMN "canvas"."quiz_groups"."question_points" IS 'The amount of points allotted to each question in the group.';
COMMENT ON COLUMN "canvas"."quiz_groups"."position" IS 'The order in which the question group will be retrieved and displayed.';
CREATE TABLE "canvas"."quiz_questions" (
"id" bigint NOT NULL,
"created_at" timestamp,
"updated_at" timestamp,
"workflow_state" "canvas"."quiz_questions__workflow_state",
"quiz_id" bigint,
"migration_id" varchar(255),
"quiz_group_id" bigint,
"assessment_question_id" bigint,
"assessment_question_version" integer,
"position" integer,
"question_data" "canvas"."Annotated",
CONSTRAINT "pk_quiz_questions" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."quiz_questions" IS 'This table stores attributes of a question associated with a quiz.';
COMMENT ON COLUMN "canvas"."quiz_questions"."id" IS 'The ID of the quiz question.';
COMMENT ON COLUMN "canvas"."quiz_questions"."created_at" IS 'Time when the quiz question was created.';
COMMENT ON COLUMN "canvas"."quiz_questions"."updated_at" IS 'Time when the quiz question was last updated.';
COMMENT ON COLUMN "canvas"."quiz_questions"."workflow_state" IS 'Life-cycle state for the quiz question.';
COMMENT ON COLUMN "canvas"."quiz_questions"."quiz_id" IS 'The ID of the Quiz the question belongs to.';
COMMENT ON COLUMN "canvas"."quiz_questions"."migration_id" IS 'The unique identifier of the migration that imported the quiz question.';
COMMENT ON COLUMN "canvas"."quiz_questions"."quiz_group_id" IS 'Identifies the quiz group.';
COMMENT ON COLUMN "canvas"."quiz_questions"."assessment_question_id" IS 'Identifies the assessment question.';
COMMENT ON COLUMN "canvas"."quiz_questions"."assessment_question_version" IS 'Version of the assessment question associated with the quiz question.';
COMMENT ON COLUMN "canvas"."quiz_questions"."position" IS 'The order in which the question will be retrieved and displayed.';
COMMENT ON COLUMN "canvas"."quiz_questions"."question_data" IS 'Question data.';
CREATE TABLE "canvas"."quiz_statistics" (
"id" bigint NOT NULL,
CONSTRAINT "pk_quiz_statistics" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."quiz_statistics" IS 'Data in this table is not exposed, the table is available only as the target of a foreign key or discriminated key relationship.';
CREATE TABLE "canvas"."quiz_submissions" (
"id" bigint NOT NULL,
"submission_id" bigint,
"user_id" bigint,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."quiz_submissions__workflow_state" NOT NULL,
"quiz_id" bigint NOT NULL,
"quiz_version" integer,
"started_at" timestamp,
"finished_at" timestamp,
"end_at" timestamp,
"score" double precision,
"attempt" integer,
"submission_data" text,
"kept_score" double precision,
"fudge_points" double precision NOT NULL,
"quiz_points_possible" double precision,
"extra_attempts" integer,
"temporary_user_code" varchar(255),
"extra_time" integer,
"manually_scored" boolean,
"manually_unlocked" boolean,
"was_preview" boolean,
"score_before_regrade" double precision,
"has_seen_results" boolean,
CONSTRAINT "pk_quiz_submissions" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."quiz_submissions" IS E'Stores attributes for the last submitted quiz.\n\nThis tables persists one record per `user_id` and `quiz_id`.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."id" IS 'The ID of the quiz submission.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."submission_id" IS 'The ID of the Submission the quiz submission represents.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."user_id" IS 'The ID of the Student that made the quiz submission.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."created_at" IS 'Time when the quiz submission was created.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."updated_at" IS 'Time when the quiz submission was last updated.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."workflow_state" IS 'Life-cycle state for the quiz submission.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."quiz_id" IS 'The ID of the Quiz the quiz submission belongs to.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."quiz_version" IS 'The version of the quiz this submission is related to.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."started_at" IS 'The time at which the student started the quiz submission.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."finished_at" IS 'The time at which the student submitted the quiz submission.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."end_at" IS 'The time at which the quiz submission will be overdue, and be flagged as a late submission.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."score" IS 'The score of the quiz submission, if graded.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."attempt" IS 'For quizzes that allow multiple attempts, this field specifies the quiz submission attempt number.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."submission_data" IS 'Student answers to quiz, it shares JSON array of answers for only graded quiz submissions, it has NULL if quiz hasn''t been graded yet. Contains the `question_id`, whether the question was answered correctly, the `answer_id` and answer text.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."kept_score" IS 'For quizzes that allow multiple attempts, this is the score that will be used, which might be the score of the latest, or the highest, quiz submission.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."fudge_points" IS 'Number of points the quiz submissions score was fudged by.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."quiz_points_possible" IS 'The amount of points possible for the quiz.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."extra_attempts" IS 'Number of times the student was allowed to retake the quiz over the multiple-attempt limit.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."temporary_user_code" IS 'Construct for previewing a quiz.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."extra_time" IS 'Amount of extra time allowed for the quiz submission, in minutes.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."manually_scored" IS 'Indicates if this submission was graded by the teacher.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."manually_unlocked" IS 'The student can take the quiz even if it''s locked for everyone else.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."was_preview" IS 'Indicates if this submission was created from a teacher preview.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."score_before_regrade" IS 'The original score of the quiz submission prior to any re-grading.';
COMMENT ON COLUMN "canvas"."quiz_submissions"."has_seen_results" IS 'Whether the student has viewed their results to the quiz.';
CREATE TABLE "canvas"."quizzes" (
"id" bigint NOT NULL,
"deleted_at" timestamp,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."quizzes__workflow_state" NOT NULL,
"due_at" timestamp,
"unlock_at" timestamp,
"lock_at" timestamp,
"points_possible" double precision,
"assignment_group_id" bigint,
"context_id" bigint NOT NULL,
"context_type" "canvas"."quizzes__context_type" NOT NULL,
"assignment_id" bigint,
"could_be_locked" boolean NOT NULL,
"migration_id" varchar(255),
"only_visible_to_overrides" boolean NOT NULL,
"allowed_attempts" integer,
"published_at" timestamp,
"shuffle_answers" boolean NOT NULL,
"show_correct_answers" boolean NOT NULL,
"time_limit" integer,
"scoring_policy" varchar(255),
"quiz_type" "canvas"."quizzes__quiz_type",
"access_code" varchar(255),
"question_count" integer,
"anonymous_submissions" boolean NOT NULL,
"hide_results" varchar(255),
"ip_filter" varchar(255),
"require_lockdown_browser" boolean NOT NULL,
"require_lockdown_browser_for_results" boolean NOT NULL,
"one_question_at_a_time" boolean NOT NULL,
"cant_go_back" boolean NOT NULL,
"show_correct_answers_at" timestamp,
"hide_correct_answers_at" timestamp,
"require_lockdown_browser_monitor" boolean NOT NULL,
"one_time_results" boolean NOT NULL,
"show_correct_answers_last_attempt" boolean NOT NULL,
"unpublished_question_count" integer NOT NULL,
"description" text,
"title" varchar(255),
CONSTRAINT "pk_quizzes" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."quizzes" IS E'Stores attributes for quizzes.\n\nQuizzes can also be assignments (`assignment_id` field will have a value).';
COMMENT ON COLUMN "canvas"."quizzes"."id" IS 'the ID of the quiz.';
COMMENT ON COLUMN "canvas"."quizzes"."deleted_at" IS 'Timestamp when the quiz was deleted.';
COMMENT ON COLUMN "canvas"."quizzes"."created_at" IS 'Time when the quiz was created.';
COMMENT ON COLUMN "canvas"."quizzes"."updated_at" IS 'Time when the quiz was last updated.';
COMMENT ON COLUMN "canvas"."quizzes"."workflow_state" IS 'Denotes where the quiz is in the workflow. Possible values are `unpublished`, `published` and `deleted`. Defaults to `unpublished`.';
COMMENT ON COLUMN "canvas"."quizzes"."due_at" IS 'when the quiz is due.';
COMMENT ON COLUMN "canvas"."quizzes"."unlock_at" IS 'when to unlock the quiz.';
COMMENT ON COLUMN "canvas"."quizzes"."lock_at" IS 'when to lock the quiz.';
COMMENT ON COLUMN "canvas"."quizzes"."points_possible" IS 'The total point value given to the quiz.';
COMMENT ON COLUMN "canvas"."quizzes"."assignment_group_id" IS 'the ID of the quizzes assignment group.';
COMMENT ON COLUMN "canvas"."quizzes"."context_id" IS 'The ID of the context (account or course) this group belongs too. See also: `context_type`.';
COMMENT ON COLUMN "canvas"."quizzes"."context_type" IS 'The type of the context object (typically `Course`).';
COMMENT ON COLUMN "canvas"."quizzes"."assignment_id" IS 'Identifies the assignment the quiz belongs to (NULL if not an assignment).';
COMMENT ON COLUMN "canvas"."quizzes"."could_be_locked" IS 'Dictates if the quiz can be locked or not. Possible values are `allow_locking` and `disallow_locking`. Defaults to `disallow_locking`.';
COMMENT ON COLUMN "canvas"."quizzes"."migration_id" IS 'The unique identifier of the migration that imported the quiz.';
COMMENT ON COLUMN "canvas"."quizzes"."only_visible_to_overrides" IS 'This indicates the quiz is not visible to everyone in the course, but only to those with an override.';
COMMENT ON COLUMN "canvas"."quizzes"."allowed_attempts" IS 'how many times a student can take the quiz -1 = unlimited attempts.';
COMMENT ON COLUMN "canvas"."quizzes"."published_at" IS 'whether the quiz has a published or unpublished draft state.';
COMMENT ON COLUMN "canvas"."quizzes"."shuffle_answers" IS 'shuffle answers for students.';
COMMENT ON COLUMN "canvas"."quizzes"."show_correct_answers" IS 'show which answers were correct when results are shown? only valid if `hide_results` is NULL.';
COMMENT ON COLUMN "canvas"."quizzes"."time_limit" IS 'quiz time limit in minutes.';
COMMENT ON COLUMN "canvas"."quizzes"."scoring_policy" IS 'which quiz score to keep (only if `allowed_attempts` != 1) possible values: `keep_highest`, `keep_latest`.';
COMMENT ON COLUMN "canvas"."quizzes"."quiz_type" IS 'type of quiz.';
COMMENT ON COLUMN "canvas"."quizzes"."access_code" IS 'access code to restrict quiz access.';
COMMENT ON COLUMN "canvas"."quizzes"."question_count" IS 'the number of questions in the quiz.';
COMMENT ON COLUMN "canvas"."quizzes"."anonymous_submissions" IS 'Dictates whether students are allowed to submit the quiz anonymously.';
COMMENT ON COLUMN "canvas"."quizzes"."hide_results" IS 'let students see their quiz responses? possible values: NULL, `always`, `until_after_last_attempt`.';
COMMENT ON COLUMN "canvas"."quizzes"."ip_filter" IS 'IP address or range that quiz access is limited to.';
COMMENT ON COLUMN "canvas"."quizzes"."require_lockdown_browser" IS 'Dictates whether the browser has locked-down when the quiz is being taken. Possible values are `required` and `not_required`. Defaults to `not_required`.';
COMMENT ON COLUMN "canvas"."quizzes"."require_lockdown_browser_for_results" IS 'Dictates whether the browser has to be locked-down to display the results. Is valid only if `hide_results` is set to `never` or `until_after_last_attempt` (for the results to be displayed after the last attempt). Possible values are `required` and `not_required`. Defaults to `not_required`.';
COMMENT ON COLUMN "canvas"."quizzes"."one_question_at_a_time" IS 'show one question at a time?';
COMMENT ON COLUMN "canvas"."quizzes"."cant_go_back" IS 'lock questions after answering? only valid if `one_question_at_a_time` is true.';
COMMENT ON COLUMN "canvas"."quizzes"."show_correct_answers_at" IS 'when should the correct answers be visible by students? only valid if `show_correct_answers` is true.';
COMMENT ON COLUMN "canvas"."quizzes"."hide_correct_answers_at" IS 'prevent the students from seeing correct answers after the specified date has passed. only valid if `show_correct_answers` is true.';
COMMENT ON COLUMN "canvas"."quizzes"."require_lockdown_browser_monitor" IS 'Dictates whether a browser lockdown monitor is required. Possible values are `required` and `not_required`. Defaults to `not_required`.';
COMMENT ON COLUMN "canvas"."quizzes"."one_time_results" IS 'prevent the students from seeing their results more than once (right after they submit the quiz).';
COMMENT ON COLUMN "canvas"."quizzes"."show_correct_answers_last_attempt" IS 'restrict the show_correct_answers option above to apply only to the last submitted attempt of a quiz that allows multiple attempts. only valid if `show_correct_answers` is true and `allowed_attempts` > 1.';
COMMENT ON COLUMN "canvas"."quizzes"."unpublished_question_count" IS 'The number of questions that have not been published.';
COMMENT ON COLUMN "canvas"."quizzes"."description" IS 'the description of the quiz.';
COMMENT ON COLUMN "canvas"."quizzes"."title" IS 'the title of the quiz.';
CREATE TABLE "canvas"."role_overrides" (
"id" bigint NOT NULL,
"permission" varchar(255),
"created_at" timestamp,
"updated_at" timestamp,
"role_id" bigint NOT NULL,
"context_id" bigint NOT NULL,
"context_type" "canvas"."role_overrides__context_type" NOT NULL,
"locked" boolean NOT NULL,
"enabled" boolean NOT NULL,
"applies_to_self" boolean NOT NULL,
"applies_to_descendants" boolean NOT NULL,
CONSTRAINT "pk_role_overrides" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."role_overrides" IS 'A customization to the default permissions granted by a role.';
COMMENT ON COLUMN "canvas"."role_overrides"."id" IS 'unique identifier of a role permission.';
COMMENT ON COLUMN "canvas"."role_overrides"."permission" IS 'Permission assigned to a role, see the dictionary of permissions keyed by name in Canvas Roles API documentation.';
COMMENT ON COLUMN "canvas"."role_overrides"."created_at" IS 'Timestamp of when this record was created.';
COMMENT ON COLUMN "canvas"."role_overrides"."updated_at" IS 'Timestamp of last update to this record.';
COMMENT ON COLUMN "canvas"."role_overrides"."role_id" IS 'Unique ID of a role.';
COMMENT ON COLUMN "canvas"."role_overrides"."context_id" IS 'The unique identifier for the folders''s context (account, course, user).';
COMMENT ON COLUMN "canvas"."role_overrides"."context_type" IS 'The type of the object represented by context_id.';
COMMENT ON COLUMN "canvas"."role_overrides"."locked" IS 'Whether the permission is locked by this role.';
COMMENT ON COLUMN "canvas"."role_overrides"."enabled" IS 'Whether the role has the permission.';
COMMENT ON COLUMN "canvas"."role_overrides"."applies_to_self" IS 'Whether the permission applies to the account this role is in. Only present if enabled is true.';
COMMENT ON COLUMN "canvas"."role_overrides"."applies_to_descendants" IS 'Whether the permission cascades down to sub accounts of the account this role is in. Only present if enabled is true.';
CREATE TABLE "canvas"."roles" (
"id" bigint NOT NULL,
"name" varchar(255) NOT NULL,
"deleted_at" timestamp,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."roles__workflow_state" NOT NULL,
"account_id" bigint,
"base_role_type" "canvas"."roles__base_role_type" NOT NULL,
CONSTRAINT "pk_roles" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."roles" IS E'A user is assigned a role which grants all the permissions associated with that role.\n\nRoles have a few implicit permissions and a large set of default permissions, which can be customized with\nRoleOverrides.';
COMMENT ON COLUMN "canvas"."roles"."id" IS 'The unique identifier for a user role record.';
COMMENT ON COLUMN "canvas"."roles"."name" IS 'The name of the role.';
COMMENT ON COLUMN "canvas"."roles"."deleted_at" IS 'Timestamp when this record was deleted. If the record has not been deleted the value will be NULL.';
COMMENT ON COLUMN "canvas"."roles"."created_at" IS 'Timestamp of when a roles record was created.';
COMMENT ON COLUMN "canvas"."roles"."updated_at" IS 'Timestamp of when a roles record was updated.';
COMMENT ON COLUMN "canvas"."roles"."workflow_state" IS 'The state of the role.';
COMMENT ON COLUMN "canvas"."roles"."account_id" IS 'Points to the account associated with the course. Could be Canvas root account or sub-account ID.';
COMMENT ON COLUMN "canvas"."roles"."base_role_type" IS 'The role type that is being used as a base for this role. For account-level roles, this is `AccountMembership`. For course-level roles, it is an enrollment type.';
CREATE TABLE "canvas"."rubric_assessments" (
"id" bigint NOT NULL,
"user_id" bigint,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"rubric_association_id" bigint,
"artifact_id" bigint NOT NULL,
"artifact_type" "canvas"."rubric_assessments__artifact_type" NOT NULL,
"hide_points" boolean NOT NULL,
"score" double precision,
"rubric_id" bigint NOT NULL,
"assessment_type" "canvas"."rubric_assessments__assessment_type" NOT NULL,
"assessor_id" bigint,
"artifact_attempt" integer,
"data" text,
CONSTRAINT "pk_rubric_assessments" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."rubric_assessments" IS 'Shows the data that a teacher has entered in to a rubric while grading a student.';
COMMENT ON COLUMN "canvas"."rubric_assessments"."id" IS 'The unique identifier of a rubric assessment record.';
COMMENT ON COLUMN "canvas"."rubric_assessments"."user_id" IS 'The unique ID of a user.';
COMMENT ON COLUMN "canvas"."rubric_assessments"."created_at" IS 'Timestamp showing when a `rubric_assessment` record was created.';
COMMENT ON COLUMN "canvas"."rubric_assessments"."updated_at" IS 'Timestamp showing when a `rubric_assessment` record was updated.';
COMMENT ON COLUMN "canvas"."rubric_assessments"."rubric_association_id" IS 'The ID of a rubric association (which links the rubric to an assignment that uses the rubric).';
COMMENT ON COLUMN "canvas"."rubric_assessments"."artifact_id" IS 'The submission or assignment identifier.';
COMMENT ON COLUMN "canvas"."rubric_assessments"."artifact_type" IS 'The artifact type.';
COMMENT ON COLUMN "canvas"."rubric_assessments"."hide_points" IS 'Flag indicating a non-scoring rubric assessment.';
COMMENT ON COLUMN "canvas"."rubric_assessments"."score" IS 'Score of the assessment.';
COMMENT ON COLUMN "canvas"."rubric_assessments"."rubric_id" IS 'The unique ID of a rubric.';
COMMENT ON COLUMN "canvas"."rubric_assessments"."assessment_type" IS 'Type of assessment.';
COMMENT ON COLUMN "canvas"."rubric_assessments"."assessor_id" IS 'The unique ID of a user who assessed the submission.';
COMMENT ON COLUMN "canvas"."rubric_assessments"."artifact_attempt" IS 'The current number of attempts made on the object of the assessment.';
COMMENT ON COLUMN "canvas"."rubric_assessments"."data" IS 'Object containing all data related to assessment including score-break down and comments for each criterion.';
CREATE TABLE "canvas"."rubric_associations" (
"id" bigint NOT NULL,
"purpose" varchar(255) NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."rubric_associations__workflow_state" NOT NULL,
"context_id" bigint NOT NULL,
"context_type" "canvas"."rubric_associations__context_type" NOT NULL,
"association_id" bigint NOT NULL,
"association_type" "canvas"."rubric_associations__association_type" NOT NULL,
"hide_points" boolean NOT NULL,
"rubric_id" bigint NOT NULL,
"use_for_grading" boolean,
"summary_data" text,
"hide_score_total" boolean,
"bookmarked" boolean NOT NULL,
"hide_outcome_results" boolean NOT NULL,
"title" varchar(255),
CONSTRAINT "pk_rubric_associations" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."rubric_associations" IS 'Links a rubric to an assignment.';
COMMENT ON COLUMN "canvas"."rubric_associations"."id" IS 'The unique identifier of a rubric association record.';
COMMENT ON COLUMN "canvas"."rubric_associations"."purpose" IS 'Whether or not the association is for grading (and thus linked to an assignment) or if it''s to indicate the rubric should appear in its context. Values will be grading or bookmark.';
COMMENT ON COLUMN "canvas"."rubric_associations"."created_at" IS 'Timestamp showing when a `rubric_associations` record was created.';
COMMENT ON COLUMN "canvas"."rubric_associations"."updated_at" IS 'Timestamp showing when a `rubric_associations` record was updated.';
COMMENT ON COLUMN "canvas"."rubric_associations"."workflow_state" IS 'The current state of a rubric association record.';
COMMENT ON COLUMN "canvas"."rubric_associations"."context_id" IS 'The unique identifier for the context of `rubric_associations` (account, course).';
COMMENT ON COLUMN "canvas"."rubric_associations"."context_type" IS 'The type of the object represented by `context_id`.';
COMMENT ON COLUMN "canvas"."rubric_associations"."association_id" IS 'The unique identifier of an associated object.';
COMMENT ON COLUMN "canvas"."rubric_associations"."association_type" IS 'The type of object associated.';
COMMENT ON COLUMN "canvas"."rubric_associations"."hide_points" IS 'Flag indication whether to hide points from rubric.';
COMMENT ON COLUMN "canvas"."rubric_associations"."rubric_id" IS 'The unique identifier of a rubric tied to this association.';
COMMENT ON COLUMN "canvas"."rubric_associations"."use_for_grading" IS 'Whether or not the associated rubric is used for grade calculation.';
COMMENT ON COLUMN "canvas"."rubric_associations"."summary_data" IS 'Object that stores reusable comments made during assessments.';
COMMENT ON COLUMN "canvas"."rubric_associations"."hide_score_total" IS 'Flag indicating whether to hide the score total for assessment results.';
COMMENT ON COLUMN "canvas"."rubric_associations"."bookmarked" IS 'Flag indication whether rubric is bookmarked.';
COMMENT ON COLUMN "canvas"."rubric_associations"."hide_outcome_results" IS 'Flag indicating to not post Outcomes results to Learning Mastery Gradebook.';
COMMENT ON COLUMN "canvas"."rubric_associations"."title" IS 'The name of the object this rubric is associated with.';
CREATE TABLE "canvas"."rubrics" (
"id" bigint NOT NULL,
"user_id" bigint,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."rubrics__workflow_state" NOT NULL,
"points_possible" double precision,
"context_id" bigint NOT NULL,
"context_type" "canvas"."rubrics__context_type" NOT NULL,
"migration_id" varchar(255),
"hide_score_total" boolean,
"association_count" integer NOT NULL,
"free_form_criterion_comments" boolean,
"title" varchar(255),
"data" text,
CONSTRAINT "pk_rubrics" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."rubrics" IS 'List of criteria that describe how an assignment should be graded.';
COMMENT ON COLUMN "canvas"."rubrics"."id" IS 'The unique identifier of a rubric record.';
COMMENT ON COLUMN "canvas"."rubrics"."user_id" IS 'The unique ID of a user.';
COMMENT ON COLUMN "canvas"."rubrics"."created_at" IS 'Timestamp showing when a rubrics record was created.';
COMMENT ON COLUMN "canvas"."rubrics"."updated_at" IS 'Timestamp showing when a rubrics record was updated.';
COMMENT ON COLUMN "canvas"."rubrics"."workflow_state" IS 'Current state of row.';
COMMENT ON COLUMN "canvas"."rubrics"."points_possible" IS 'Total points possible for the rubric.';
COMMENT ON COLUMN "canvas"."rubrics"."context_id" IS 'The unique identifier of a rubric''s context (account, course).';
COMMENT ON COLUMN "canvas"."rubrics"."context_type" IS 'The type of the object represented by context_id.';
COMMENT ON COLUMN "canvas"."rubrics"."migration_id" IS 'An identifier used by the Blueprint system to match with the blueprint content.';
COMMENT ON COLUMN "canvas"."rubrics"."hide_score_total" IS 'Whether or not the score total is displayed within the rubric. This option is only available if the rubric is not used for grading.';
COMMENT ON COLUMN "canvas"."rubrics"."association_count" IS 'The number of associated objects (accounts, courses, assignments).';
COMMENT ON COLUMN "canvas"."rubrics"."free_form_criterion_comments" IS 'Whether or not you can write custom comments in the ratings field for a rubric.';
COMMENT ON COLUMN "canvas"."rubrics"."title" IS 'The Rubric name or title.';
COMMENT ON COLUMN "canvas"."rubrics"."data" IS 'The data containing all the information for the rubric including each criterion.';
CREATE TABLE "canvas"."score_statistics" (
"id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"assignment_id" bigint NOT NULL,
"mean" double precision NOT NULL,
"count" integer NOT NULL,
"minimum" double precision NOT NULL,
"maximum" double precision NOT NULL,
CONSTRAINT "pk_score_statistics" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."score_statistics" IS 'This table stores aggregate statistics for scores on individual assignments.';
COMMENT ON COLUMN "canvas"."score_statistics"."id" IS 'The ID of the statistics object.';
COMMENT ON COLUMN "canvas"."score_statistics"."created_at" IS 'The date this statistics object was created.';
COMMENT ON COLUMN "canvas"."score_statistics"."updated_at" IS 'The date this statistics object was updated.';
COMMENT ON COLUMN "canvas"."score_statistics"."assignment_id" IS 'The ID of the assignment referred to by this object.';
COMMENT ON COLUMN "canvas"."score_statistics"."mean" IS 'The mean score for all graded submissions on this assignment.';
COMMENT ON COLUMN "canvas"."score_statistics"."count" IS 'The number of submissions that have been graded for this assignment, excluding excused submissions.';
COMMENT ON COLUMN "canvas"."score_statistics"."minimum" IS 'The lowest score for any graded submission on this assignment.';
COMMENT ON COLUMN "canvas"."score_statistics"."maximum" IS 'The highest score for any graded submission on this assignment.';
CREATE TABLE "canvas"."scores" (
"id" bigint NOT NULL,
"created_at" timestamp,
"updated_at" timestamp,
"workflow_state" "canvas"."scores__workflow_state" NOT NULL,
"assignment_group_id" bigint,
"enrollment_id" bigint NOT NULL,
"grading_period_id" bigint,
"current_score" double precision,
"final_score" double precision,
"course_score" boolean NOT NULL,
"unposted_current_score" double precision,
"unposted_final_score" double precision,
"current_points" double precision,
"unposted_current_points" double precision,
"final_points" double precision,
"unposted_final_points" double precision,
"override_score" double precision,
CONSTRAINT "pk_scores" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."scores" IS 'This table stores assignment group and course grades for students enrolled in a course.';
COMMENT ON COLUMN "canvas"."scores"."id" IS 'The ID of the score.';
COMMENT ON COLUMN "canvas"."scores"."created_at" IS 'Time when the score was created.';
COMMENT ON COLUMN "canvas"."scores"."updated_at" IS 'Time when the score was updated.';
COMMENT ON COLUMN "canvas"."scores"."workflow_state" IS 'Life-cycle state for the score.';
COMMENT ON COLUMN "canvas"."scores"."assignment_group_id" IS 'The ID of the assignment group this score refers to, or NULL if it does not refer to a particular assignment group.';
COMMENT ON COLUMN "canvas"."scores"."enrollment_id" IS 'The ID of the enrollment object this score refers to.';
COMMENT ON COLUMN "canvas"."scores"."grading_period_id" IS 'The ID of the grading period covered by this score, or NULL if it does not apply to a specific grading period. If this is NULL, this is the overall score for the course.';
COMMENT ON COLUMN "canvas"."scores"."current_score" IS 'The current score for the assignments represented by this Score object.';
COMMENT ON COLUMN "canvas"."scores"."final_score" IS 'The final score for the assignments represented by this Score object, calculated by treating ungraded assignments as though they received zero points.';
COMMENT ON COLUMN "canvas"."scores"."course_score" IS 'True if this score does not refer to a particular grading period or assignment group (in other words, if it represents the overall score for the course referred to in the enrollment).';
COMMENT ON COLUMN "canvas"."scores"."unposted_current_score" IS 'The current score, with muted/unposted assignments included.';
COMMENT ON COLUMN "canvas"."scores"."unposted_final_score" IS 'The final score, with muted/unposted assignments included.';
COMMENT ON COLUMN "canvas"."scores"."current_points" IS 'The number of points earned over all assignments covered by this score, with dropped assignments excluded.';
COMMENT ON COLUMN "canvas"."scores"."unposted_current_points" IS 'The total number of points earned over all assignments covered by this score, including muted/unposted assignments.';
COMMENT ON COLUMN "canvas"."scores"."final_points" IS 'The number of points earned over all assignments covered by this score, with dropped assignments excluded and unposted submissions treated as 0.';
COMMENT ON COLUMN "canvas"."scores"."unposted_final_points" IS 'The number of points earned over all assignments covered by this score, with dropped assignments excluded and unposted submissions treated as 0, including muted/unposted assignments.';
COMMENT ON COLUMN "canvas"."scores"."override_score" IS 'The override score, if one has been set.';
CREATE TABLE "canvas"."sis_batches" (
"id" bigint NOT NULL,
CONSTRAINT "pk_sis_batches" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."sis_batches" IS 'Data in this table is not exposed, the table is available only as the target of a foreign key or discriminated key relationship.';
CREATE TABLE "canvas"."submission_comments" (
"id" bigint NOT NULL,
"comment" text,
"submission_id" bigint,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"context_id" bigint,
"context_type" "canvas"."submission_comments__context_type" NOT NULL,
"author_id" bigint,
"media_comment_id" varchar(255),
"media_comment_type" "canvas"."submission_comments__media_comment_type",
"attachment_ids" text,
"attempt" integer,
"hidden" boolean NOT NULL,
"author_name" varchar(255),
"group_comment_id" varchar(255),
"assessment_request_id" bigint,
"anonymous" boolean,
"teacher_only_comment" boolean NOT NULL,
"provisional_grade_id" bigint,
"draft" boolean NOT NULL,
"edited_at" timestamp,
CONSTRAINT "pk_submission_comments" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."submission_comments" IS 'This table contains attributes related to the submission comments feature in Canvas.';
COMMENT ON COLUMN "canvas"."submission_comments"."id" IS 'The ID of this submission comment.';
COMMENT ON COLUMN "canvas"."submission_comments"."comment" IS 'The text of the submission comment.';
COMMENT ON COLUMN "canvas"."submission_comments"."submission_id" IS 'The ID of the associated submission.';
COMMENT ON COLUMN "canvas"."submission_comments"."created_at" IS 'The date this comment was created.';
COMMENT ON COLUMN "canvas"."submission_comments"."updated_at" IS 'The date this comment was updated.';
COMMENT ON COLUMN "canvas"."submission_comments"."context_id" IS 'The ID of the course this comment is associated with.';
COMMENT ON COLUMN "canvas"."submission_comments"."context_type" IS 'The type of the object represented by `context_id`, typically `Course`.';
COMMENT ON COLUMN "canvas"."submission_comments"."author_id" IS 'The ID of the commenting user.';
COMMENT ON COLUMN "canvas"."submission_comments"."media_comment_id" IS 'For media comments, the ID of the associated media object.';
COMMENT ON COLUMN "canvas"."submission_comments"."media_comment_type" IS 'For media comments, the type of the associated media object.';
COMMENT ON COLUMN "canvas"."submission_comments"."attachment_ids" IS 'A comma-separated list of attachment IDs associated with this comment.';
COMMENT ON COLUMN "canvas"."submission_comments"."attempt" IS 'The particular attempt (on the associated submission) that this comment pertains to.';
COMMENT ON COLUMN "canvas"."submission_comments"."hidden" IS 'True if this comment is not visible to the owner of the submission.';
COMMENT ON COLUMN "canvas"."submission_comments"."author_name" IS 'The name of the commenting user.';
COMMENT ON COLUMN "canvas"."submission_comments"."group_comment_id" IS 'For group assignments, a value that is unique for all copies of this comment on submissions in the same group.';
COMMENT ON COLUMN "canvas"."submission_comments"."assessment_request_id" IS 'For peer-reviewed assignments, the ID of the Assessment Request this comment is associated with.';
COMMENT ON COLUMN "canvas"."submission_comments"."anonymous" IS 'True if this is a peer-reviewed comment for an assignment with anonymous peer reviews enabled. Does not apply to instructor comments for anonymously-graded assignments.';
COMMENT ON COLUMN "canvas"."submission_comments"."teacher_only_comment" IS 'Indicates whether the comment was provided by a teacher.';
COMMENT ON COLUMN "canvas"."submission_comments"."provisional_grade_id" IS 'For moderated assignments, the provisional grade this comment is tied to.';
COMMENT ON COLUMN "canvas"."submission_comments"."draft" IS 'True if this comment was saved as a draft.';
COMMENT ON COLUMN "canvas"."submission_comments"."edited_at" IS 'The date this comment was last edited.';
CREATE TABLE "canvas"."submission_versions" (
"id" bigint NOT NULL,
"user_id" bigint,
"context_id" bigint,
"context_type" "canvas"."submission_versions__context_type" NOT NULL,
"assignment_id" bigint,
"version_id" bigint,
CONSTRAINT "pk_submission_versions" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."submission_versions" IS 'This table stores information describing previous versions of individual submission objects.';
COMMENT ON COLUMN "canvas"."submission_versions"."id" IS 'The ID of this version object.';
COMMENT ON COLUMN "canvas"."submission_versions"."user_id" IS 'The ID of the submitter.';
COMMENT ON COLUMN "canvas"."submission_versions"."context_id" IS 'The ID of the course this submission belongs to.';
COMMENT ON COLUMN "canvas"."submission_versions"."context_type" IS 'The type of the context object (typically `Course`).';
COMMENT ON COLUMN "canvas"."submission_versions"."assignment_id" IS 'The ID of the associated assignment.';
COMMENT ON COLUMN "canvas"."submission_versions"."version_id" IS 'The ID of the corresponding object in the versions table.';
CREATE TABLE "canvas"."submissions" (
"id" bigint NOT NULL,
"attachment_id" bigint,
"course_id" bigint NOT NULL,
"user_id" bigint NOT NULL,
"created_at" timestamp,
"updated_at" timestamp,
"workflow_state" "canvas"."submissions__workflow_state" NOT NULL,
"assignment_id" bigint NOT NULL,
"media_comment_id" varchar(255),
"media_comment_type" "canvas"."submissions__media_comment_type",
"attachment_ids" text,
"posted_at" timestamp,
"group_id" bigint,
"score" double precision,
"attempt" integer,
"submitted_at" timestamp,
"quiz_submission_id" bigint,
"extra_attempts" integer,
"grading_period_id" bigint,
"grade" varchar(255),
"submission_type" "canvas"."submissions__submission_type",
"processed" boolean,
"grade_matches_current_submission" boolean,
"published_score" double precision,
"published_grade" varchar(255),
"graded_at" timestamp,
"student_entered_score" double precision,
"grader_id" bigint,
"submission_comments_count" integer,
"media_object_id" bigint,
"turnitin_data" text,
"cached_due_date" timestamp,
"excused" boolean,
"graded_anonymously" boolean,
"late_policy_status" varchar(16),
"points_deducted" decimal(6, 2),
"seconds_late_override" bigint,
"lti_user_id" text,
"anonymous_id" varchar(5),
"last_comment_at" timestamp,
"cached_quiz_lti" boolean NOT NULL,
"cached_tardiness" varchar(16),
"resource_link_lookup_uuid" uuid,
"redo_request" boolean NOT NULL,
"body" text,
"url" varchar(255),
CONSTRAINT "pk_submissions" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."submissions" IS 'This table stores submission records for an assignment.';
COMMENT ON COLUMN "canvas"."submissions"."id" IS 'Primary key of this record in the Canvas submissions dataset.';
COMMENT ON COLUMN "canvas"."submissions"."attachment_id" IS 'The ID of an attachment belonging to this submission if `submission_type` is `online_url`. Generally superseded by `attachment_ids`.';
COMMENT ON COLUMN "canvas"."submissions"."course_id" IS 'The ID of the associated assignment''s course.';
COMMENT ON COLUMN "canvas"."submissions"."user_id" IS 'The ID of the user who created the submission.';
COMMENT ON COLUMN "canvas"."submissions"."created_at" IS 'Timestamp of when the submission was created.';
COMMENT ON COLUMN "canvas"."submissions"."updated_at" IS 'Timestamp of when the submission was last updated.';
COMMENT ON COLUMN "canvas"."submissions"."workflow_state" IS 'Life-cycle state for the submission.';
COMMENT ON COLUMN "canvas"."submissions"."assignment_id" IS 'The ID of the associated assignment.';
COMMENT ON COLUMN "canvas"."submissions"."media_comment_id" IS 'For media comments, the ID of the media object associated with this comment, as a string.';
COMMENT ON COLUMN "canvas"."submissions"."media_comment_type" IS 'For media comments, the type of the media object associated with this comment.';
COMMENT ON COLUMN "canvas"."submissions"."attachment_ids" IS 'A comma-delimited string representing the IDs of attachments belonging to this submission.';
COMMENT ON COLUMN "canvas"."submissions"."posted_at" IS 'The date this submission was posted to the student, or NULL if it has not been posted.';
COMMENT ON COLUMN "canvas"."submissions"."group_id" IS 'Foreign key to the `groups` table.';
COMMENT ON COLUMN "canvas"."submissions"."score" IS 'The raw score.';
COMMENT ON COLUMN "canvas"."submissions"."attempt" IS 'The number of attempts made including this one.';
COMMENT ON COLUMN "canvas"."submissions"."submitted_at" IS 'The timestamp when the assignment was submitted. Note: this date may be missing even though the assignment was submitted and graded (example scenarios: paper assignments, submissions through external tools, no submission required, etc.); additionally, if the student failed to submit an assignment by the due date, the assignment can be graded by the instructor (and will be missing a `submitted_at` date).';
COMMENT ON COLUMN "canvas"."submissions"."quiz_submission_id" IS 'Foreign key to the `quiz_submissions` dataset (if `submission_type` is `online_quiz`). If this field contains a value it means that the assignment is a quiz.';
COMMENT ON COLUMN "canvas"."submissions"."extra_attempts" IS 'Extra submission attempts allowed for the given user and assignment.';
COMMENT ON COLUMN "canvas"."submissions"."grading_period_id" IS 'The ID of the grading period that this submission''s assignment belongs to.';
COMMENT ON COLUMN "canvas"."submissions"."grade" IS 'Letter grade mapped from the score by the grading scheme.';
COMMENT ON COLUMN "canvas"."submissions"."submission_type" IS 'The type of submission.';
COMMENT ON COLUMN "canvas"."submissions"."processed" IS 'Valid only when there is a file/attachment associated with the submission. By default, this attribute is set to *false* when making the assignment submission. When a submission has a file/attachment associated with it, upon submitting the assignment a snapshot is saved and its value is set to *true*. Defaults to NULL.';
COMMENT ON COLUMN "canvas"."submissions"."grade_matches_current_submission" IS 'A boolean flag which is false if the student has re-submitted since the submission was last graded. Valid only when a score has been assigned to a submission. This is set to *false* if a student makes a new submission to an already graded assignment. This is done to indicate that the current grade given by the teacher is not for the most recent submission by the student. It is set to *true* if a score has been given and there is no new submission. Defaults to NULL.';
COMMENT ON COLUMN "canvas"."submissions"."published_score" IS 'The raw score (identical to score).';
COMMENT ON COLUMN "canvas"."submissions"."published_grade" IS 'Valid only for a graded submission. The values are strings that reflect the grading type used. For example, a scoring method of `points` will show `4` if given a `4` out of `5`, and a scoring method of `letter grade` will show `B` for the same score (assuming a grading scale where 80-90% is a `B`). Defaults to NULL.';
COMMENT ON COLUMN "canvas"."submissions"."graded_at" IS 'Timestamp of when the submission was graded.';
COMMENT ON COLUMN "canvas"."submissions"."student_entered_score" IS 'A "what-if" score that the student has entered for this submission.';
COMMENT ON COLUMN "canvas"."submissions"."grader_id" IS 'The ID of the user who graded the submission. This will be NULL for submissions that haven''t been graded yet. It will be a positive number if a real user has graded the submission and a negative number if the submission was graded by a process (e.g. Quiz auto-grader and auto-grading LTI tools). Specifically auto-graded quizzes set `grader_id` to the negative of the quiz ID. Submissions auto-graded by LTI tools set `grader_id` to the negative of the tool ID.';
COMMENT ON COLUMN "canvas"."submissions"."submission_comments_count" IS 'A count of the number of comments made on this submission.';
COMMENT ON COLUMN "canvas"."submissions"."media_object_id" IS 'The ID of the associated MediaObject.';
COMMENT ON COLUMN "canvas"."submissions"."turnitin_data" IS 'A YAML string representing plagiarism data associated with this submission.';
COMMENT ON COLUMN "canvas"."submissions"."cached_due_date" IS 'The de-normalized cached due date for this submission.';
COMMENT ON COLUMN "canvas"."submissions"."excused" IS 'Whether the assignment is excused. Excused assignments have no impact on a user''s grade.';
COMMENT ON COLUMN "canvas"."submissions"."graded_anonymously" IS 'Denotes how the grading has been performed. Possible values are `graded_anonymously` and `not_graded_anonymously`.';
COMMENT ON COLUMN "canvas"."submissions"."late_policy_status" IS 'The status of the submission in relation to the late policy. Only reflects statuses manually applied by a grader. Can be late, missing, none, or NULL.';
COMMENT ON COLUMN "canvas"."submissions"."points_deducted" IS 'The amount of points automatically deducted from the score by the missing/late policy for a late or missing assignment.';
COMMENT ON COLUMN "canvas"."submissions"."seconds_late_override" IS 'For late submissions, the amount of time (in seconds) the submission is late by.';
COMMENT ON COLUMN "canvas"."submissions"."lti_user_id" IS 'The LTI context ID of the submitter.';
COMMENT ON COLUMN "canvas"."submissions"."anonymous_id" IS 'A unique short ID identifying this submission without reference to the owning user.';
COMMENT ON COLUMN "canvas"."submissions"."last_comment_at" IS 'The date of the last non-draft comment on this submission by a user other than the submitter.';
COMMENT ON COLUMN "canvas"."submissions"."cached_quiz_lti" IS 'True if the associated assignment is a Quizzes.Next assignment.';
COMMENT ON COLUMN "canvas"."submissions"."cached_tardiness" IS 'The status of the submission in relation to the late policy, including automatically-applied statuses. Can be `late`, `missing` or NULL.';
COMMENT ON COLUMN "canvas"."submissions"."resource_link_lookup_uuid" IS 'When the submission is from an LTI tool, the resource link lookup ID is assigned to the submission in order to recover the custom parameters.';
COMMENT ON COLUMN "canvas"."submissions"."redo_request" IS 'True if the assignment has been reassigned to the student for resubmission.';
COMMENT ON COLUMN "canvas"."submissions"."body" IS 'The content of the submission, if it was submitted directly in a text field.';
COMMENT ON COLUMN "canvas"."submissions"."url" IS 'URL content for the submission.';
CREATE TABLE "canvas"."usage_rights" (
"id" bigint NOT NULL,
CONSTRAINT "pk_usage_rights" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."usage_rights" IS 'Data in this table is not exposed, the table is available only as the target of a foreign key or discriminated key relationship.';
CREATE TABLE "canvas"."user_account_associations" (
"id" bigint NOT NULL,
"user_id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"account_id" bigint NOT NULL,
"depth" integer,
CONSTRAINT "pk_user_account_associations" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."user_account_associations" IS 'Stores data about user and account relationship, how "close" a user is related to an account.';
COMMENT ON COLUMN "canvas"."user_account_associations"."id" IS 'The ID of a record.';
COMMENT ON COLUMN "canvas"."user_account_associations"."user_id" IS 'The foreign key for the users dataset.';
COMMENT ON COLUMN "canvas"."user_account_associations"."created_at" IS 'Timestamp of when the user association with an account was created.';
COMMENT ON COLUMN "canvas"."user_account_associations"."updated_at" IS 'Timestamp that shows the last time the record was updated.';
COMMENT ON COLUMN "canvas"."user_account_associations"."account_id" IS 'Identifies the account associated with this user.';
COMMENT ON COLUMN "canvas"."user_account_associations"."depth" IS 'How "close" a user is related to an account. `1` if you have a pseudonym or enrollment in a course in that account. `2` if it''s the parent account of a course you''re enrolled in, etc.';
CREATE TABLE "canvas"."users" (
"id" bigint NOT NULL,
"deleted_at" timestamp,
"storage_quota" bigint,
"lti_context_id" varchar(255),
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."users__workflow_state" NOT NULL,
"sortable_name" varchar(255),
"avatar_image_url" varchar(255),
"avatar_image_source" varchar(255),
"avatar_image_updated_at" timestamp,
"short_name" varchar(255),
"last_logged_out" timestamp,
"pronouns" text,
"merged_into_user_id" bigint,
"locale" varchar(255),
"name" varchar(255),
"time_zone" varchar(255),
"uuid" varchar(255),
"school_name" varchar(255),
"school_position" varchar(255),
"public" boolean,
CONSTRAINT "pk_users" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."users" IS E'This table stores attributes for users.\n\nSome users are from other Canvas instances (`id` column being > 10000000000000). Not all users are displayed in\nusers list on UI.';
COMMENT ON COLUMN "canvas"."users"."id" IS 'The ID of the user.';
COMMENT ON COLUMN "canvas"."users"."deleted_at" IS 'Timestamp that shows when a user was deleted at.';
COMMENT ON COLUMN "canvas"."users"."storage_quota" IS 'The storage quota for the users.';
COMMENT ON COLUMN "canvas"."users"."lti_context_id" IS 'UUID of the Canvas context in LTI standard. secondary ID for this context, could be used in API to identify resource as well.';
COMMENT ON COLUMN "canvas"."users"."created_at" IS 'Timestamp when the user was created in the Canvas system.';
COMMENT ON COLUMN "canvas"."users"."updated_at" IS 'Timestamp that shows the last time the record was updated.';
COMMENT ON COLUMN "canvas"."users"."workflow_state" IS 'Workflow status indicating the status of the user.';
COMMENT ON COLUMN "canvas"."users"."sortable_name" IS 'The name of the user that is should be used for sorting groups of users, such as in the gradebook. Format: "lastname, firstname".';
COMMENT ON COLUMN "canvas"."users"."avatar_image_url" IS 'If avatars are enabled, this field will be included and contain a url to retrieve the user''s avatar.';
COMMENT ON COLUMN "canvas"."users"."avatar_image_source" IS 'The source of a user avatar image.';
COMMENT ON COLUMN "canvas"."users"."avatar_image_updated_at" IS 'Timestamp that shows the last time the avatar image was updated.';
COMMENT ON COLUMN "canvas"."users"."short_name" IS 'A short name the user has selected, for use in conversations or other less formal places through the site.';
COMMENT ON COLUMN "canvas"."users"."last_logged_out" IS 'The last time the user explicitly logged out of Canvas.';
COMMENT ON COLUMN "canvas"."users"."pronouns" IS 'stores a list of preferred gender pronouns i.e.: she/her; he/him; they/them.';
COMMENT ON COLUMN "canvas"."users"."merged_into_user_id" IS 'If this user was merged into another one, this is the foreign key to that other user.';
COMMENT ON COLUMN "canvas"."users"."locale" IS 'The user''s locale. This is an optional field and may not be entered by the user.';
COMMENT ON COLUMN "canvas"."users"."name" IS 'The name of the user ("firstname lastname" format).';
COMMENT ON COLUMN "canvas"."users"."time_zone" IS 'This field is only returned in certain API calls, and will return the IANA time zone name of the user''s preferred timezone.';
COMMENT ON COLUMN "canvas"."users"."uuid" IS 'UUID of the user.';
COMMENT ON COLUMN "canvas"."users"."school_name" IS 'Used in Trial Versions of Canvas, the school the user is associated with.';
COMMENT ON COLUMN "canvas"."users"."school_position" IS 'Used in Trial Versions of Canvas, the position the user has at the school. E.g. Admin';
COMMENT ON COLUMN "canvas"."users"."public" IS 'Used in Trial Versions of Canvas, the type of school the user is associated with.';
CREATE TABLE "canvas"."versions" (
"id" bigint NOT NULL,
CONSTRAINT "pk_versions" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."versions" IS 'Data in this table is not exposed, the table is available only as the target of a foreign key or discriminated key relationship.';
CREATE TABLE "canvas"."web_conference_participants" (
"id" bigint NOT NULL,
"web_conference_id" bigint,
"user_id" bigint,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"participation_type" "canvas"."web_conference_participants__participation_type",
CONSTRAINT "pk_web_conference_participants" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."web_conference_participants" IS 'Links users to conferences they are invited to join.';
COMMENT ON COLUMN "canvas"."web_conference_participants"."id" IS 'The ID of the web conference participant.';
COMMENT ON COLUMN "canvas"."web_conference_participants"."web_conference_id" IS 'Foreign key to the `web_conferences` page.';
COMMENT ON COLUMN "canvas"."web_conference_participants"."user_id" IS 'Identifies the user who is the conference participant.';
COMMENT ON COLUMN "canvas"."web_conference_participants"."created_at" IS 'Timestamp when record was created.';
COMMENT ON COLUMN "canvas"."web_conference_participants"."updated_at" IS 'Timestamp when record was updated.';
COMMENT ON COLUMN "canvas"."web_conference_participants"."participation_type" IS 'Type of participation e.g.: invitee or attendee.';
CREATE TABLE "canvas"."web_conferences" (
"id" bigint NOT NULL,
"user_id" bigint,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"context_id" bigint NOT NULL,
"context_type" "canvas"."web_conferences__context_type" NOT NULL,
"start_at" timestamp,
"end_at" timestamp,
"context_code" varchar(255),
"started_at" timestamp,
"user_ids" varchar(255),
"ended_at" timestamp,
"recording_ready" boolean,
"conference_type" "canvas"."web_conferences__conference_type" NOT NULL,
"conference_key" varchar(255),
"description" text,
"duration" double precision,
"settings" text,
"title" varchar(255) NOT NULL,
"uuid" varchar(255),
CONSTRAINT "pk_web_conferences" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."web_conferences" IS E'Data model for Conferences in Canvas.\n\nIntegrates with external conferencing solutions like BigBlueButton.';
COMMENT ON COLUMN "canvas"."web_conferences"."id" IS 'The ID of the conference.';
COMMENT ON COLUMN "canvas"."web_conferences"."user_id" IS 'The ID of the user that created the conference.';
COMMENT ON COLUMN "canvas"."web_conferences"."created_at" IS 'Timestamp when record was created.';
COMMENT ON COLUMN "canvas"."web_conferences"."updated_at" IS 'Timestamp when record was updated.';
COMMENT ON COLUMN "canvas"."web_conferences"."context_id" IS 'The ID of this conference''s context.';
COMMENT ON COLUMN "canvas"."web_conferences"."context_type" IS 'The type of this conference''s context.';
COMMENT ON COLUMN "canvas"."web_conferences"."start_at" IS 'The date the conference started at, NULL if it hasn''t started.';
COMMENT ON COLUMN "canvas"."web_conferences"."end_at" IS 'The date that the conference ended at, NULL if it hasn''t ended.';
COMMENT ON COLUMN "canvas"."web_conferences"."context_code" IS 'A string identifying the context.';
COMMENT ON COLUMN "canvas"."web_conferences"."started_at" IS 'The time at which this conference actually started at, NULL if it hasn''t started.';
COMMENT ON COLUMN "canvas"."web_conferences"."user_ids" IS 'Array of user ids that are participants in the conference.';
COMMENT ON COLUMN "canvas"."web_conferences"."ended_at" IS 'The time at which this conference actually ended, NULL if it hasn''t ended.';
COMMENT ON COLUMN "canvas"."web_conferences"."recording_ready" IS 'Whether the conference''s recording has been processed.';
COMMENT ON COLUMN "canvas"."web_conferences"."conference_type" IS 'The type of conference.';
COMMENT ON COLUMN "canvas"."web_conferences"."conference_key" IS 'The 3rd party''s ID for the conference.';
COMMENT ON COLUMN "canvas"."web_conferences"."description" IS 'The description for the conference.';
COMMENT ON COLUMN "canvas"."web_conferences"."duration" IS 'The expected duration the conference is supposed to last.';
COMMENT ON COLUMN "canvas"."web_conferences"."settings" IS 'Settings for the given conference.';
COMMENT ON COLUMN "canvas"."web_conferences"."title" IS 'The title of the conference.';
COMMENT ON COLUMN "canvas"."web_conferences"."uuid" IS 'A unique ID used for integrations.';
CREATE TABLE "canvas"."wiki_pages" (
"id" bigint NOT NULL,
"user_id" bigint,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"workflow_state" "canvas"."wiki_pages__workflow_state" NOT NULL,
"context_id" bigint NOT NULL,
"context_type" "canvas"."wiki_pages__context_type" NOT NULL,
"assignment_id" bigint,
"migration_id" varchar(255),
"wiki_id" bigint NOT NULL,
"old_assignment_id" bigint,
"todo_date" timestamp,
"editing_roles" varchar(255),
"revised_at" timestamp,
"body" text,
"url" text,
"title" varchar(255),
"protected_editing" boolean NOT NULL,
"could_be_locked" boolean,
CONSTRAINT "pk_wiki_pages" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."wiki_pages" IS E'Stores text data that is linked to a wiki and a course.\n\nAlso known as Pages. Pages store content and educational resources that are part of a course or group but don\'t\nnecessarily belong in an assignment. Pages can include text, video, and links to files and other course or group\ncontent. Pages can also be linked to other pages. They can also be used as a collaboration tool for course or group\nwikis where only specific users can have access. Canvas keeps the entire history of the page to account for changes\nover time.';
COMMENT ON COLUMN "canvas"."wiki_pages"."id" IS 'The unique identifier of a wiki page record.';
COMMENT ON COLUMN "canvas"."wiki_pages"."user_id" IS 'The unique ID of a user.';
COMMENT ON COLUMN "canvas"."wiki_pages"."created_at" IS 'Timestamp showing when a `wiki_pages` record was created.';
COMMENT ON COLUMN "canvas"."wiki_pages"."updated_at" IS 'Timestamp showing when a `wiki_pages` record was updated.';
COMMENT ON COLUMN "canvas"."wiki_pages"."workflow_state" IS 'The state of a wiki page.';
COMMENT ON COLUMN "canvas"."wiki_pages"."context_id" IS 'The unique identifier for the context of `wiki_pages` (account, course, user).';
COMMENT ON COLUMN "canvas"."wiki_pages"."context_type" IS 'The type of the object represented by `context_id`.';
COMMENT ON COLUMN "canvas"."wiki_pages"."assignment_id" IS 'Assignment identifier when using `wiki_page` assignment type for an assignment.';
COMMENT ON COLUMN "canvas"."wiki_pages"."migration_id" IS 'An identifier used by the Blueprint system to match with the blueprint content.';
COMMENT ON COLUMN "canvas"."wiki_pages"."wiki_id" IS 'The unique identifier of an associated wiki record.';
COMMENT ON COLUMN "canvas"."wiki_pages"."old_assignment_id" IS 'An old assignment identifier.';
COMMENT ON COLUMN "canvas"."wiki_pages"."todo_date" IS 'Date to set when setting this page as student to-do.';
COMMENT ON COLUMN "canvas"."wiki_pages"."editing_roles" IS 'CSV list of the roles that are allowed to edit this page. Possible values are `teachers`, `students`, `public`.';
COMMENT ON COLUMN "canvas"."wiki_pages"."revised_at" IS 'Timestamp showing when page was last revised.';
COMMENT ON COLUMN "canvas"."wiki_pages"."body" IS 'The body of the wiki page record (includes html tags).';
COMMENT ON COLUMN "canvas"."wiki_pages"."url" IS 'The HTML body of the page.';
COMMENT ON COLUMN "canvas"."wiki_pages"."title" IS 'The name of the wiki page record.';
COMMENT ON COLUMN "canvas"."wiki_pages"."protected_editing" IS 'Editing protection for the wiki page. It is false by default.';
COMMENT ON COLUMN "canvas"."wiki_pages"."could_be_locked" IS 'True if the wiki page can be locked. This prevents it from being visible to others until ready.';
CREATE TABLE "canvas"."wikis" (
"id" bigint NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"front_page_url" text,
"has_no_front_page" boolean,
"title" varchar(255),
CONSTRAINT "pk_wikis" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas"."wikis" IS E'Links a course to its wiki pages.\n\nThere\'s only ever one per course, it is not highly used any longer, Wiki pages object is linked directly to\na course now.';
COMMENT ON COLUMN "canvas"."wikis"."id" IS 'The unique identifier of a wiki record.';
COMMENT ON COLUMN "canvas"."wikis"."created_at" IS 'Timestamp showing when a wikis record was created.';
COMMENT ON COLUMN "canvas"."wikis"."updated_at" IS 'Timestamp showing when a wikis record was updated.';
COMMENT ON COLUMN "canvas"."wikis"."front_page_url" IS 'Captures the URL of the front page (wiki page) record if one exists.';
COMMENT ON COLUMN "canvas"."wikis"."has_no_front_page" IS 'Flag to determine if a course''s wiki has a front page or not. No front page == true.';
COMMENT ON COLUMN "canvas"."wikis"."title" IS 'The title of the wiki.';
CREATE TABLE "catalog"."account_admins" (
"id" integer NOT NULL,
"canvas_user_id" bigint,
"account_id" integer,
"name" text,
"email" text,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"root_account_id" integer,
"deleted_at" timestamp,
CONSTRAINT "pk_account_admins" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."account_admins" IS 'Catalog account admins.';
COMMENT ON COLUMN "catalog"."account_admins"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."account_admins"."canvas_user_id" IS 'The Canvas identifier of the user.';
COMMENT ON COLUMN "catalog"."account_admins"."account_id" IS 'The unique identifier of an account.';
COMMENT ON COLUMN "catalog"."account_admins"."name" IS 'The name of the admin.';
COMMENT ON COLUMN "catalog"."account_admins"."email" IS 'The email address of the admin.';
COMMENT ON COLUMN "catalog"."account_admins"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."account_admins"."updated_at" IS 'Timestamp of when a record was updated.';
COMMENT ON COLUMN "catalog"."account_admins"."root_account_id" IS 'The root account of the account. The unique identifier of an account.';
COMMENT ON COLUMN "catalog"."account_admins"."deleted_at" IS 'Timestamp of when a record was soft deleted.';
CREATE TABLE "catalog"."accounts" (
"id" integer NOT NULL,
"parent_id" integer,
"name" text,
"about" text,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"portal_path" text,
"canvas_domain" text,
"type" text,
"settings" text,
"canvas_id" bigint,
"locale" text NOT NULL,
"text_overrides" text,
"deleted_at" timestamp,
"logo_file_name" text,
"logo_content_type" text,
"logo_file_size" integer,
"logo_updated_at" timestamp,
"favicon_file_name" text,
"favicon_content_type" text,
"favicon_file_size" integer,
"favicon_updated_at" timestamp,
"header_image_file_name" text,
"header_image_content_type" text,
"header_image_file_size" integer,
"header_image_updated_at" timestamp,
"canvas_account_uuid" text,
"alias_path" text,
CONSTRAINT "pk_accounts" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."accounts" IS 'Catalog accounts (known as catalogs and sub-catalogs).';
COMMENT ON COLUMN "catalog"."accounts"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."accounts"."parent_id" IS 'The parent account of the account. The unique identifier of an account.';
COMMENT ON COLUMN "catalog"."accounts"."name" IS 'The name of the account.';
COMMENT ON COLUMN "catalog"."accounts"."about" IS 'The description of the the account.';
COMMENT ON COLUMN "catalog"."accounts"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."accounts"."updated_at" IS 'Timestamp of when a record was updated.';
COMMENT ON COLUMN "catalog"."accounts"."portal_path" IS 'The URL/Path of the account.';
COMMENT ON COLUMN "catalog"."accounts"."canvas_domain" IS 'The Canvas URL for the account.';
COMMENT ON COLUMN "catalog"."accounts"."type" IS 'The type of the account: `DomainAccount`/`PortalAccount`.';
COMMENT ON COLUMN "catalog"."accounts"."settings" IS 'The JSON representation of the account''s settings.';
COMMENT ON COLUMN "catalog"."accounts"."canvas_id" IS 'The unique identifier of the Canvas account.';
COMMENT ON COLUMN "catalog"."accounts"."locale" IS 'The locale setting of the account.';
COMMENT ON COLUMN "catalog"."accounts"."text_overrides" IS 'The JSON representation of the text overrides for the account (for example: programs heading).';
COMMENT ON COLUMN "catalog"."accounts"."deleted_at" IS 'Timestamp of when a record was deleted.';
COMMENT ON COLUMN "catalog"."accounts"."logo_file_name" IS 'The filename of the account''s logo.';
COMMENT ON COLUMN "catalog"."accounts"."logo_content_type" IS 'The content type of the account''s logo.';
COMMENT ON COLUMN "catalog"."accounts"."logo_file_size" IS 'The file size of the account''s logo.';
COMMENT ON COLUMN "catalog"."accounts"."logo_updated_at" IS 'Timestamp of when the account''s logo updated.';
COMMENT ON COLUMN "catalog"."accounts"."favicon_file_name" IS 'The filename of the account''s favicon.';
COMMENT ON COLUMN "catalog"."accounts"."favicon_content_type" IS 'The content type of the account''s favicon.';
COMMENT ON COLUMN "catalog"."accounts"."favicon_file_size" IS 'The file size of the account''s favicon.';
COMMENT ON COLUMN "catalog"."accounts"."favicon_updated_at" IS 'Timestamp of when the account''s favicon updated.';
COMMENT ON COLUMN "catalog"."accounts"."header_image_file_name" IS 'The filename of the account''s header image.';
COMMENT ON COLUMN "catalog"."accounts"."header_image_content_type" IS 'The content type of the account''s header image.';
COMMENT ON COLUMN "catalog"."accounts"."header_image_file_size" IS 'The file size of the account''s header image.';
COMMENT ON COLUMN "catalog"."accounts"."header_image_updated_at" IS 'Timestamp of when the account''s header image updated.';
COMMENT ON COLUMN "catalog"."accounts"."canvas_account_uuid" IS 'The UUID of the Canvas account.';
COMMENT ON COLUMN "catalog"."accounts"."alias_path" IS 'Alias path the account.';
CREATE TABLE "catalog"."applicants" (
"id" integer NOT NULL,
"product_id" integer,
"name" text,
"email" text,
"canvas_user_id" bigint,
"notified_of_opening_at" timestamp,
"status" text,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"token" text,
"activated" boolean,
"deleted_at" timestamp,
CONSTRAINT "pk_applicants" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."applicants" IS 'Applicants for a product''s wait list.';
COMMENT ON COLUMN "catalog"."applicants"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."applicants"."product_id" IS 'The unique identifier of a product.';
COMMENT ON COLUMN "catalog"."applicants"."name" IS 'The name of the applicant.';
COMMENT ON COLUMN "catalog"."applicants"."email" IS 'The email address of the applicant.';
COMMENT ON COLUMN "catalog"."applicants"."canvas_user_id" IS 'The identifier of the Canvas user.';
COMMENT ON COLUMN "catalog"."applicants"."notified_of_opening_at" IS 'Timestamp when the applicant was notified about getting in for the product.';
COMMENT ON COLUMN "catalog"."applicants"."status" IS 'The status of the application.';
COMMENT ON COLUMN "catalog"."applicants"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."applicants"."updated_at" IS 'Timestamp of when a record was updated.';
COMMENT ON COLUMN "catalog"."applicants"."token" IS 'The token for identifying an applicant (used when the user wants leave the wait list).';
COMMENT ON COLUMN "catalog"."applicants"."activated" IS 'Indicates whether the user for the applicant is activated.';
COMMENT ON COLUMN "catalog"."applicants"."deleted_at" IS 'Timestamp of when a record was deleted.';
CREATE TABLE "catalog"."bulk_checkout_promotions" (
"id" bigint NOT NULL,
"bulk_checkout_id" bigint,
"promotion_id" integer,
"discount" decimal,
"deleted_at" timestamp,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
CONSTRAINT "pk_bulk_checkout_promotions" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."bulk_checkout_promotions" IS 'Promotions applied in a bulk checkout transaction.';
COMMENT ON COLUMN "catalog"."bulk_checkout_promotions"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."bulk_checkout_promotions"."bulk_checkout_id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."bulk_checkout_promotions"."promotion_id" IS 'The promotion. The unique identifier of a promotion.';
COMMENT ON COLUMN "catalog"."bulk_checkout_promotions"."discount" IS 'The amount of the promotion discount in the bulk checkout.';
COMMENT ON COLUMN "catalog"."bulk_checkout_promotions"."deleted_at" IS 'Timestamp of when a record was deleted.';
COMMENT ON COLUMN "catalog"."bulk_checkout_promotions"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."bulk_checkout_promotions"."updated_at" IS 'Timestamp of when a record was updated.';
CREATE TABLE "catalog"."bulk_checkouts" (
"id" bigint NOT NULL,
"canvas_user_id" bigint,
"product_id" integer,
"account_id" integer,
"order_id" integer,
"seats" integer,
"deleted_at" timestamp,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"checkout_time" timestamp,
CONSTRAINT "pk_bulk_checkouts" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."bulk_checkouts" IS 'Bulk checkout transactions.';
COMMENT ON COLUMN "catalog"."bulk_checkouts"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."bulk_checkouts"."canvas_user_id" IS 'The Canvas identifier of the user.';
COMMENT ON COLUMN "catalog"."bulk_checkouts"."product_id" IS 'The product of the bulk checkout. The unique identifier of a product.';
COMMENT ON COLUMN "catalog"."bulk_checkouts"."account_id" IS 'The account of the bulk checkout. The unique identifier of an account.';
COMMENT ON COLUMN "catalog"."bulk_checkouts"."order_id" IS 'The order of the bulk checkout. The unique identifier of an order.';
COMMENT ON COLUMN "catalog"."bulk_checkouts"."seats" IS 'Indicates how many seats purchased.';
COMMENT ON COLUMN "catalog"."bulk_checkouts"."deleted_at" IS 'Timestamp of when a record was deleted.';
COMMENT ON COLUMN "catalog"."bulk_checkouts"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."bulk_checkouts"."updated_at" IS 'Timestamp of when a record was updated.';
COMMENT ON COLUMN "catalog"."bulk_checkouts"."checkout_time" IS 'Timestamp of the bulk checkout.';
CREATE TABLE "catalog"."bulk_invitations" (
"id" bigint NOT NULL,
"order_item_id" integer,
"product_id" integer,
"email" text,
"code" text,
"status" text,
"invited_at" timestamp,
"revoked_at" timestamp,
"deleted_at" timestamp,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"enrollment_id" integer,
CONSTRAINT "pk_bulk_invitations" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."bulk_invitations" IS 'Invitations that applied in a bulk checkout.';
COMMENT ON COLUMN "catalog"."bulk_invitations"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."bulk_invitations"."order_item_id" IS 'The order item for the invitation. The unique identifier of an order item.';
COMMENT ON COLUMN "catalog"."bulk_invitations"."product_id" IS 'The product for the invitation. The unique identifier of a product.';
COMMENT ON COLUMN "catalog"."bulk_invitations"."email" IS 'Email where the invitation sent.';
COMMENT ON COLUMN "catalog"."bulk_invitations"."code" IS 'Code for the invitation.';
COMMENT ON COLUMN "catalog"."bulk_invitations"."status" IS 'Status of the invitation.';
COMMENT ON COLUMN "catalog"."bulk_invitations"."invited_at" IS 'Timestamp when the invitation sent.';
COMMENT ON COLUMN "catalog"."bulk_invitations"."revoked_at" IS 'Timestamp when the invitation revoked.';
COMMENT ON COLUMN "catalog"."bulk_invitations"."deleted_at" IS 'Timestamp of when a record was deleted.';
COMMENT ON COLUMN "catalog"."bulk_invitations"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."bulk_invitations"."updated_at" IS 'Timestamp of when a record was updated.';
COMMENT ON COLUMN "catalog"."bulk_invitations"."enrollment_id" IS 'The enrollment for the invitation. The unique identifier of an enrollment.';
CREATE TABLE "catalog"."cart_item_promotions" (
"id" bigint NOT NULL,
"cart_item_id" bigint,
"promotion_id" integer,
"discount" decimal,
"deleted_at" timestamp,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
CONSTRAINT "pk_cart_item_promotions" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."cart_item_promotions" IS 'Promotions applied in a shopping cart transaction.';
COMMENT ON COLUMN "catalog"."cart_item_promotions"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."cart_item_promotions"."cart_item_id" IS 'The cart item. The unique identifier of a cart item.';
COMMENT ON COLUMN "catalog"."cart_item_promotions"."promotion_id" IS 'The promotion. The unique identifier of a promotion.';
COMMENT ON COLUMN "catalog"."cart_item_promotions"."discount" IS 'The amount of the promotion discount in the cart.';
COMMENT ON COLUMN "catalog"."cart_item_promotions"."deleted_at" IS 'Timestamp of when a record was deleted.';
COMMENT ON COLUMN "catalog"."cart_item_promotions"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."cart_item_promotions"."updated_at" IS 'Timestamp of when a record was updated.';
CREATE TABLE "catalog"."cart_items" (
"id" bigint NOT NULL,
"cart_id" bigint,
"product_id" integer,
"deleted_at" timestamp,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
CONSTRAINT "pk_cart_items" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."cart_items" IS 'Items in a shopping cart transaction.';
COMMENT ON COLUMN "catalog"."cart_items"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."cart_items"."cart_id" IS 'The cart for the item. The unique identifier of a cart.';
COMMENT ON COLUMN "catalog"."cart_items"."product_id" IS 'The product for the cart. The unique identifier of a product.';
COMMENT ON COLUMN "catalog"."cart_items"."deleted_at" IS 'Timestamp of when a record was deleted.';
COMMENT ON COLUMN "catalog"."cart_items"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."cart_items"."updated_at" IS 'Timestamp of when a record was updated.';
CREATE TABLE "catalog"."carts" (
"id" bigint NOT NULL,
"account_id" integer,
"canvas_user_id" bigint,
"deleted_at" timestamp,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"order_id" integer,
"checkout_time" timestamp,
"root_account_id" integer,
CONSTRAINT "pk_carts" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."carts" IS 'Represents a shopping cart transaction until the checkout.';
COMMENT ON COLUMN "catalog"."carts"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."carts"."account_id" IS 'The account for the cart. The unique identifier of an account.';
COMMENT ON COLUMN "catalog"."carts"."canvas_user_id" IS 'The Canvas identifier of the user.';
COMMENT ON COLUMN "catalog"."carts"."deleted_at" IS 'Timestamp of when a record was deleted.';
COMMENT ON COLUMN "catalog"."carts"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."carts"."updated_at" IS 'Timestamp of when a record was updated.';
COMMENT ON COLUMN "catalog"."carts"."order_id" IS 'The order for the cart. The unique identifier of an order.';
COMMENT ON COLUMN "catalog"."carts"."checkout_time" IS 'Timestamp of the cart checkout.';
COMMENT ON COLUMN "catalog"."carts"."root_account_id" IS 'The root account for the cart. The unique identifier of an account.';
CREATE TABLE "catalog"."categories" (
"id" integer NOT NULL,
"account_id" integer,
"group_id" integer,
"group_type" text,
"deleted_at" timestamp,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
CONSTRAINT "pk_categories" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."categories" IS 'Used to populate the list of filtering options for a given catalog. Basically a group for a given account or a tag.';
COMMENT ON COLUMN "catalog"."categories"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."categories"."account_id" IS 'Unique identifier of the account this category belongs to.';
COMMENT ON COLUMN "catalog"."categories"."group_id" IS 'Unique identifier of the account or tag this category belongs to.';
COMMENT ON COLUMN "catalog"."categories"."group_type" IS 'The type of the group this category belongs to. Can be "Account" or "Tag".';
COMMENT ON COLUMN "catalog"."categories"."deleted_at" IS 'Timestamp of when a record was deleted.';
COMMENT ON COLUMN "catalog"."categories"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."categories"."updated_at" IS 'Timestamp of when a record was last updated.';
CREATE TABLE "catalog"."certificate_templates" (
"id" integer NOT NULL,
"account_id" integer,
"name" text,
"template" text,
"pdf_settings" text,
"code" text,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"deleted_at" timestamp,
CONSTRAINT "pk_certificate_templates" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."certificate_templates" IS 'Templates for certificates.';
COMMENT ON COLUMN "catalog"."certificate_templates"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."certificate_templates"."account_id" IS 'The account for the certificate template. The unique identifier of an account.';
COMMENT ON COLUMN "catalog"."certificate_templates"."name" IS 'Name of the template.';
COMMENT ON COLUMN "catalog"."certificate_templates"."template" IS 'Template String (not a YAML, regular Template String).';
COMMENT ON COLUMN "catalog"."certificate_templates"."pdf_settings" IS 'Settings JSON for the generated PDF (for example, orientation).';
COMMENT ON COLUMN "catalog"."certificate_templates"."code" IS 'Code of the template.';
COMMENT ON COLUMN "catalog"."certificate_templates"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."certificate_templates"."updated_at" IS 'Timestamp of when a record was updated.';
COMMENT ON COLUMN "catalog"."certificate_templates"."deleted_at" IS 'Timestamp of when a record was deleted.';
CREATE TABLE "catalog"."certificates" (
"id" integer NOT NULL,
"product_id" integer,
"name" text,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"old_template" text,
"old_pdf_settings" text,
"deleted_at" timestamp,
"certificate_template_id" integer,
"active" boolean NOT NULL,
"custom_template_id" integer,
"days_to_expire" integer,
"expires_at" timestamp,
CONSTRAINT "pk_certificates" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."certificates" IS 'Certificate that can be awarded for completing a product.';
COMMENT ON COLUMN "catalog"."certificates"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."certificates"."product_id" IS 'Product for the certificate. The unique identifier of a product.';
COMMENT ON COLUMN "catalog"."certificates"."name" IS 'Name of the certificate.';
COMMENT ON COLUMN "catalog"."certificates"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."certificates"."updated_at" IS 'Timestamp of when a record was updated.';
COMMENT ON COLUMN "catalog"."certificates"."old_template" IS 'Leftover data that was used before the certificate_templates. Backward compatibility.';
COMMENT ON COLUMN "catalog"."certificates"."old_pdf_settings" IS 'Leftover data that was used before the certificate_templates. Backward compatibility.';
COMMENT ON COLUMN "catalog"."certificates"."deleted_at" IS 'Timestamp of when a record was deleted.';
COMMENT ON COLUMN "catalog"."certificates"."certificate_template_id" IS 'The template for the certificate. The unique identifier of a certificate template.';
COMMENT ON COLUMN "catalog"."certificates"."active" IS 'Indicates whether the certificate active or not.';
COMMENT ON COLUMN "catalog"."certificates"."custom_template_id" IS 'The custom template for the certificate. The unique identifier of a certificate template.';
COMMENT ON COLUMN "catalog"."certificates"."days_to_expire" IS 'Expiration time for the certificate.';
COMMENT ON COLUMN "catalog"."certificates"."expires_at" IS 'Expiration date for the certificate.';
CREATE TABLE "catalog"."custom_emails" (
"id" bigint NOT NULL,
"account_id" integer NOT NULL,
"email_type" text NOT NULL,
"draft" text,
"published" text,
"created_at" timestamp NOT NULL,
"created_by" text NOT NULL,
"updated_at" timestamp NOT NULL,
"updated_by" text NOT NULL,
"published_at" timestamp,
"published_by" text,
"deleted_at" timestamp,
CONSTRAINT "pk_custom_emails" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."custom_emails" IS 'Customized emails.';
COMMENT ON COLUMN "catalog"."custom_emails"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."custom_emails"."account_id" IS 'The account of the email. The unique identifier of an account.';
COMMENT ON COLUMN "catalog"."custom_emails"."email_type" IS 'Type of the email.';
COMMENT ON COLUMN "catalog"."custom_emails"."draft" IS 'JSON of the draft version.';
COMMENT ON COLUMN "catalog"."custom_emails"."published" IS 'JSON of the published version.';
COMMENT ON COLUMN "catalog"."custom_emails"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."custom_emails"."created_by" IS 'Name of the creator.';
COMMENT ON COLUMN "catalog"."custom_emails"."updated_at" IS 'Timestamp of when a record was updated.';
COMMENT ON COLUMN "catalog"."custom_emails"."updated_by" IS 'Name of the user who updated the custom email.';
COMMENT ON COLUMN "catalog"."custom_emails"."published_at" IS 'Timestamp of the publication.';
COMMENT ON COLUMN "catalog"."custom_emails"."published_by" IS 'Name of the publisher.';
COMMENT ON COLUMN "catalog"."custom_emails"."deleted_at" IS 'Timestamp of when a record was deleted.';
CREATE TABLE "catalog"."email_layouts" (
"id" integer NOT NULL,
"account_id" integer,
"header" text,
"footer" text,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"deleted_at" timestamp,
CONSTRAINT "pk_email_layouts" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."email_layouts" IS 'Email layouts.';
COMMENT ON COLUMN "catalog"."email_layouts"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."email_layouts"."account_id" IS 'The account of the layout. The unique identifier of an account.';
COMMENT ON COLUMN "catalog"."email_layouts"."header" IS 'Header of the email layout.';
COMMENT ON COLUMN "catalog"."email_layouts"."footer" IS 'Footer of the email layout.';
COMMENT ON COLUMN "catalog"."email_layouts"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."email_layouts"."updated_at" IS 'Timestamp of when a record was updated.';
COMMENT ON COLUMN "catalog"."email_layouts"."deleted_at" IS 'Timestamp of when a record was deleted.';
CREATE TABLE "catalog"."enrollments" (
"id" integer NOT NULL,
"canvas_user_id" bigint,
"product_id" integer,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"root_program_id" integer,
"requirements_completed_at" timestamp,
"ends_at" timestamp,
"external_id" bigint,
"status" text NOT NULL,
"deleted_at" timestamp,
"last_sync_error" text,
"order_item_id" integer,
CONSTRAINT "pk_enrollments" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."enrollments" IS 'Enrollment for a product (course or program).';
COMMENT ON COLUMN "catalog"."enrollments"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."enrollments"."canvas_user_id" IS 'The Canvas identifier of the user.';
COMMENT ON COLUMN "catalog"."enrollments"."product_id" IS 'Product for the enrollment. The unique identifier of a product.';
COMMENT ON COLUMN "catalog"."enrollments"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."enrollments"."updated_at" IS 'Timestamp of when a record was updated.';
COMMENT ON COLUMN "catalog"."enrollments"."root_program_id" IS 'Product for the enrollment. The unique identifier of a product.';
COMMENT ON COLUMN "catalog"."enrollments"."requirements_completed_at" IS 'Completion time for the requirements.';
COMMENT ON COLUMN "catalog"."enrollments"."ends_at" IS 'End time for the enrollment.';
COMMENT ON COLUMN "catalog"."enrollments"."external_id" IS 'External identifier for an enrollment (for example canvas course id).';
COMMENT ON COLUMN "catalog"."enrollments"."status" IS 'Status of the enrollment: active, dropped, concluded.';
COMMENT ON COLUMN "catalog"."enrollments"."deleted_at" IS 'Timestamp of when a record was deleted.';
COMMENT ON COLUMN "catalog"."enrollments"."last_sync_error" IS 'The error of the last synchronization, if applicable.';
COMMENT ON COLUMN "catalog"."enrollments"."order_item_id" IS 'Order item of the enrollment. The unique identifier of an order item.';
CREATE TABLE "catalog"."order_item_promotions" (
"id" bigint NOT NULL,
"order_item_id" integer,
"promotion_id" integer,
"discount" decimal,
"deleted_at" timestamp,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
CONSTRAINT "pk_order_item_promotions" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."order_item_promotions" IS 'Promotions that has been applied on an order.';
COMMENT ON COLUMN "catalog"."order_item_promotions"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."order_item_promotions"."order_item_id" IS 'The unique identifier of an order item.';
COMMENT ON COLUMN "catalog"."order_item_promotions"."promotion_id" IS 'The unique identifier of an promotion.';
COMMENT ON COLUMN "catalog"."order_item_promotions"."discount" IS 'Amount of discount which is applied to the product in the order.';
COMMENT ON COLUMN "catalog"."order_item_promotions"."deleted_at" IS 'Timestamp of when a record was deleted.';
COMMENT ON COLUMN "catalog"."order_item_promotions"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."order_item_promotions"."updated_at" IS 'Timestamp of when a record was updated.';
CREATE TABLE "catalog"."order_items" (
"id" integer NOT NULL,
"order_id" integer,
"item_id" integer,
"amount" decimal,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"deleted_at" timestamp,
"discounted_amount" decimal,
"quantity" integer NOT NULL,
"unit_price" decimal,
CONSTRAINT "pk_order_items" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."order_items" IS 'Order item for a product.';
COMMENT ON COLUMN "catalog"."order_items"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."order_items"."order_id" IS 'The unique identifier of an order.';
COMMENT ON COLUMN "catalog"."order_items"."item_id" IS 'The unique identifier of a product.';
COMMENT ON COLUMN "catalog"."order_items"."amount" IS 'Product quantity price.';
COMMENT ON COLUMN "catalog"."order_items"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."order_items"."updated_at" IS 'Timestamp of when a record was updated.';
COMMENT ON COLUMN "catalog"."order_items"."deleted_at" IS 'Timestamp of when a record was soft deleted.';
COMMENT ON COLUMN "catalog"."order_items"."discounted_amount" IS 'Product quantity price with discounts.';
COMMENT ON COLUMN "catalog"."order_items"."quantity" IS 'Product quantity.';
COMMENT ON COLUMN "catalog"."order_items"."unit_price" IS 'Single product price.';
CREATE TABLE "catalog"."orders" (
"id" integer NOT NULL,
"account_id" integer,
"canvas_user_id" bigint,
"email" text,
"name" text,
"total" decimal,
"currency" text,
"purchased_at" timestamp,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"full_id" text,
"deleted_at" timestamp,
"source" text,
"user_id" bigint,
CONSTRAINT "pk_orders" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."orders" IS 'Order for a product.';
COMMENT ON COLUMN "catalog"."orders"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."orders"."account_id" IS 'The unique identifier of an account.';
COMMENT ON COLUMN "catalog"."orders"."canvas_user_id" IS 'The Canvas identifier of the user.';
COMMENT ON COLUMN "catalog"."orders"."email" IS 'Email of the user for the order.';
COMMENT ON COLUMN "catalog"."orders"."name" IS 'Name of the user for the order.';
COMMENT ON COLUMN "catalog"."orders"."total" IS 'Total price of the order.';
COMMENT ON COLUMN "catalog"."orders"."currency" IS 'Currency of the order.';
COMMENT ON COLUMN "catalog"."orders"."purchased_at" IS 'Timestamp of when an order was purchased.';
COMMENT ON COLUMN "catalog"."orders"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."orders"."updated_at" IS 'Timestamp of when a record was updated.';
COMMENT ON COLUMN "catalog"."orders"."full_id" IS 'Full id of the order with account order id prefix.';
COMMENT ON COLUMN "catalog"."orders"."deleted_at" IS 'Timestamp of when a record was soft deleted.';
COMMENT ON COLUMN "catalog"."orders"."source" IS 'Source from which order was created.';
COMMENT ON COLUMN "catalog"."orders"."user_id" IS 'The unique identifier of an user.';
CREATE TABLE "catalog"."payments" (
"id" integer NOT NULL,
"order_id" integer,
"reference_id" text,
"amount" decimal,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"status" text,
"purchase_params" text,
"deleted_at" timestamp,
CONSTRAINT "pk_payments" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."payments" IS 'Payment information for an order.';
COMMENT ON COLUMN "catalog"."payments"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."payments"."order_id" IS 'The order of the payment. The unique identifier of an order.';
COMMENT ON COLUMN "catalog"."payments"."reference_id" IS 'Reference identifier used to find payment.';
COMMENT ON COLUMN "catalog"."payments"."amount" IS 'The amount of money paid.';
COMMENT ON COLUMN "catalog"."payments"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."payments"."updated_at" IS 'Timestamp of when a record was updated.';
COMMENT ON COLUMN "catalog"."payments"."status" IS 'Status of the payment.';
COMMENT ON COLUMN "catalog"."payments"."purchase_params" IS 'Purchase parameters from the Payment Redirector for the payment.';
COMMENT ON COLUMN "catalog"."payments"."deleted_at" IS 'Timestamp of when a record was created.';
CREATE TABLE "catalog"."product_images" (
"id" integer NOT NULL,
"product_id" integer,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"image_file_name" text,
"image_content_type" text,
"image_file_size" integer,
"image_updated_at" timestamp,
"deleted_at" timestamp,
CONSTRAINT "pk_product_images" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."product_images" IS 'Images for a product.';
COMMENT ON COLUMN "catalog"."product_images"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."product_images"."product_id" IS 'The product for the image The unique identifier of an order.';
COMMENT ON COLUMN "catalog"."product_images"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."product_images"."updated_at" IS 'Timestamp of when a record was updated.';
COMMENT ON COLUMN "catalog"."product_images"."image_file_name" IS 'The file name of the image.';
COMMENT ON COLUMN "catalog"."product_images"."image_content_type" IS 'The content type of the image.';
COMMENT ON COLUMN "catalog"."product_images"."image_file_size" IS 'The file size of the image.';
COMMENT ON COLUMN "catalog"."product_images"."image_updated_at" IS 'Timestamp of when the image updated.';
COMMENT ON COLUMN "catalog"."product_images"."deleted_at" IS 'Timestamp of when a record was deleted.';
CREATE TABLE "catalog"."product_tags" (
"id" integer NOT NULL,
"product_id" integer,
"tag_id" integer,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"deleted_at" timestamp,
CONSTRAINT "pk_product_tags" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."product_tags" IS 'Associative table between products and tags.';
COMMENT ON COLUMN "catalog"."product_tags"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."product_tags"."product_id" IS 'The unique identifier of a product.';
COMMENT ON COLUMN "catalog"."product_tags"."tag_id" IS 'The unique identifier of a tag.';
COMMENT ON COLUMN "catalog"."product_tags"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."product_tags"."updated_at" IS 'Timestamp of when a record was soft updated.';
COMMENT ON COLUMN "catalog"."product_tags"."deleted_at" IS 'Timestamp of when a record was soft deleted.';
CREATE TABLE "catalog"."products" (
"id" integer NOT NULL,
"visibility" text,
"enrollment_open" boolean NOT NULL,
"title" text,
"start_date" timestamp,
"end_date" timestamp,
"description" text,
"enrollment_fee" decimal NOT NULL,
"canvas_course_id" bigint,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"path" text,
"account_id" integer,
"list_order" integer,
"type" text,
"teaser" text,
"owner_id" integer,
"canvas_section_id" bigint,
"sequential" boolean NOT NULL,
"days_to_complete" integer,
"deleted_at" timestamp,
"enrollment_cap" integer,
"waitlist" boolean NOT NULL,
"credits" decimal,
"waitlist_cap" integer,
"sku" text,
"show_free_banner" boolean NOT NULL,
"image_alt_text" text,
"external_redirect_url" text,
"allowed_payment_types" text NOT NULL,
"workflow_state" text NOT NULL,
"workflow_state_timestamp" timestamp NOT NULL,
"detail_code" text,
"bulk_purchase_disabled" boolean NOT NULL,
"enrollment_open_from" timestamp,
"enrollment_open_to" timestamp,
CONSTRAINT "pk_products" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."products" IS 'A product that can be a course or a program. A program contains multiple courses or programs.';
COMMENT ON COLUMN "catalog"."products"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."products"."visibility" IS 'Visibility of the product.';
COMMENT ON COLUMN "catalog"."products"."enrollment_open" IS 'Indicates whether the enrollment is open for the product.';
COMMENT ON COLUMN "catalog"."products"."title" IS 'Title of the product.';
COMMENT ON COLUMN "catalog"."products"."start_date" IS 'Start time of the product.';
COMMENT ON COLUMN "catalog"."products"."end_date" IS 'End time of the product.';
COMMENT ON COLUMN "catalog"."products"."description" IS 'Description of the product.';
COMMENT ON COLUMN "catalog"."products"."enrollment_fee" IS 'Price of the product.';
COMMENT ON COLUMN "catalog"."products"."canvas_course_id" IS 'Course identifier of the Catalog course in the Canvas account.';
COMMENT ON COLUMN "catalog"."products"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."products"."updated_at" IS 'Timestamp of when a record was updated.';
COMMENT ON COLUMN "catalog"."products"."path" IS 'Portal path for the product.';
COMMENT ON COLUMN "catalog"."products"."account_id" IS 'The account for the product. The unique identifier of an account.';
COMMENT ON COLUMN "catalog"."products"."list_order" IS 'Order number in the product list (for custom product ordering).';
COMMENT ON COLUMN "catalog"."products"."type" IS 'Type of the product.';
COMMENT ON COLUMN "catalog"."products"."teaser" IS 'Teaser of the product.';
COMMENT ON COLUMN "catalog"."products"."owner_id" IS 'Who is offering the course/program (may be different than account).';
COMMENT ON COLUMN "catalog"."products"."canvas_section_id" IS 'Id of the section for the Catalog course in the Canvas account.';
COMMENT ON COLUMN "catalog"."products"."sequential" IS 'Indicates whether the program is sequential (courses should be completed in order).';
COMMENT ON COLUMN "catalog"."products"."days_to_complete" IS 'Days to complete the product.';
COMMENT ON COLUMN "catalog"."products"."deleted_at" IS 'Timestamp of when a record was deleted.';
COMMENT ON COLUMN "catalog"."products"."enrollment_cap" IS 'Enrollment cap for the product.';
COMMENT ON COLUMN "catalog"."products"."waitlist" IS 'Indicates whether wait-list is available for the product.';
COMMENT ON COLUMN "catalog"."products"."credits" IS 'Credit number for the product.';
COMMENT ON COLUMN "catalog"."products"."waitlist_cap" IS 'Wait-list cap for the product.';
COMMENT ON COLUMN "catalog"."products"."sku" IS 'SKU of a product.';
COMMENT ON COLUMN "catalog"."products"."show_free_banner" IS 'Option to remove the free banner from product.';
COMMENT ON COLUMN "catalog"."products"."image_alt_text" IS 'Alt text for the product''s image.';
COMMENT ON COLUMN "catalog"."products"."external_redirect_url" IS 'External redirect URL for the product (after enrollment a logged in user will be redirected here).';
COMMENT ON COLUMN "catalog"."products"."allowed_payment_types" IS 'Allowed payment types for the product (can be `standard` or `purchase_order`).';
COMMENT ON COLUMN "catalog"."products"."workflow_state" IS 'Workflow state of the product.';
COMMENT ON COLUMN "catalog"."products"."workflow_state_timestamp" IS 'Timestamp when the workflow state changed.';
COMMENT ON COLUMN "catalog"."products"."detail_code" IS 'Detail code of the product.';
COMMENT ON COLUMN "catalog"."products"."bulk_purchase_disabled" IS 'Bulk purchase enabled or disabled for the product.';
COMMENT ON COLUMN "catalog"."products"."enrollment_open_from" IS 'The start of the product''s enrollment period.';
COMMENT ON COLUMN "catalog"."products"."enrollment_open_to" IS 'The end of the product''s enrollment period.';
CREATE TABLE "catalog"."program_requirements" (
"id" integer NOT NULL,
"program_id" integer,
"product_id" integer,
"sequence" integer,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"deleted_at" timestamp,
CONSTRAINT "pk_program_requirements" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."program_requirements" IS 'Requirements of a program to complete. It can have a number of courses / programs as requirements.';
COMMENT ON COLUMN "catalog"."program_requirements"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."program_requirements"."program_id" IS 'The program that has a requirement. The unique identifier of a program.';
COMMENT ON COLUMN "catalog"."program_requirements"."product_id" IS 'The product that the program has as a requirement. The unique identifier of a product.';
COMMENT ON COLUMN "catalog"."program_requirements"."sequence" IS 'Sequence number of this requirement (scoped to program id).';
COMMENT ON COLUMN "catalog"."program_requirements"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."program_requirements"."updated_at" IS 'Timestamp of when a record was updated.';
COMMENT ON COLUMN "catalog"."program_requirements"."deleted_at" IS 'Timestamp of when a record was deleted.';
CREATE TABLE "catalog"."promotions" (
"id" integer NOT NULL,
"account_id" integer,
"product_id" integer,
"amount" decimal,
"discount_type" text,
"code" text,
"name" text,
"description" text,
"active" boolean NOT NULL,
"start_date" timestamp,
"end_date" timestamp,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"deleted_at" timestamp,
"usage_type" text NOT NULL,
CONSTRAINT "pk_promotions" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."promotions" IS 'Promotions that can be applied on order.';
COMMENT ON COLUMN "catalog"."promotions"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."promotions"."account_id" IS 'The unique identifier of an account.';
COMMENT ON COLUMN "catalog"."promotions"."product_id" IS 'The unique identifier of a product.';
COMMENT ON COLUMN "catalog"."promotions"."amount" IS 'The amount of discount the promotion gives.';
COMMENT ON COLUMN "catalog"."promotions"."discount_type" IS 'Type of the promotion discount, Can be: `flat`, `percent`.';
COMMENT ON COLUMN "catalog"."promotions"."code" IS 'The code of the promotion.';
COMMENT ON COLUMN "catalog"."promotions"."name" IS 'The name of the promotion.';
COMMENT ON COLUMN "catalog"."promotions"."description" IS 'The description of this promotion.';
COMMENT ON COLUMN "catalog"."promotions"."active" IS 'Indicates whether the promotion is active.';
COMMENT ON COLUMN "catalog"."promotions"."start_date" IS 'Timestamp of when the promotion will start working.';
COMMENT ON COLUMN "catalog"."promotions"."end_date" IS 'Timestamp of when the promotion will cease working.';
COMMENT ON COLUMN "catalog"."promotions"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."promotions"."updated_at" IS 'Timestamp of when a record was last updated.';
COMMENT ON COLUMN "catalog"."promotions"."deleted_at" IS 'Timestamp of when a record was soft deleted.';
COMMENT ON COLUMN "catalog"."promotions"."usage_type" IS 'Usage type of the promotion code. Can be: once-per-user, unlimited.';
CREATE TABLE "catalog"."tags" (
"id" integer NOT NULL,
"account_id" integer,
"name" text,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"deleted_at" timestamp,
CONSTRAINT "pk_tags" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."tags" IS 'A tag for filtering products.';
COMMENT ON COLUMN "catalog"."tags"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."tags"."account_id" IS 'The unique identifier of an account.';
COMMENT ON COLUMN "catalog"."tags"."name" IS 'The name of the tag.';
COMMENT ON COLUMN "catalog"."tags"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."tags"."updated_at" IS 'Timestamp of when a record was last updated.';
COMMENT ON COLUMN "catalog"."tags"."deleted_at" IS 'Timestamp of when a record was soft deleted.';
CREATE TABLE "catalog"."themes" (
"id" integer NOT NULL,
"name" text,
"css_content" text,
"themeable_type" text,
"themeable_id" integer,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"js_content" text,
"deleted_at" timestamp,
"js_file_name" text,
"js_content_type" text,
"js_file_size" integer,
"js_updated_at" timestamp,
"css_file_name" text,
"css_content_type" text,
"css_file_size" integer,
"css_updated_at" timestamp,
CONSTRAINT "pk_themes" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."themes" IS 'A theme belonging to an account or product.';
COMMENT ON COLUMN "catalog"."themes"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."themes"."name" IS 'The name of the theme.';
COMMENT ON COLUMN "catalog"."themes"."css_content" IS 'The content of the CSS file.';
COMMENT ON COLUMN "catalog"."themes"."themeable_type" IS 'The type of theme-able where the theme belongs.';
COMMENT ON COLUMN "catalog"."themes"."themeable_id" IS 'The account or product that the theme belongs to. The unique identifier of an account or product.';
COMMENT ON COLUMN "catalog"."themes"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."themes"."updated_at" IS 'Timestamp of when a record was updated.';
COMMENT ON COLUMN "catalog"."themes"."js_content" IS 'The content of the Javascript file.';
COMMENT ON COLUMN "catalog"."themes"."deleted_at" IS 'Timestamp of when a record was deleted.';
COMMENT ON COLUMN "catalog"."themes"."js_file_name" IS 'The name of the Javascript file.';
COMMENT ON COLUMN "catalog"."themes"."js_content_type" IS 'The content type of the Javascript file.';
COMMENT ON COLUMN "catalog"."themes"."js_file_size" IS 'The size of the Javascript file.';
COMMENT ON COLUMN "catalog"."themes"."js_updated_at" IS 'Timestamp of when the Javascript file updated.';
COMMENT ON COLUMN "catalog"."themes"."css_file_name" IS 'The name of the CSS file.';
COMMENT ON COLUMN "catalog"."themes"."css_content_type" IS 'The type of the CSS file.';
COMMENT ON COLUMN "catalog"."themes"."css_file_size" IS 'The size of the CSS file.';
COMMENT ON COLUMN "catalog"."themes"."css_updated_at" IS 'Timestamp when the CSS file updated.';
CREATE TABLE "catalog"."user_defined_fields" (
"id" integer NOT NULL,
"name" text,
"label" text,
"field_type" text NOT NULL,
"required" boolean NOT NULL,
"required_message" text,
"account_id" integer,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"list_order" integer,
"deleted_at" timestamp,
CONSTRAINT "pk_user_defined_fields" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."user_defined_fields" IS 'Custom fields for the user to submit at registration.';
COMMENT ON COLUMN "catalog"."user_defined_fields"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."user_defined_fields"."name" IS 'The name of the field.';
COMMENT ON COLUMN "catalog"."user_defined_fields"."label" IS 'The label of the field.';
COMMENT ON COLUMN "catalog"."user_defined_fields"."field_type" IS 'The type of the field.';
COMMENT ON COLUMN "catalog"."user_defined_fields"."required" IS 'Indicates whether the user defined field is required.';
COMMENT ON COLUMN "catalog"."user_defined_fields"."required_message" IS 'The required message for the field.';
COMMENT ON COLUMN "catalog"."user_defined_fields"."account_id" IS 'The account where the user registered. The unique identifier of an account.';
COMMENT ON COLUMN "catalog"."user_defined_fields"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."user_defined_fields"."updated_at" IS 'Timestamp of when a record was updated.';
COMMENT ON COLUMN "catalog"."user_defined_fields"."list_order" IS 'The order number for the field.';
COMMENT ON COLUMN "catalog"."user_defined_fields"."deleted_at" IS 'Timestamp of when a record was deleted.';
CREATE TABLE "catalog"."users" (
"id" bigint NOT NULL,
"root_account_id" integer NOT NULL,
"canvas_user_id" bigint NOT NULL,
"registered_account_id" integer,
"user_name" text,
"email_address" text,
"custom_fields" text NOT NULL,
"created_at" timestamp NOT NULL,
"updated_at" timestamp NOT NULL,
"time_zone" text,
"merged_into_user_id" bigint,
"deleted_at" timestamp,
CONSTRAINT "pk_users" PRIMARY KEY ("id")
);
COMMENT ON TABLE "catalog"."users" IS 'Users of the Catalog''s (sub)account.';
COMMENT ON COLUMN "catalog"."users"."id" IS 'The unique identifier for a record.';
COMMENT ON COLUMN "catalog"."users"."root_account_id" IS 'The root account of the account where the user registered. The unique identifier of an account.';
COMMENT ON COLUMN "catalog"."users"."canvas_user_id" IS 'The Canvas identifier of the user.';
COMMENT ON COLUMN "catalog"."users"."registered_account_id" IS 'The account where the user registered. The unique identifier of an account.';
COMMENT ON COLUMN "catalog"."users"."user_name" IS 'The name of the user.';
COMMENT ON COLUMN "catalog"."users"."email_address" IS 'The email address of the user.';
COMMENT ON COLUMN "catalog"."users"."custom_fields" IS 'Timestamp of when a record was updated.';
COMMENT ON COLUMN "catalog"."users"."created_at" IS 'Timestamp of when a record was created.';
COMMENT ON COLUMN "catalog"."users"."updated_at" IS 'Timestamp of when a record was updated.';
COMMENT ON COLUMN "catalog"."users"."time_zone" IS 'The time zone setting of the user.';
COMMENT ON COLUMN "catalog"."users"."merged_into_user_id" IS 'The user where the user merged into. The unique identifier of an user.';
COMMENT ON COLUMN "catalog"."users"."deleted_at" IS 'Timestamp of when a record was deleted.';
CREATE TYPE "canvas_logs"."ContextType" AS ENUM ('Account', 'AssessmentQuestion', 'Assignment', 'ContentMigration', 'Course', 'CourseSection', 'Group', 'Quizzes::QuizSubmission', 'StudentEnrollment', 'User', 'UserProfile');
CREATE TYPE "canvas_logs"."HTTPMethod" AS ENUM ('CONNECT', 'DELETE', 'GET', 'HEAD', 'OPTIONS', 'PATCH', 'POST', 'PUT', 'TRACE', 'SEARCH', 'PROPFIND', 'LOCK', 'REPORT', 'PURGE', 'MKCOL', 'PROPPATCH', 'CHECKOUT', 'UNLOCK', 'MERGE', 'NOTIFY', 'MOVE', 'COPY', 'UNSUBSCRIBE', 'MKACTIVITY', 'SUBSCRIBE');
CREATE TYPE "canvas_logs"."HTTPStatus" AS ENUM ('100', '101', '102', '103', '200', '201', '202', '203', '204', '205', '206', '207', '208', '226', '300', '301', '302', '303', '304', '305', '307', '308', '400', '401', '402', '403', '404', '405', '406', '407', '408', '409', '410', '411', '412', '413', '414', '415', '416', '417', '418', '421', '422', '423', '424', '425', '426', '428', '429', '431', '451', '500', '501', '502', '503', '504', '505', '506', '507', '508', '510', '511');
CREATE TYPE "canvas_logs"."HTTPVersion" AS ENUM ('0.9', '1.0', '1.1', '2.0');
CREATE TABLE "canvas_logs"."web_logs" (
"id" uuid NOT NULL,
"timestamp" timestamp NOT NULL,
"user_id" bigint,
"real_user_id" bigint,
"course_id" bigint,
"quiz_id" bigint,
"discussion_id" bigint,
"conversation_id" bigint,
"assignment_id" bigint,
"url" text NOT NULL,
"http_method" "canvas_logs"."HTTPMethod" NOT NULL,
"http_status" "canvas_logs"."HTTPStatus" NOT NULL,
"http_version" "canvas_logs"."HTTPVersion" NOT NULL,
"remote_ip" inet NOT NULL,
"interaction_micros" integer NOT NULL,
"web_application_controller" integer,
"web_application_action" integer,
"web_application_context_type" "canvas_logs"."ContextType",
"web_application_context_id" bigint,
"session_id" uuid,
"developer_key_id" bigint,
"participated" boolean NOT NULL,
"user_agent" varchar(255),
CONSTRAINT "pk_web_logs" PRIMARY KEY ("id")
);
COMMENT ON TABLE "canvas_logs"."web_logs" IS E'Stores the Canvas web application server access/request logs.\n\nLogs include all interactions made with your instance of Canvas, therefore some interactions are done by users that\nare not present in the `users` table (originated from another institution).\nNote: Logs older than the retention limit of 30 days are no longer available via DAP API.';
COMMENT ON COLUMN "canvas_logs"."web_logs"."id" IS 'The unique identifier for a logged web request.';
COMMENT ON COLUMN "canvas_logs"."web_logs"."timestamp" IS 'Timestamp when the request was made in UTC.';
COMMENT ON COLUMN "canvas_logs"."web_logs"."user_id" IS 'The unique ID of the user that made the request.';
COMMENT ON COLUMN "canvas_logs"."web_logs"."real_user_id" IS 'If the request was processed by one user masquerading as another, then this column contains the real user ID of the user.';
COMMENT ON COLUMN "canvas_logs"."web_logs"."course_id" IS 'Course that owned the request.';
COMMENT ON COLUMN "canvas_logs"."web_logs"."quiz_id" IS 'Identifies the quiz if the request is for a quiz.';
COMMENT ON COLUMN "canvas_logs"."web_logs"."discussion_id" IS 'Identifies the discussion if the request is for a discussion.';
COMMENT ON COLUMN "canvas_logs"."web_logs"."conversation_id" IS 'Identifies the conversation if the request is for a conversation.';
COMMENT ON COLUMN "canvas_logs"."web_logs"."assignment_id" IS 'Identifies the assignment if the request is for an assignment.';
COMMENT ON COLUMN "canvas_logs"."web_logs"."url" IS 'The path and the query string components of the requested URL.';
COMMENT ON COLUMN "canvas_logs"."web_logs"."http_method" IS 'HTTP method/verb (GET, POST, PUT, etc.) that was sent with the request.';
COMMENT ON COLUMN "canvas_logs"."web_logs"."http_status" IS 'HTTP status code of the request (e.g. 200 OK).';
COMMENT ON COLUMN "canvas_logs"."web_logs"."http_version" IS 'HTTP protocol version (e.g. HTTP/2.0).';
COMMENT ON COLUMN "canvas_logs"."web_logs"."remote_ip" IS 'IP (IPv4 or IPv6) address that was recorded for the request.';
COMMENT ON COLUMN "canvas_logs"."web_logs"."interaction_micros" IS 'Total time required to service the request in microseconds.';
COMMENT ON COLUMN "canvas_logs"."web_logs"."web_application_controller" IS 'The controller that the Canvas web application used to service this request.';
COMMENT ON COLUMN "canvas_logs"."web_logs"."web_application_action" IS 'The action in the Canvas web application used to service this request.';
COMMENT ON COLUMN "canvas_logs"."web_logs"."web_application_context_type" IS 'Containing object type that the Canvas web application used to service this request.';
COMMENT ON COLUMN "canvas_logs"."web_logs"."web_application_context_id" IS 'Containing object ID that the Canvas web application used to service this request.';
COMMENT ON COLUMN "canvas_logs"."web_logs"."session_id" IS 'ID of the user''s session where this request was made.';
COMMENT ON COLUMN "canvas_logs"."web_logs"."developer_key_id" IS 'ID of the developer who accessed this resource if the request was made by a developer.';
COMMENT ON COLUMN "canvas_logs"."web_logs"."participated" IS 'Shows whether the HTTP request is considered a participation for the user.';
COMMENT ON COLUMN "canvas_logs"."web_logs"."user_agent" IS 'The user agent string sent by the HTTP client.';
CREATE TABLE "canvas_logs"."Action" (
"id" integer GENERATED BY DEFAULT AS IDENTITY,
"value" varchar(64) NOT NULL,
CONSTRAINT "pk_Action" PRIMARY KEY ("id")
);
CREATE TABLE "canvas_logs"."Controller" (
"id" integer GENERATED BY DEFAULT AS IDENTITY,
"value" varchar(64) NOT NULL,
CONSTRAINT "pk_Controller" PRIMARY KEY ("id")
);
ALTER TABLE "canvas"."access_tokens"
ADD CONSTRAINT "fk_access_tokens_developer_key_id" FOREIGN KEY ("developer_key_id") REFERENCES "canvas"."developer_keys" ("id"),
ADD CONSTRAINT "fk_access_tokens_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_access_tokens_real_user_id" FOREIGN KEY ("real_user_id") REFERENCES "canvas"."users" ("id");
ALTER TABLE "canvas"."account_users"
ADD CONSTRAINT "fk_account_users_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_account_users_account_id" FOREIGN KEY ("account_id") REFERENCES "canvas"."accounts" ("id"),
ADD CONSTRAINT "fk_account_users_role_id" FOREIGN KEY ("role_id") REFERENCES "canvas"."roles" ("id");
ALTER TABLE "canvas"."accounts"
ADD CONSTRAINT "fk_accounts_parent_account_id" FOREIGN KEY ("parent_account_id") REFERENCES "canvas"."accounts" ("id");
ALTER TABLE "canvas"."assessment_questions"
ADD CONSTRAINT "fk_assessment_questions_assessment_question_bank_id" FOREIGN KEY ("assessment_question_bank_id") REFERENCES "canvas"."assessment_question_banks" ("id");
ALTER TABLE "canvas"."asset_user_accesses"
ADD CONSTRAINT "fk_asset_user_accesses_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id");
ALTER TABLE "canvas"."assignment_groups"
ADD CONSTRAINT "fk_assignment_groups_context_id" FOREIGN KEY ("context_id") REFERENCES "canvas"."courses" ("id");
ALTER TABLE "canvas"."assignment_override_students"
ADD CONSTRAINT "fk_assignment_override_students_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_assignment_override_students_assignment_id" FOREIGN KEY ("assignment_id") REFERENCES "canvas"."assignments" ("id"),
ADD CONSTRAINT "fk_assignment_override_students_quiz_id" FOREIGN KEY ("quiz_id") REFERENCES "canvas"."quizzes" ("id"),
ADD CONSTRAINT "fk_assignment_override_students_assignment_override_id" FOREIGN KEY ("assignment_override_id") REFERENCES "canvas"."assignment_overrides" ("id");
ALTER TABLE "canvas"."assignment_overrides"
ADD CONSTRAINT "fk_assignment_overrides_quiz_id" FOREIGN KEY ("quiz_id") REFERENCES "canvas"."quizzes" ("id"),
ADD CONSTRAINT "fk_assignment_overrides_assignment_id" FOREIGN KEY ("assignment_id") REFERENCES "canvas"."assignments" ("id");
ALTER TABLE "canvas"."assignments"
ADD CONSTRAINT "fk_assignments_assignment_group_id" FOREIGN KEY ("assignment_group_id") REFERENCES "canvas"."assignment_groups" ("id"),
ADD CONSTRAINT "fk_assignments_grading_standard_id" FOREIGN KEY ("grading_standard_id") REFERENCES "canvas"."grading_standards" ("id"),
ADD CONSTRAINT "fk_assignments_context_id" FOREIGN KEY ("context_id") REFERENCES "canvas"."courses" ("id"),
ADD CONSTRAINT "fk_assignments_group_category_id" FOREIGN KEY ("group_category_id") REFERENCES "canvas"."group_categories" ("id"),
ADD CONSTRAINT "fk_assignments_duplicate_of_id" FOREIGN KEY ("duplicate_of_id") REFERENCES "canvas"."assignments" ("id"),
ADD CONSTRAINT "fk_assignments_grader_section_id" FOREIGN KEY ("grader_section_id") REFERENCES "canvas"."course_sections" ("id"),
ADD CONSTRAINT "fk_assignments_final_grader_id" FOREIGN KEY ("final_grader_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_assignments_annotatable_attachment_id" FOREIGN KEY ("annotatable_attachment_id") REFERENCES "canvas"."attachments" ("id");
ALTER TABLE "canvas"."attachment_associations"
ADD CONSTRAINT "fk_attachment_associations_attachment_id" FOREIGN KEY ("attachment_id") REFERENCES "canvas"."attachments" ("id");
ALTER TABLE "canvas"."attachments"
ADD CONSTRAINT "fk_attachments_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_attachments_folder_id" FOREIGN KEY ("folder_id") REFERENCES "canvas"."folders" ("id"),
ADD CONSTRAINT "fk_attachments_replacement_attachment_id" FOREIGN KEY ("replacement_attachment_id") REFERENCES "canvas"."attachments" ("id"),
ADD CONSTRAINT "fk_attachments_usage_rights_id" FOREIGN KEY ("usage_rights_id") REFERENCES "canvas"."usage_rights" ("id"),
ADD CONSTRAINT "fk_attachments_root_attachment_id" FOREIGN KEY ("root_attachment_id") REFERENCES "canvas"."attachments" ("id");
ALTER TABLE "canvas"."calendar_events"
ADD CONSTRAINT "fk_calendar_events_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_calendar_events_parent_calendar_event_id" FOREIGN KEY ("parent_calendar_event_id") REFERENCES "canvas"."calendar_events" ("id"),
ADD CONSTRAINT "fk_calendar_events_web_conference_id" FOREIGN KEY ("web_conference_id") REFERENCES "canvas"."web_conferences" ("id");
ALTER TABLE "canvas"."canvadocs_annotation_contexts"
ADD CONSTRAINT "fk_canvadocs_annotation_contexts_attachment_id" FOREIGN KEY ("attachment_id") REFERENCES "canvas"."attachments" ("id"),
ADD CONSTRAINT "fk_canvadocs_annotation_contexts_submission_id" FOREIGN KEY ("submission_id") REFERENCES "canvas"."submissions" ("id");
ALTER TABLE "canvas"."collaborations"
ADD CONSTRAINT "fk_collaborations_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id");
ALTER TABLE "canvas"."comment_bank_items"
ADD CONSTRAINT "fk_comment_bank_items_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_comment_bank_items_course_id" FOREIGN KEY ("course_id") REFERENCES "canvas"."courses" ("id");
ALTER TABLE "canvas"."communication_channels"
ADD CONSTRAINT "fk_communication_channels_pseudonym_id" FOREIGN KEY ("pseudonym_id") REFERENCES "canvas"."pseudonyms" ("id"),
ADD CONSTRAINT "fk_communication_channels_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id");
ALTER TABLE "canvas"."content_migrations"
ADD CONSTRAINT "fk_content_migrations_attachment_id" FOREIGN KEY ("attachment_id") REFERENCES "canvas"."attachments" ("id"),
ADD CONSTRAINT "fk_content_migrations_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_content_migrations_overview_attachment_id" FOREIGN KEY ("overview_attachment_id") REFERENCES "canvas"."attachments" ("id"),
ADD CONSTRAINT "fk_content_migrations_exported_attachment_id" FOREIGN KEY ("exported_attachment_id") REFERENCES "canvas"."attachments" ("id"),
ADD CONSTRAINT "fk_content_migrations_source_course_id" FOREIGN KEY ("source_course_id") REFERENCES "canvas"."courses" ("id"),
ADD CONSTRAINT "fk_content_migrations_child_subscription_id" FOREIGN KEY ("child_subscription_id") REFERENCES "canvas"."master_courses_child_subscriptions" ("id");
ALTER TABLE "canvas"."content_participation_counts"
ADD CONSTRAINT "fk_content_participation_counts_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_content_participation_counts_context_id" FOREIGN KEY ("context_id") REFERENCES "canvas"."courses" ("id");
ALTER TABLE "canvas"."content_participations"
ADD CONSTRAINT "fk_content_participations_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_content_participations_content_id" FOREIGN KEY ("content_id") REFERENCES "canvas"."submissions" ("id");
ALTER TABLE "canvas"."content_shares"
ADD CONSTRAINT "fk_content_shares_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_content_shares_content_export_id" FOREIGN KEY ("content_export_id") REFERENCES "canvas"."content_exports" ("id"),
ADD CONSTRAINT "fk_content_shares_sender_id" FOREIGN KEY ("sender_id") REFERENCES "canvas"."users" ("id");
ALTER TABLE "canvas"."content_tags"
ADD CONSTRAINT "fk_content_tags_context_module_id" FOREIGN KEY ("context_module_id") REFERENCES "canvas"."context_modules" ("id"),
ADD CONSTRAINT "fk_content_tags_learning_outcome_id" FOREIGN KEY ("learning_outcome_id") REFERENCES "canvas"."learning_outcomes" ("id"),
ADD CONSTRAINT "fk_content_tags_associated_asset_id" FOREIGN KEY ("associated_asset_id") REFERENCES "canvas"."learning_outcome_groups" ("id");
ALTER TABLE "canvas"."context_external_tools"
ADD CONSTRAINT "fk_context_external_tools_developer_key_id" FOREIGN KEY ("developer_key_id") REFERENCES "canvas"."developer_keys" ("id");
ALTER TABLE "canvas"."context_module_progressions"
ADD CONSTRAINT "fk_context_module_progressions_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_context_module_progressions_context_module_id" FOREIGN KEY ("context_module_id") REFERENCES "canvas"."context_modules" ("id");
ALTER TABLE "canvas"."context_modules"
ADD CONSTRAINT "fk_context_modules_context_id" FOREIGN KEY ("context_id") REFERENCES "canvas"."courses" ("id");
ALTER TABLE "canvas"."conversation_message_participants"
ADD CONSTRAINT "fk_conversation_message_participants_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_conversation_message_participants_conversation_message_id" FOREIGN KEY ("conversation_message_id") REFERENCES "canvas"."conversation_messages" ("id"),
ADD CONSTRAINT "fk_conversation_message_participants_conversation_participant_id" FOREIGN KEY ("conversation_participant_id") REFERENCES "canvas"."conversation_participants" ("id");
ALTER TABLE "canvas"."conversation_messages"
ADD CONSTRAINT "fk_conversation_messages_context_id" FOREIGN KEY ("context_id") REFERENCES "canvas"."accounts" ("id"),
ADD CONSTRAINT "fk_conversation_messages_conversation_id" FOREIGN KEY ("conversation_id") REFERENCES "canvas"."conversations" ("id"),
ADD CONSTRAINT "fk_conversation_messages_author_id" FOREIGN KEY ("author_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_conversation_messages_asset_id" FOREIGN KEY ("asset_id") REFERENCES "canvas"."submissions" ("id");
ALTER TABLE "canvas"."conversation_participants"
ADD CONSTRAINT "fk_conversation_participants_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id");
ALTER TABLE "canvas"."course_account_associations"
ADD CONSTRAINT "fk_course_account_associations_course_id" FOREIGN KEY ("course_id") REFERENCES "canvas"."courses" ("id"),
ADD CONSTRAINT "fk_course_account_associations_account_id" FOREIGN KEY ("account_id") REFERENCES "canvas"."accounts" ("id"),
ADD CONSTRAINT "fk_course_account_associations_course_section_id" FOREIGN KEY ("course_section_id") REFERENCES "canvas"."course_sections" ("id");
ALTER TABLE "canvas"."course_sections"
ADD CONSTRAINT "fk_course_sections_course_id" FOREIGN KEY ("course_id") REFERENCES "canvas"."courses" ("id"),
ADD CONSTRAINT "fk_course_sections_sis_batch_id" FOREIGN KEY ("sis_batch_id") REFERENCES "canvas"."sis_batches" ("id"),
ADD CONSTRAINT "fk_course_sections_nonxlist_course_id" FOREIGN KEY ("nonxlist_course_id") REFERENCES "canvas"."courses" ("id"),
ADD CONSTRAINT "fk_course_sections_enrollment_term_id" FOREIGN KEY ("enrollment_term_id") REFERENCES "canvas"."enrollment_terms" ("id");
ALTER TABLE "canvas"."courses"
ADD CONSTRAINT "fk_courses_account_id" FOREIGN KEY ("account_id") REFERENCES "canvas"."accounts" ("id"),
ADD CONSTRAINT "fk_courses_grading_standard_id" FOREIGN KEY ("grading_standard_id") REFERENCES "canvas"."grading_standards" ("id"),
ADD CONSTRAINT "fk_courses_wiki_id" FOREIGN KEY ("wiki_id") REFERENCES "canvas"."wikis" ("id"),
ADD CONSTRAINT "fk_courses_abstract_course_id" FOREIGN KEY ("abstract_course_id") REFERENCES "canvas"."abstract_courses" ("id"),
ADD CONSTRAINT "fk_courses_enrollment_term_id" FOREIGN KEY ("enrollment_term_id") REFERENCES "canvas"."enrollment_terms" ("id"),
ADD CONSTRAINT "fk_courses_template_course_id" FOREIGN KEY ("template_course_id") REFERENCES "canvas"."courses" ("id"),
ADD CONSTRAINT "fk_courses_replacement_course_id" FOREIGN KEY ("replacement_course_id") REFERENCES "canvas"."courses" ("id"),
ADD CONSTRAINT "fk_courses_homeroom_course_id" FOREIGN KEY ("homeroom_course_id") REFERENCES "canvas"."courses" ("id");
ALTER TABLE "canvas"."custom_gradebook_column_data"
ADD CONSTRAINT "fk_custom_gradebook_column_data_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_custom_gradebook_column_data_custom_gradebook_column_id" FOREIGN KEY ("custom_gradebook_column_id") REFERENCES "canvas"."custom_gradebook_columns" ("id");
ALTER TABLE "canvas"."custom_gradebook_columns"
ADD CONSTRAINT "fk_custom_gradebook_columns_course_id" FOREIGN KEY ("course_id") REFERENCES "canvas"."courses" ("id");
ALTER TABLE "canvas"."developer_key_account_bindings"
ADD CONSTRAINT "fk_developer_key_account_bindings_account_id" FOREIGN KEY ("account_id") REFERENCES "canvas"."accounts" ("id"),
ADD CONSTRAINT "fk_developer_key_account_bindings_developer_key_id" FOREIGN KEY ("developer_key_id") REFERENCES "canvas"."developer_keys" ("id");
ALTER TABLE "canvas"."developer_keys"
ADD CONSTRAINT "fk_developer_keys_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_developer_keys_account_id" FOREIGN KEY ("account_id") REFERENCES "canvas"."accounts" ("id");
ALTER TABLE "canvas"."discussion_entries"
ADD CONSTRAINT "fk_discussion_entries_attachment_id" FOREIGN KEY ("attachment_id") REFERENCES "canvas"."attachments" ("id"),
ADD CONSTRAINT "fk_discussion_entries_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_discussion_entries_discussion_topic_id" FOREIGN KEY ("discussion_topic_id") REFERENCES "canvas"."discussion_topics" ("id"),
ADD CONSTRAINT "fk_discussion_entries_parent_id" FOREIGN KEY ("parent_id") REFERENCES "canvas"."discussion_entries" ("id"),
ADD CONSTRAINT "fk_discussion_entries_editor_id" FOREIGN KEY ("editor_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_discussion_entries_root_entry_id" FOREIGN KEY ("root_entry_id") REFERENCES "canvas"."discussion_entries" ("id");
ALTER TABLE "canvas"."discussion_entry_participants"
ADD CONSTRAINT "fk_discussion_entry_participants_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_discussion_entry_participants_discussion_entry_id" FOREIGN KEY ("discussion_entry_id") REFERENCES "canvas"."discussion_entries" ("id");
ALTER TABLE "canvas"."discussion_topic_participants"
ADD CONSTRAINT "fk_discussion_topic_participants_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_discussion_topic_participants_discussion_topic_id" FOREIGN KEY ("discussion_topic_id") REFERENCES "canvas"."discussion_topics" ("id");
ALTER TABLE "canvas"."discussion_topics"
ADD CONSTRAINT "fk_discussion_topics_attachment_id" FOREIGN KEY ("attachment_id") REFERENCES "canvas"."attachments" ("id"),
ADD CONSTRAINT "fk_discussion_topics_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_discussion_topics_assignment_id" FOREIGN KEY ("assignment_id") REFERENCES "canvas"."assignments" ("id"),
ADD CONSTRAINT "fk_discussion_topics_group_category_id" FOREIGN KEY ("group_category_id") REFERENCES "canvas"."group_categories" ("id"),
ADD CONSTRAINT "fk_discussion_topics_cloned_item_id" FOREIGN KEY ("cloned_item_id") REFERENCES "canvas"."cloned_items" ("id"),
ADD CONSTRAINT "fk_discussion_topics_root_topic_id" FOREIGN KEY ("root_topic_id") REFERENCES "canvas"."discussion_topics" ("id"),
ADD CONSTRAINT "fk_discussion_topics_old_assignment_id" FOREIGN KEY ("old_assignment_id") REFERENCES "canvas"."assignments" ("id"),
ADD CONSTRAINT "fk_discussion_topics_external_feed_id" FOREIGN KEY ("external_feed_id") REFERENCES "canvas"."external_feeds" ("id"),
ADD CONSTRAINT "fk_discussion_topics_editor_id" FOREIGN KEY ("editor_id") REFERENCES "canvas"."users" ("id");
ALTER TABLE "canvas"."enrollment_dates_overrides"
ADD CONSTRAINT "fk_enrollment_dates_overrides_context_id" FOREIGN KEY ("context_id") REFERENCES "canvas"."accounts" ("id"),
ADD CONSTRAINT "fk_enrollment_dates_overrides_enrollment_term_id" FOREIGN KEY ("enrollment_term_id") REFERENCES "canvas"."enrollment_terms" ("id");
ALTER TABLE "canvas"."enrollment_terms"
ADD CONSTRAINT "fk_enrollment_terms_sis_batch_id" FOREIGN KEY ("sis_batch_id") REFERENCES "canvas"."sis_batches" ("id"),
ADD CONSTRAINT "fk_enrollment_terms_grading_period_group_id" FOREIGN KEY ("grading_period_group_id") REFERENCES "canvas"."grading_period_groups" ("id");
ALTER TABLE "canvas"."enrollments"
ADD CONSTRAINT "fk_enrollments_sis_batch_id" FOREIGN KEY ("sis_batch_id") REFERENCES "canvas"."sis_batches" ("id"),
ADD CONSTRAINT "fk_enrollments_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_enrollments_role_id" FOREIGN KEY ("role_id") REFERENCES "canvas"."roles" ("id"),
ADD CONSTRAINT "fk_enrollments_course_id" FOREIGN KEY ("course_id") REFERENCES "canvas"."courses" ("id"),
ADD CONSTRAINT "fk_enrollments_course_section_id" FOREIGN KEY ("course_section_id") REFERENCES "canvas"."course_sections" ("id"),
ADD CONSTRAINT "fk_enrollments_associated_user_id" FOREIGN KEY ("associated_user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_enrollments_sis_pseudonym_id" FOREIGN KEY ("sis_pseudonym_id") REFERENCES "canvas"."pseudonyms" ("id");
ALTER TABLE "canvas"."favorites"
ADD CONSTRAINT "fk_favorites_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id");
ALTER TABLE "canvas"."folders"
ADD CONSTRAINT "fk_folders_cloned_item_id" FOREIGN KEY ("cloned_item_id") REFERENCES "canvas"."cloned_items" ("id"),
ADD CONSTRAINT "fk_folders_parent_folder_id" FOREIGN KEY ("parent_folder_id") REFERENCES "canvas"."folders" ("id");
ALTER TABLE "canvas"."grading_period_groups"
ADD CONSTRAINT "fk_grading_period_groups_account_id" FOREIGN KEY ("account_id") REFERENCES "canvas"."accounts" ("id"),
ADD CONSTRAINT "fk_grading_period_groups_course_id" FOREIGN KEY ("course_id") REFERENCES "canvas"."courses" ("id");
ALTER TABLE "canvas"."grading_periods"
ADD CONSTRAINT "fk_grading_periods_grading_period_group_id" FOREIGN KEY ("grading_period_group_id") REFERENCES "canvas"."grading_period_groups" ("id");
ALTER TABLE "canvas"."grading_standards"
ADD CONSTRAINT "fk_grading_standards_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id");
ALTER TABLE "canvas"."group_categories"
ADD CONSTRAINT "fk_group_categories_sis_batch_id" FOREIGN KEY ("sis_batch_id") REFERENCES "canvas"."sis_batches" ("id");
ALTER TABLE "canvas"."group_memberships"
ADD CONSTRAINT "fk_group_memberships_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_group_memberships_sis_batch_id" FOREIGN KEY ("sis_batch_id") REFERENCES "canvas"."sis_batches" ("id"),
ADD CONSTRAINT "fk_group_memberships_group_id" FOREIGN KEY ("group_id") REFERENCES "canvas"."groups" ("id");
ALTER TABLE "canvas"."groups"
ADD CONSTRAINT "fk_groups_account_id" FOREIGN KEY ("account_id") REFERENCES "canvas"."accounts" ("id"),
ADD CONSTRAINT "fk_groups_sis_batch_id" FOREIGN KEY ("sis_batch_id") REFERENCES "canvas"."sis_batches" ("id"),
ADD CONSTRAINT "fk_groups_group_category_id" FOREIGN KEY ("group_category_id") REFERENCES "canvas"."group_categories" ("id"),
ADD CONSTRAINT "fk_groups_wiki_id" FOREIGN KEY ("wiki_id") REFERENCES "canvas"."wikis" ("id"),
ADD CONSTRAINT "fk_groups_avatar_attachment_id" FOREIGN KEY ("avatar_attachment_id") REFERENCES "canvas"."attachments" ("id"),
ADD CONSTRAINT "fk_groups_leader_id" FOREIGN KEY ("leader_id") REFERENCES "canvas"."users" ("id");
ALTER TABLE "canvas"."late_policies"
ADD CONSTRAINT "fk_late_policies_course_id" FOREIGN KEY ("course_id") REFERENCES "canvas"."courses" ("id");
ALTER TABLE "canvas"."learning_outcome_groups"
ADD CONSTRAINT "fk_learning_outcome_groups_learning_outcome_group_id" FOREIGN KEY ("learning_outcome_group_id") REFERENCES "canvas"."learning_outcome_groups" ("id"),
ADD CONSTRAINT "fk_learning_outcome_groups_root_learning_outcome_group_id" FOREIGN KEY ("root_learning_outcome_group_id") REFERENCES "canvas"."learning_outcome_groups" ("id"),
ADD CONSTRAINT "fk_learning_outcome_groups_outcome_import_id" FOREIGN KEY ("outcome_import_id") REFERENCES "canvas"."outcome_imports" ("id"),
ADD CONSTRAINT "fk_learning_outcome_groups_source_outcome_group_id" FOREIGN KEY ("source_outcome_group_id") REFERENCES "canvas"."learning_outcome_groups" ("id");
ALTER TABLE "canvas"."learning_outcome_question_results"
ADD CONSTRAINT "fk_learning_outcome_question_results_learning_outcome_id" FOREIGN KEY ("learning_outcome_id") REFERENCES "canvas"."learning_outcomes" ("id"),
ADD CONSTRAINT "fk_learning_outcome_question_results_associated_asset_id" FOREIGN KEY ("associated_asset_id") REFERENCES "canvas"."assessment_questions" ("id"),
ADD CONSTRAINT "fk_learning_outcome_question_results_learning_outcome_result_id" FOREIGN KEY ("learning_outcome_result_id") REFERENCES "canvas"."learning_outcome_results" ("id");
ALTER TABLE "canvas"."learning_outcome_results"
ADD CONSTRAINT "fk_learning_outcome_results_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_learning_outcome_results_context_id" FOREIGN KEY ("context_id") REFERENCES "canvas"."courses" ("id"),
ADD CONSTRAINT "fk_learning_outcome_results_learning_outcome_id" FOREIGN KEY ("learning_outcome_id") REFERENCES "canvas"."learning_outcomes" ("id"),
ADD CONSTRAINT "fk_learning_outcome_results_content_tag_id" FOREIGN KEY ("content_tag_id") REFERENCES "canvas"."content_tags" ("id");
ALTER TABLE "canvas"."learning_outcomes"
ADD CONSTRAINT "fk_learning_outcomes_outcome_import_id" FOREIGN KEY ("outcome_import_id") REFERENCES "canvas"."outcome_imports" ("id");
ALTER TABLE "canvas"."lti_line_items"
ADD CONSTRAINT "fk_lti_line_items_assignment_id" FOREIGN KEY ("assignment_id") REFERENCES "canvas"."assignments" ("id"),
ADD CONSTRAINT "fk_lti_line_items_lti_resource_link_id" FOREIGN KEY ("lti_resource_link_id") REFERENCES "canvas"."lti_resource_links" ("id");
ALTER TABLE "canvas"."lti_resource_links"
ADD CONSTRAINT "fk_lti_resource_links_context_external_tool_id" FOREIGN KEY ("context_external_tool_id") REFERENCES "canvas"."context_external_tools" ("id");
ALTER TABLE "canvas"."lti_results"
ADD CONSTRAINT "fk_lti_results_submission_id" FOREIGN KEY ("submission_id") REFERENCES "canvas"."submissions" ("id"),
ADD CONSTRAINT "fk_lti_results_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_lti_results_lti_line_item_id" FOREIGN KEY ("lti_line_item_id") REFERENCES "canvas"."lti_line_items" ("id");
ALTER TABLE "canvas"."master_courses_child_content_tags"
ADD CONSTRAINT "fk_master_courses_child_content_tags_child_subscription_id" FOREIGN KEY ("child_subscription_id") REFERENCES "canvas"."master_courses_child_subscriptions" ("id");
ALTER TABLE "canvas"."master_courses_child_subscriptions"
ADD CONSTRAINT "fk_master_courses_child_subscriptions_master_template_id" FOREIGN KEY ("master_template_id") REFERENCES "canvas"."master_courses_master_templates" ("id"),
ADD CONSTRAINT "fk_master_courses_child_subscriptions_child_course_id" FOREIGN KEY ("child_course_id") REFERENCES "canvas"."courses" ("id");
ALTER TABLE "canvas"."master_courses_master_content_tags"
ADD CONSTRAINT "fk_master_courses_master_content_tags_master_template_id" FOREIGN KEY ("master_template_id") REFERENCES "canvas"."master_courses_master_templates" ("id");
ALTER TABLE "canvas"."master_courses_master_migrations"
ADD CONSTRAINT "fk_master_courses_master_migrations_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_master_courses_master_migrations_master_template_id" FOREIGN KEY ("master_template_id") REFERENCES "canvas"."master_courses_master_templates" ("id");
ALTER TABLE "canvas"."master_courses_master_templates"
ADD CONSTRAINT "fk_master_courses_master_templates_course_id" FOREIGN KEY ("course_id") REFERENCES "canvas"."courses" ("id"),
ADD CONSTRAINT "fk_master_courses_master_templates_active_migration_id" FOREIGN KEY ("active_migration_id") REFERENCES "canvas"."master_courses_master_migrations" ("id");
ALTER TABLE "canvas"."master_courses_migration_results"
ADD CONSTRAINT "fk_master_courses_migration_results_child_subscription_id" FOREIGN KEY ("child_subscription_id") REFERENCES "canvas"."master_courses_child_subscriptions" ("id"),
ADD CONSTRAINT "fk_master_courses_migration_results_master_migration_id" FOREIGN KEY ("master_migration_id") REFERENCES "canvas"."master_courses_master_migrations" ("id"),
ADD CONSTRAINT "fk_master_courses_migration_results_content_migration_id" FOREIGN KEY ("content_migration_id") REFERENCES "canvas"."content_migrations" ("id");
ALTER TABLE "canvas"."originality_reports"
ADD CONSTRAINT "fk_originality_reports_attachment_id" FOREIGN KEY ("attachment_id") REFERENCES "canvas"."attachments" ("id"),
ADD CONSTRAINT "fk_originality_reports_submission_id" FOREIGN KEY ("submission_id") REFERENCES "canvas"."submissions" ("id");
ALTER TABLE "canvas"."outcome_proficiency_ratings"
ADD CONSTRAINT "fk_outcome_proficiency_ratings_outcome_proficiency_id" FOREIGN KEY ("outcome_proficiency_id") REFERENCES "canvas"."outcome_proficiencies" ("id");
ALTER TABLE "canvas"."post_policies"
ADD CONSTRAINT "fk_post_policies_course_id" FOREIGN KEY ("course_id") REFERENCES "canvas"."courses" ("id"),
ADD CONSTRAINT "fk_post_policies_assignment_id" FOREIGN KEY ("assignment_id") REFERENCES "canvas"."assignments" ("id");
ALTER TABLE "canvas"."pseudonyms"
ADD CONSTRAINT "fk_pseudonyms_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_pseudonyms_account_id" FOREIGN KEY ("account_id") REFERENCES "canvas"."accounts" ("id"),
ADD CONSTRAINT "fk_pseudonyms_sis_batch_id" FOREIGN KEY ("sis_batch_id") REFERENCES "canvas"."sis_batches" ("id"),
ADD CONSTRAINT "fk_pseudonyms_authentication_provider_id" FOREIGN KEY ("authentication_provider_id") REFERENCES "canvas"."authentication_providers" ("id");
ALTER TABLE "canvas"."quiz_groups"
ADD CONSTRAINT "fk_quiz_groups_assessment_question_bank_id" FOREIGN KEY ("assessment_question_bank_id") REFERENCES "canvas"."assessment_question_banks" ("id"),
ADD CONSTRAINT "fk_quiz_groups_quiz_id" FOREIGN KEY ("quiz_id") REFERENCES "canvas"."quizzes" ("id");
ALTER TABLE "canvas"."quiz_questions"
ADD CONSTRAINT "fk_quiz_questions_quiz_id" FOREIGN KEY ("quiz_id") REFERENCES "canvas"."quizzes" ("id"),
ADD CONSTRAINT "fk_quiz_questions_quiz_group_id" FOREIGN KEY ("quiz_group_id") REFERENCES "canvas"."quiz_groups" ("id"),
ADD CONSTRAINT "fk_quiz_questions_assessment_question_id" FOREIGN KEY ("assessment_question_id") REFERENCES "canvas"."assessment_questions" ("id");
ALTER TABLE "canvas"."quiz_submissions"
ADD CONSTRAINT "fk_quiz_submissions_submission_id" FOREIGN KEY ("submission_id") REFERENCES "canvas"."submissions" ("id"),
ADD CONSTRAINT "fk_quiz_submissions_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_quiz_submissions_quiz_id" FOREIGN KEY ("quiz_id") REFERENCES "canvas"."quizzes" ("id");
ALTER TABLE "canvas"."quizzes"
ADD CONSTRAINT "fk_quizzes_assignment_group_id" FOREIGN KEY ("assignment_group_id") REFERENCES "canvas"."assignment_groups" ("id"),
ADD CONSTRAINT "fk_quizzes_context_id" FOREIGN KEY ("context_id") REFERENCES "canvas"."courses" ("id"),
ADD CONSTRAINT "fk_quizzes_assignment_id" FOREIGN KEY ("assignment_id") REFERENCES "canvas"."assignments" ("id");
ALTER TABLE "canvas"."role_overrides"
ADD CONSTRAINT "fk_role_overrides_role_id" FOREIGN KEY ("role_id") REFERENCES "canvas"."roles" ("id"),
ADD CONSTRAINT "fk_role_overrides_context_id" FOREIGN KEY ("context_id") REFERENCES "canvas"."accounts" ("id");
ALTER TABLE "canvas"."roles"
ADD CONSTRAINT "fk_roles_account_id" FOREIGN KEY ("account_id") REFERENCES "canvas"."accounts" ("id");
ALTER TABLE "canvas"."rubric_assessments"
ADD CONSTRAINT "fk_rubric_assessments_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_rubric_assessments_rubric_association_id" FOREIGN KEY ("rubric_association_id") REFERENCES "canvas"."rubric_associations" ("id"),
ADD CONSTRAINT "fk_rubric_assessments_rubric_id" FOREIGN KEY ("rubric_id") REFERENCES "canvas"."rubrics" ("id"),
ADD CONSTRAINT "fk_rubric_assessments_assessor_id" FOREIGN KEY ("assessor_id") REFERENCES "canvas"."users" ("id");
ALTER TABLE "canvas"."rubric_associations"
ADD CONSTRAINT "fk_rubric_associations_rubric_id" FOREIGN KEY ("rubric_id") REFERENCES "canvas"."rubrics" ("id");
ALTER TABLE "canvas"."rubrics"
ADD CONSTRAINT "fk_rubrics_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id");
ALTER TABLE "canvas"."score_statistics"
ADD CONSTRAINT "fk_score_statistics_assignment_id" FOREIGN KEY ("assignment_id") REFERENCES "canvas"."assignments" ("id");
ALTER TABLE "canvas"."scores"
ADD CONSTRAINT "fk_scores_assignment_group_id" FOREIGN KEY ("assignment_group_id") REFERENCES "canvas"."assignment_groups" ("id"),
ADD CONSTRAINT "fk_scores_enrollment_id" FOREIGN KEY ("enrollment_id") REFERENCES "canvas"."enrollments" ("id"),
ADD CONSTRAINT "fk_scores_grading_period_id" FOREIGN KEY ("grading_period_id") REFERENCES "canvas"."grading_periods" ("id");
ALTER TABLE "canvas"."submission_comments"
ADD CONSTRAINT "fk_submission_comments_submission_id" FOREIGN KEY ("submission_id") REFERENCES "canvas"."submissions" ("id"),
ADD CONSTRAINT "fk_submission_comments_context_id" FOREIGN KEY ("context_id") REFERENCES "canvas"."courses" ("id"),
ADD CONSTRAINT "fk_submission_comments_author_id" FOREIGN KEY ("author_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_submission_comments_assessment_request_id" FOREIGN KEY ("assessment_request_id") REFERENCES "canvas"."assessment_requests" ("id"),
ADD CONSTRAINT "fk_submission_comments_provisional_grade_id" FOREIGN KEY ("provisional_grade_id") REFERENCES "canvas"."moderated_grading_provisional_grades" ("id");
ALTER TABLE "canvas"."submission_versions"
ADD CONSTRAINT "fk_submission_versions_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_submission_versions_context_id" FOREIGN KEY ("context_id") REFERENCES "canvas"."courses" ("id"),
ADD CONSTRAINT "fk_submission_versions_assignment_id" FOREIGN KEY ("assignment_id") REFERENCES "canvas"."assignments" ("id"),
ADD CONSTRAINT "fk_submission_versions_version_id" FOREIGN KEY ("version_id") REFERENCES "canvas"."versions" ("id");
ALTER TABLE "canvas"."submissions"
ADD CONSTRAINT "fk_submissions_attachment_id" FOREIGN KEY ("attachment_id") REFERENCES "canvas"."attachments" ("id"),
ADD CONSTRAINT "fk_submissions_course_id" FOREIGN KEY ("course_id") REFERENCES "canvas"."courses" ("id"),
ADD CONSTRAINT "fk_submissions_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_submissions_assignment_id" FOREIGN KEY ("assignment_id") REFERENCES "canvas"."assignments" ("id"),
ADD CONSTRAINT "fk_submissions_group_id" FOREIGN KEY ("group_id") REFERENCES "canvas"."groups" ("id"),
ADD CONSTRAINT "fk_submissions_quiz_submission_id" FOREIGN KEY ("quiz_submission_id") REFERENCES "canvas"."quiz_submissions" ("id"),
ADD CONSTRAINT "fk_submissions_grading_period_id" FOREIGN KEY ("grading_period_id") REFERENCES "canvas"."grading_periods" ("id"),
ADD CONSTRAINT "fk_submissions_grader_id" FOREIGN KEY ("grader_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_submissions_media_object_id" FOREIGN KEY ("media_object_id") REFERENCES "canvas"."media_objects" ("id");
ALTER TABLE "canvas"."user_account_associations"
ADD CONSTRAINT "fk_user_account_associations_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_user_account_associations_account_id" FOREIGN KEY ("account_id") REFERENCES "canvas"."accounts" ("id");
ALTER TABLE "canvas"."users"
ADD CONSTRAINT "fk_users_merged_into_user_id" FOREIGN KEY ("merged_into_user_id") REFERENCES "canvas"."users" ("id");
ALTER TABLE "canvas"."web_conference_participants"
ADD CONSTRAINT "fk_web_conference_participants_web_conference_id" FOREIGN KEY ("web_conference_id") REFERENCES "canvas"."web_conferences" ("id"),
ADD CONSTRAINT "fk_web_conference_participants_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id");
ALTER TABLE "canvas"."web_conferences"
ADD CONSTRAINT "fk_web_conferences_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id");
ALTER TABLE "canvas"."wiki_pages"
ADD CONSTRAINT "fk_wiki_pages_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_wiki_pages_assignment_id" FOREIGN KEY ("assignment_id") REFERENCES "canvas"."assignments" ("id"),
ADD CONSTRAINT "fk_wiki_pages_wiki_id" FOREIGN KEY ("wiki_id") REFERENCES "canvas"."wikis" ("id"),
ADD CONSTRAINT "fk_wiki_pages_old_assignment_id" FOREIGN KEY ("old_assignment_id") REFERENCES "canvas"."assignments" ("id");
ALTER TABLE "catalog"."account_admins"
ADD CONSTRAINT "fk_account_admins_canvas_user_id" FOREIGN KEY ("canvas_user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_account_admins_account_id" FOREIGN KEY ("account_id") REFERENCES "catalog"."accounts" ("id"),
ADD CONSTRAINT "fk_account_admins_root_account_id" FOREIGN KEY ("root_account_id") REFERENCES "catalog"."accounts" ("id");
ALTER TABLE "catalog"."accounts"
ADD CONSTRAINT "fk_accounts_parent_id" FOREIGN KEY ("parent_id") REFERENCES "catalog"."accounts" ("id");
ALTER TABLE "catalog"."applicants"
ADD CONSTRAINT "fk_applicants_product_id" FOREIGN KEY ("product_id") REFERENCES "catalog"."products" ("id"),
ADD CONSTRAINT "fk_applicants_canvas_user_id" FOREIGN KEY ("canvas_user_id") REFERENCES "canvas"."users" ("id");
ALTER TABLE "catalog"."bulk_checkout_promotions"
ADD CONSTRAINT "fk_bulk_checkout_promotions_promotion_id" FOREIGN KEY ("promotion_id") REFERENCES "catalog"."promotions" ("id");
ALTER TABLE "catalog"."bulk_checkouts"
ADD CONSTRAINT "fk_bulk_checkouts_canvas_user_id" FOREIGN KEY ("canvas_user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_bulk_checkouts_product_id" FOREIGN KEY ("product_id") REFERENCES "catalog"."products" ("id"),
ADD CONSTRAINT "fk_bulk_checkouts_account_id" FOREIGN KEY ("account_id") REFERENCES "catalog"."accounts" ("id"),
ADD CONSTRAINT "fk_bulk_checkouts_order_id" FOREIGN KEY ("order_id") REFERENCES "catalog"."orders" ("id");
ALTER TABLE "catalog"."bulk_invitations"
ADD CONSTRAINT "fk_bulk_invitations_order_item_id" FOREIGN KEY ("order_item_id") REFERENCES "catalog"."order_items" ("id"),
ADD CONSTRAINT "fk_bulk_invitations_product_id" FOREIGN KEY ("product_id") REFERENCES "catalog"."products" ("id"),
ADD CONSTRAINT "fk_bulk_invitations_enrollment_id" FOREIGN KEY ("enrollment_id") REFERENCES "catalog"."enrollments" ("id");
ALTER TABLE "catalog"."cart_item_promotions"
ADD CONSTRAINT "fk_cart_item_promotions_cart_item_id" FOREIGN KEY ("cart_item_id") REFERENCES "catalog"."cart_items" ("id"),
ADD CONSTRAINT "fk_cart_item_promotions_promotion_id" FOREIGN KEY ("promotion_id") REFERENCES "catalog"."promotions" ("id");
ALTER TABLE "catalog"."cart_items"
ADD CONSTRAINT "fk_cart_items_cart_id" FOREIGN KEY ("cart_id") REFERENCES "catalog"."carts" ("id"),
ADD CONSTRAINT "fk_cart_items_product_id" FOREIGN KEY ("product_id") REFERENCES "catalog"."products" ("id");
ALTER TABLE "catalog"."carts"
ADD CONSTRAINT "fk_carts_account_id" FOREIGN KEY ("account_id") REFERENCES "catalog"."accounts" ("id"),
ADD CONSTRAINT "fk_carts_canvas_user_id" FOREIGN KEY ("canvas_user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_carts_order_id" FOREIGN KEY ("order_id") REFERENCES "catalog"."orders" ("id"),
ADD CONSTRAINT "fk_carts_root_account_id" FOREIGN KEY ("root_account_id") REFERENCES "catalog"."accounts" ("id");
ALTER TABLE "catalog"."categories"
ADD CONSTRAINT "fk_categories_account_id" FOREIGN KEY ("account_id") REFERENCES "catalog"."accounts" ("id");
ALTER TABLE "catalog"."certificate_templates"
ADD CONSTRAINT "fk_certificate_templates_account_id" FOREIGN KEY ("account_id") REFERENCES "catalog"."accounts" ("id");
ALTER TABLE "catalog"."certificates"
ADD CONSTRAINT "fk_certificates_product_id" FOREIGN KEY ("product_id") REFERENCES "catalog"."products" ("id"),
ADD CONSTRAINT "fk_certificates_certificate_template_id" FOREIGN KEY ("certificate_template_id") REFERENCES "catalog"."certificate_templates" ("id"),
ADD CONSTRAINT "fk_certificates_custom_template_id" FOREIGN KEY ("custom_template_id") REFERENCES "catalog"."certificate_templates" ("id");
ALTER TABLE "catalog"."custom_emails"
ADD CONSTRAINT "fk_custom_emails_account_id" FOREIGN KEY ("account_id") REFERENCES "catalog"."accounts" ("id");
ALTER TABLE "catalog"."email_layouts"
ADD CONSTRAINT "fk_email_layouts_account_id" FOREIGN KEY ("account_id") REFERENCES "catalog"."accounts" ("id");
ALTER TABLE "catalog"."enrollments"
ADD CONSTRAINT "fk_enrollments_canvas_user_id" FOREIGN KEY ("canvas_user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_enrollments_product_id" FOREIGN KEY ("product_id") REFERENCES "catalog"."products" ("id"),
ADD CONSTRAINT "fk_enrollments_root_program_id" FOREIGN KEY ("root_program_id") REFERENCES "catalog"."products" ("id"),
ADD CONSTRAINT "fk_enrollments_external_id" FOREIGN KEY ("external_id") REFERENCES "canvas"."enrollments" ("id"),
ADD CONSTRAINT "fk_enrollments_order_item_id" FOREIGN KEY ("order_item_id") REFERENCES "catalog"."order_items" ("id");
ALTER TABLE "catalog"."order_item_promotions"
ADD CONSTRAINT "fk_order_item_promotions_order_item_id" FOREIGN KEY ("order_item_id") REFERENCES "catalog"."order_items" ("id"),
ADD CONSTRAINT "fk_order_item_promotions_promotion_id" FOREIGN KEY ("promotion_id") REFERENCES "catalog"."promotions" ("id");
ALTER TABLE "catalog"."order_items"
ADD CONSTRAINT "fk_order_items_order_id" FOREIGN KEY ("order_id") REFERENCES "catalog"."orders" ("id"),
ADD CONSTRAINT "fk_order_items_item_id" FOREIGN KEY ("item_id") REFERENCES "catalog"."products" ("id");
ALTER TABLE "catalog"."orders"
ADD CONSTRAINT "fk_orders_account_id" FOREIGN KEY ("account_id") REFERENCES "catalog"."accounts" ("id"),
ADD CONSTRAINT "fk_orders_canvas_user_id" FOREIGN KEY ("canvas_user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_orders_user_id" FOREIGN KEY ("user_id") REFERENCES "catalog"."users" ("id");
ALTER TABLE "catalog"."payments"
ADD CONSTRAINT "fk_payments_order_id" FOREIGN KEY ("order_id") REFERENCES "catalog"."orders" ("id");
ALTER TABLE "catalog"."product_images"
ADD CONSTRAINT "fk_product_images_product_id" FOREIGN KEY ("product_id") REFERENCES "catalog"."products" ("id");
ALTER TABLE "catalog"."product_tags"
ADD CONSTRAINT "fk_product_tags_product_id" FOREIGN KEY ("product_id") REFERENCES "catalog"."products" ("id"),
ADD CONSTRAINT "fk_product_tags_tag_id" FOREIGN KEY ("tag_id") REFERENCES "catalog"."tags" ("id");
ALTER TABLE "catalog"."products"
ADD CONSTRAINT "fk_products_canvas_course_id" FOREIGN KEY ("canvas_course_id") REFERENCES "canvas"."courses" ("id"),
ADD CONSTRAINT "fk_products_account_id" FOREIGN KEY ("account_id") REFERENCES "catalog"."accounts" ("id");
ALTER TABLE "catalog"."program_requirements"
ADD CONSTRAINT "fk_program_requirements_program_id" FOREIGN KEY ("program_id") REFERENCES "catalog"."products" ("id"),
ADD CONSTRAINT "fk_program_requirements_product_id" FOREIGN KEY ("product_id") REFERENCES "catalog"."products" ("id");
ALTER TABLE "catalog"."promotions"
ADD CONSTRAINT "fk_promotions_account_id" FOREIGN KEY ("account_id") REFERENCES "catalog"."accounts" ("id"),
ADD CONSTRAINT "fk_promotions_product_id" FOREIGN KEY ("product_id") REFERENCES "catalog"."products" ("id");
ALTER TABLE "catalog"."tags"
ADD CONSTRAINT "fk_tags_account_id" FOREIGN KEY ("account_id") REFERENCES "catalog"."accounts" ("id");
ALTER TABLE "catalog"."user_defined_fields"
ADD CONSTRAINT "fk_user_defined_fields_account_id" FOREIGN KEY ("account_id") REFERENCES "catalog"."accounts" ("id");
ALTER TABLE "catalog"."users"
ADD CONSTRAINT "fk_users_root_account_id" FOREIGN KEY ("root_account_id") REFERENCES "catalog"."accounts" ("id"),
ADD CONSTRAINT "fk_users_canvas_user_id" FOREIGN KEY ("canvas_user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_users_registered_account_id" FOREIGN KEY ("registered_account_id") REFERENCES "catalog"."accounts" ("id"),
ADD CONSTRAINT "fk_users_merged_into_user_id" FOREIGN KEY ("merged_into_user_id") REFERENCES "catalog"."users" ("id");
ALTER TABLE "canvas_logs"."web_logs"
ADD CONSTRAINT "fk_web_logs_user_id" FOREIGN KEY ("user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_web_logs_real_user_id" FOREIGN KEY ("real_user_id") REFERENCES "canvas"."users" ("id"),
ADD CONSTRAINT "fk_web_logs_course_id" FOREIGN KEY ("course_id") REFERENCES "canvas"."courses" ("id"),
ADD CONSTRAINT "fk_web_logs_quiz_id" FOREIGN KEY ("quiz_id") REFERENCES "canvas"."quizzes" ("id"),
ADD CONSTRAINT "fk_web_logs_discussion_id" FOREIGN KEY ("discussion_id") REFERENCES "canvas"."discussion_topics" ("id"),
ADD CONSTRAINT "fk_web_logs_conversation_id" FOREIGN KEY ("conversation_id") REFERENCES "canvas"."conversations" ("id"),
ADD CONSTRAINT "fk_web_logs_assignment_id" FOREIGN KEY ("assignment_id") REFERENCES "canvas"."assignments" ("id"),
ADD CONSTRAINT "fk_web_logs_developer_key_id" FOREIGN KEY ("developer_key_id") REFERENCES "canvas"."developer_keys" ("id"),
ADD CONSTRAINT "fk_web_logs_web_application_controller" FOREIGN KEY ("web_application_controller") REFERENCES "canvas_logs"."Controller" ("id"),
ADD CONSTRAINT "fk_web_logs_web_application_action" FOREIGN KEY ("web_application_action") REFERENCES "canvas_logs"."Action" ("id");
ALTER TABLE "canvas_logs"."Action"
ADD CONSTRAINT "uq_Action" UNIQUE ("value");
ALTER TABLE "canvas_logs"."Controller"
ADD CONSTRAINT "uq_Controller" UNIQUE ("value");